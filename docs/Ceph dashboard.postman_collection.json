{
	"info": {
		"_postman_id": "49226d59-149b-bd79-a89c-080affa903b6",
		"name": "Ceph dashboard",
		"description": "Ceph dashboard API collections.\n\nCeph dashboard API 文档",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"admin\",\"password\":\"admin\"}"
						},
						"url": {
							"raw": "http://localhost:4200/api/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"auth"
							]
						},
						"description": "Log into the Ceph dashboard with username and password given.\n\n通过输入用户名和密码进行ceph dashboard的首次登录。"
					},
					"response": [
						{
							"name": "login successfully - example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"username\":\"admin\",\"password\":\"admin\"}"
								},
								"url": {
									"raw": "http://localhost:4200/api/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"auth"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 06:03:42 GMT"
								},
								{
									"key": "authorization",
									"value": "Bearer: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjljYzNjZWUyLWMyZmItNGRkOS1hMDJhLTk4YmY2YjA2MzZjMSIsImV4cCI6MTU0Njk1NjIyMywiaWF0IjoxNTQ2OTI3NDIzLCJ1c2VybmFtZSI6ImFkbWluIn0.oMWM36V8vRLlP_EcXYqVLhuf9TNmWcxOZG2TiSCtZDg"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "399"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjljYzNjZWUyLWMyZmItNGRkOS1hMDJhLTk4YmY2YjA2MzZjMSIsImV4cCI6MTU0Njk1NjIyMywiaWF0IjoxNTQ2OTI3NDIzLCJ1c2VybmFtZSI6ImFkbWluIn0.oMWM36V8vRLlP_EcXYqVLhuf9TNmWcxOZG2TiSCtZDg\",\n    \"username\": \"admin\",\n    \"permissions\": {\n        \"cephfs\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"config-opt\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"dashboard-settings\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"grafana\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"hosts\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"iscsi\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"log\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"manager\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"monitor\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"osd\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"pool\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"rbd-image\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"rbd-mirroring\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"rgw\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ],\n        \"user\": [\n            \"create\",\n            \"delete\",\n            \"read\",\n            \"update\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjZjMGQ2YzI0LWIyMDAtNGM2Ny1iYTE3LTBhYzJkNWYxMDZlYyIsImV4cCI6MTU0Njk2ODUwMSwiaWF0IjoxNTQ2OTM5NzAxLCJ1c2VybmFtZSI6ImFkbWluIn0.MvS_7o8U4CxZOuT9onGkT9D8h5pir8jQnPSELTZoUhc"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "logout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6ImUyNGU4NmZjLWIyMTktNDY3My04MzU3LTA5MzYyMjc1ZWY0MiIsImV4cCI6MTU0Njg3MDY2OCwiaWF0IjoxNTQ2ODQxODY4LCJ1c2VybmFtZSI6ImFkbWluIn0.601VVauOhVq-uxymBPzmc7zC1WwTex8JiwCQ7Xr7HBQ"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/auth/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"auth",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": "The type of encoding used on the data."
								},
								{
									"key": "content-length",
									"value": "47",
									"name": "content-length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": "The mime type of this content"
								},
								{
									"key": "date",
									"value": "Mon, 07 Jan 2019 06:46:38 GMT",
									"name": "date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": "A name for the server"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"body": "{\"redirect_url\": \"#/login\"}"
						}
					]
				}
			],
			"description": "Ceph dashboard首次登录通过用户名/密码方式进行认证。\n\n在首次登录成功后返回token以供之后的API请求使用。",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "44385aee-a7d9-4116-bb37-3b605c4338b4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aaf87eb4-f6cf-4183-8255-2c9029b8c532",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Monitor",
			"item": [
				{
					"name": "monitors info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/monitor",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"monitor"
							]
						}
					},
					"response": [
						{
							"name": "monitors info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/monitor",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"monitor"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:33:09 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "691"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"mon_status\": {\n        \"name\": \"a\",\n        \"rank\": 0,\n        \"state\": \"leader\",\n        \"election_epoch\": 8,\n        \"quorum\": [\n            0,\n            1,\n            2\n        ],\n        \"quorum_age\": 6040,\n        \"features\": {\n            \"required_con\": \"2449958747315912708\",\n            \"required_mon\": [\n                \"kraken\",\n                \"luminous\",\n                \"mimic\",\n                \"osdmap-prune\",\n                \"nautilus\"\n            ],\n            \"quorum_con\": \"4611087854031142911\",\n            \"quorum_mon\": [\n                \"kraken\",\n                \"luminous\",\n                \"mimic\",\n                \"osdmap-prune\",\n                \"nautilus\"\n            ]\n        },\n        \"outside_quorum\": [],\n        \"extra_probe_peers\": [],\n        \"sync_provider\": [],\n        \"monmap\": {\n            \"epoch\": 1,\n            \"fsid\": \"b8577bde-0239-43fa-b6b5-547b4476db8e\",\n            \"modified\": \"2019-01-08 07:52:16.342024\",\n            \"created\": \"2019-01-08 07:52:16.342024\",\n            \"features\": {\n                \"persistent\": [\n                    \"kraken\",\n                    \"luminous\",\n                    \"mimic\",\n                    \"osdmap-prune\",\n                    \"nautilus\"\n                ],\n                \"optional\": []\n            },\n            \"mons\": [\n                {\n                    \"rank\": 0,\n                    \"name\": \"a\",\n                    \"addr\": \"10.42.0.1:40413/0\",\n                    \"public_addr\": \"10.42.0.1:40413/0\",\n                    \"stats\": {\n                        \"num_sessions\": [\n                            [\n                                1546939893,\n                                9\n                            ],\n                            [\n                                1546939898,\n                                9\n                            ],\n                            [\n                                1546939903,\n                                9\n                            ],\n                            [\n                                1546939908,\n                                9\n                            ],\n                            [\n                                1546939913,\n                                9\n                            ],\n                            [\n                                1546939918,\n                                9\n                            ],\n                            [\n                                1546939923,\n                                9\n                            ],\n                            [\n                                1546939928,\n                                9\n                            ],\n                            [\n                                1546939933,\n                                9\n                            ],\n                            [\n                                1546939938,\n                                9\n                            ],\n                            [\n                                1546939943,\n                                9\n                            ],\n                            [\n                                1546939948,\n                                9\n                            ],\n                            [\n                                1546939953,\n                                9\n                            ],\n                            [\n                                1546939958,\n                                9\n                            ],\n                            [\n                                1546939963,\n                                9\n                            ],\n                            [\n                                1546939968,\n                                9\n                            ],\n                            [\n                                1546939973,\n                                9\n                            ],\n                            [\n                                1546939978,\n                                9\n                            ],\n                            [\n                                1546939983,\n                                9\n                            ],\n                            [\n                                1546939988,\n                                9\n                            ]\n                        ]\n                    }\n                },\n                {\n                    \"rank\": 1,\n                    \"name\": \"b\",\n                    \"addr\": \"10.42.0.1:40414/0\",\n                    \"public_addr\": \"10.42.0.1:40414/0\",\n                    \"stats\": {\n                        \"num_sessions\": [\n                            [\n                                1546939893,\n                                4\n                            ],\n                            [\n                                1546939898,\n                                4\n                            ],\n                            [\n                                1546939903,\n                                4\n                            ],\n                            [\n                                1546939908,\n                                4\n                            ],\n                            [\n                                1546939913,\n                                4\n                            ],\n                            [\n                                1546939918,\n                                4\n                            ],\n                            [\n                                1546939923,\n                                4\n                            ],\n                            [\n                                1546939928,\n                                4\n                            ],\n                            [\n                                1546939933,\n                                4\n                            ],\n                            [\n                                1546939938,\n                                4\n                            ],\n                            [\n                                1546939943,\n                                4\n                            ],\n                            [\n                                1546939948,\n                                4\n                            ],\n                            [\n                                1546939953,\n                                4\n                            ],\n                            [\n                                1546939958,\n                                4\n                            ],\n                            [\n                                1546939963,\n                                4\n                            ],\n                            [\n                                1546939968,\n                                4\n                            ],\n                            [\n                                1546939973,\n                                4\n                            ],\n                            [\n                                1546939978,\n                                4\n                            ],\n                            [\n                                1546939983,\n                                4\n                            ],\n                            [\n                                1546939988,\n                                4\n                            ]\n                        ]\n                    }\n                },\n                {\n                    \"rank\": 2,\n                    \"name\": \"c\",\n                    \"addr\": \"10.42.0.1:40415/0\",\n                    \"public_addr\": \"10.42.0.1:40415/0\",\n                    \"stats\": {\n                        \"num_sessions\": [\n                            [\n                                1546939893,\n                                6\n                            ],\n                            [\n                                1546939898,\n                                6\n                            ],\n                            [\n                                1546939903,\n                                6\n                            ],\n                            [\n                                1546939908,\n                                6\n                            ],\n                            [\n                                1546939913,\n                                6\n                            ],\n                            [\n                                1546939918,\n                                6\n                            ],\n                            [\n                                1546939923,\n                                6\n                            ],\n                            [\n                                1546939928,\n                                6\n                            ],\n                            [\n                                1546939933,\n                                6\n                            ],\n                            [\n                                1546939938,\n                                6\n                            ],\n                            [\n                                1546939943,\n                                6\n                            ],\n                            [\n                                1546939948,\n                                6\n                            ],\n                            [\n                                1546939953,\n                                6\n                            ],\n                            [\n                                1546939958,\n                                6\n                            ],\n                            [\n                                1546939963,\n                                6\n                            ],\n                            [\n                                1546939968,\n                                6\n                            ],\n                            [\n                                1546939973,\n                                6\n                            ],\n                            [\n                                1546939978,\n                                6\n                            ],\n                            [\n                                1546939983,\n                                6\n                            ],\n                            [\n                                1546939988,\n                                6\n                            ]\n                        ]\n                    }\n                }\n            ]\n        },\n        \"feature_map\": {\n            \"mon\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ],\n            \"mds\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ],\n            \"osd\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 3\n                }\n            ],\n            \"client\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ],\n            \"mgr\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ]\n        }\n    },\n    \"in_quorum\": [\n        {\n            \"rank\": 0,\n            \"name\": \"a\",\n            \"addr\": \"10.42.0.1:40413/0\",\n            \"public_addr\": \"10.42.0.1:40413/0\",\n            \"stats\": {\n                \"num_sessions\": [\n                    [\n                        1546939893,\n                        9\n                    ],\n                    [\n                        1546939898,\n                        9\n                    ],\n                    [\n                        1546939903,\n                        9\n                    ],\n                    [\n                        1546939908,\n                        9\n                    ],\n                    [\n                        1546939913,\n                        9\n                    ],\n                    [\n                        1546939918,\n                        9\n                    ],\n                    [\n                        1546939923,\n                        9\n                    ],\n                    [\n                        1546939928,\n                        9\n                    ],\n                    [\n                        1546939933,\n                        9\n                    ],\n                    [\n                        1546939938,\n                        9\n                    ],\n                    [\n                        1546939943,\n                        9\n                    ],\n                    [\n                        1546939948,\n                        9\n                    ],\n                    [\n                        1546939953,\n                        9\n                    ],\n                    [\n                        1546939958,\n                        9\n                    ],\n                    [\n                        1546939963,\n                        9\n                    ],\n                    [\n                        1546939968,\n                        9\n                    ],\n                    [\n                        1546939973,\n                        9\n                    ],\n                    [\n                        1546939978,\n                        9\n                    ],\n                    [\n                        1546939983,\n                        9\n                    ],\n                    [\n                        1546939988,\n                        9\n                    ]\n                ]\n            }\n        },\n        {\n            \"rank\": 1,\n            \"name\": \"b\",\n            \"addr\": \"10.42.0.1:40414/0\",\n            \"public_addr\": \"10.42.0.1:40414/0\",\n            \"stats\": {\n                \"num_sessions\": [\n                    [\n                        1546939893,\n                        4\n                    ],\n                    [\n                        1546939898,\n                        4\n                    ],\n                    [\n                        1546939903,\n                        4\n                    ],\n                    [\n                        1546939908,\n                        4\n                    ],\n                    [\n                        1546939913,\n                        4\n                    ],\n                    [\n                        1546939918,\n                        4\n                    ],\n                    [\n                        1546939923,\n                        4\n                    ],\n                    [\n                        1546939928,\n                        4\n                    ],\n                    [\n                        1546939933,\n                        4\n                    ],\n                    [\n                        1546939938,\n                        4\n                    ],\n                    [\n                        1546939943,\n                        4\n                    ],\n                    [\n                        1546939948,\n                        4\n                    ],\n                    [\n                        1546939953,\n                        4\n                    ],\n                    [\n                        1546939958,\n                        4\n                    ],\n                    [\n                        1546939963,\n                        4\n                    ],\n                    [\n                        1546939968,\n                        4\n                    ],\n                    [\n                        1546939973,\n                        4\n                    ],\n                    [\n                        1546939978,\n                        4\n                    ],\n                    [\n                        1546939983,\n                        4\n                    ],\n                    [\n                        1546939988,\n                        4\n                    ]\n                ]\n            }\n        },\n        {\n            \"rank\": 2,\n            \"name\": \"c\",\n            \"addr\": \"10.42.0.1:40415/0\",\n            \"public_addr\": \"10.42.0.1:40415/0\",\n            \"stats\": {\n                \"num_sessions\": [\n                    [\n                        1546939893,\n                        6\n                    ],\n                    [\n                        1546939898,\n                        6\n                    ],\n                    [\n                        1546939903,\n                        6\n                    ],\n                    [\n                        1546939908,\n                        6\n                    ],\n                    [\n                        1546939913,\n                        6\n                    ],\n                    [\n                        1546939918,\n                        6\n                    ],\n                    [\n                        1546939923,\n                        6\n                    ],\n                    [\n                        1546939928,\n                        6\n                    ],\n                    [\n                        1546939933,\n                        6\n                    ],\n                    [\n                        1546939938,\n                        6\n                    ],\n                    [\n                        1546939943,\n                        6\n                    ],\n                    [\n                        1546939948,\n                        6\n                    ],\n                    [\n                        1546939953,\n                        6\n                    ],\n                    [\n                        1546939958,\n                        6\n                    ],\n                    [\n                        1546939963,\n                        6\n                    ],\n                    [\n                        1546939968,\n                        6\n                    ],\n                    [\n                        1546939973,\n                        6\n                    ],\n                    [\n                        1546939978,\n                        6\n                    ],\n                    [\n                        1546939983,\n                        6\n                    ],\n                    [\n                        1546939988,\n                        6\n                    ]\n                ]\n            }\n        }\n    ],\n    \"out_quorum\": []\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cd2c22dd-c0d3-467f-99be-991c51cd6f1f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "835bbd06-c873-407d-9d72-5d8bf24fc049",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "host",
			"item": [
				{
					"name": "hosts info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/host",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"host"
							]
						}
					},
					"response": [
						{
							"name": "hosts info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/host",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"host"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:33:40 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "205"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"hostname\": \"ceph-dev\",\n        \"services\": [\n            {\n                \"type\": \"mds\",\n                \"id\": \"a\"\n            },\n            {\n                \"type\": \"mds\",\n                \"id\": \"b\"\n            },\n            {\n                \"type\": \"mds\",\n                \"id\": \"c\"\n            },\n            {\n                \"type\": \"mgr\",\n                \"id\": \"x\"\n            },\n            {\n                \"type\": \"mon\",\n                \"id\": \"a\"\n            },\n            {\n                \"type\": \"mon\",\n                \"id\": \"b\"\n            },\n            {\n                \"type\": \"mon\",\n                \"id\": \"c\"\n            },\n            {\n                \"type\": \"osd\",\n                \"id\": \"0\"\n            },\n            {\n                \"type\": \"osd\",\n                \"id\": \"1\"\n            },\n            {\n                \"type\": \"osd\",\n                \"id\": \"2\"\n            },\n            {\n                \"type\": \"rgw\",\n                \"id\": \"rgw\"\n            }\n        ],\n        \"ceph_version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "osd",
			"item": [
				{
					"name": "OSDs info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/osd",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"osd"
							]
						}
					},
					"response": [
						{
							"name": "OSDs info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6ImJlYjY3OTI1LTE0YjktNGNjMS05OGFmLTY2OWY2YzMxMzNjYSIsImV4cCI6MTU0Njk2MDE2MywiaWF0IjoxNTQ2OTMxMzYzLCJ1c2VybmFtZSI6ImFkbWluIn0.hQqVNHi1hGJ6wq2jjPM_Nm8f99HCff5IfGskG4E_FuM",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/osd",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"osd"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:34:24 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1412"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"osd\": 0,\n        \"up\": 1,\n        \"in\": 1,\n        \"weight\": 1,\n        \"primary_affinity\": 1,\n        \"last_clean_begin\": 0,\n        \"last_clean_end\": 0,\n        \"up_from\": 5,\n        \"up_thru\": 51,\n        \"down_at\": 0,\n        \"lost_at\": 0,\n        \"public_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6801\"\n                }\n            ]\n        },\n        \"cluster_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6802\"\n                }\n            ]\n        },\n        \"heartbeat_back_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6804\"\n                }\n            ]\n        },\n        \"heartbeat_front_addr\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6803\"\n                }\n            ]\n        },\n        \"state\": [\n            \"exists\",\n            \"up\"\n        ],\n        \"uuid\": \"df7104ce-f7b7-4e09-ab5f-554fa3eafc93\",\n        \"public_addr\": \"10.42.0.1:6801/11508\",\n        \"cluster_addr\": \"10.42.0.1:6802/11508\",\n        \"id\": 0,\n        \"osd_stats\": {\n            \"osd\": 0,\n            \"up_from\": 5,\n            \"seq\": 21474837702,\n            \"num_pgs\": 88,\n            \"kb\": 10551288,\n            \"kb_used\": 1125624,\n            \"kb_used_data\": 9664,\n            \"kb_used_omap\": 0,\n            \"kb_used_meta\": 1048576,\n            \"kb_avail\": 9425664,\n            \"statfs\": {\n                \"total\": 10804518912,\n                \"available\": 9651879936,\n                \"internally_reserved\": 1073741824,\n                \"allocated\": 9895936,\n                \"data_stored\": 206092,\n                \"data_compressed\": 0,\n                \"data_compressed_allocated\": 0,\n                \"data_compressed_original\": 0,\n                \"omap_allocated\": 0,\n                \"internal_metadata\": 1073741824\n            },\n            \"hb_peers\": [\n                1,\n                2\n            ],\n            \"snap_trim_queue_len\": 0,\n            \"num_snap_trimming\": 0,\n            \"op_queue_age_hist\": {\n                \"histogram\": [],\n                \"upper_bound\": 1\n            },\n            \"perf_stat\": {\n                \"commit_latency_ms\": 0,\n                \"apply_latency_ms\": 0,\n                \"commit_latency_ns\": 0,\n                \"apply_latency_ns\": 0\n            }\n        },\n        \"tree\": {\n            \"id\": 0,\n            \"device_class\": \"hdd\",\n            \"type\": \"osd\",\n            \"type_id\": 0,\n            \"crush_weight\": 0.009796142578125,\n            \"depth\": 2,\n            \"pool_weights\": {},\n            \"exists\": 1,\n            \"status\": \"up\",\n            \"reweight\": 1,\n            \"primary_affinity\": 1,\n            \"name\": \"osd.0\"\n        },\n        \"host\": {\n            \"id\": -3,\n            \"name\": \"ceph-dev\",\n            \"type\": \"host\",\n            \"type_id\": 1,\n            \"pool_weights\": {},\n            \"children\": [\n                2,\n                1,\n                0\n            ]\n        },\n        \"stats\": {\n            \"op_w\": 0,\n            \"op_in_bytes\": 0,\n            \"op_r\": 0.6,\n            \"op_out_bytes\": 0,\n            \"numpg\": 88,\n            \"stat_bytes\": 10804518912,\n            \"stat_bytes_used\": 1152638976\n        },\n        \"stats_history\": {\n            \"op_w\": [\n                [\n                    1546939970,\n                    0\n                ],\n                [\n                    1546939975,\n                    0\n                ],\n                [\n                    1546939980,\n                    0\n                ],\n                [\n                    1546939985,\n                    0\n                ],\n                [\n                    1546939990,\n                    0\n                ],\n                [\n                    1546939995,\n                    0\n                ],\n                [\n                    1546940000,\n                    0\n                ],\n                [\n                    1546940005,\n                    0\n                ],\n                [\n                    1546940010,\n                    0\n                ],\n                [\n                    1546940015,\n                    0\n                ],\n                [\n                    1546940020,\n                    0\n                ],\n                [\n                    1546940025,\n                    0\n                ],\n                [\n                    1546940030,\n                    0\n                ],\n                [\n                    1546940035,\n                    0\n                ],\n                [\n                    1546940040,\n                    0\n                ],\n                [\n                    1546940045,\n                    0\n                ],\n                [\n                    1546940050,\n                    0\n                ],\n                [\n                    1546940055,\n                    0\n                ],\n                [\n                    1546940060,\n                    0\n                ]\n            ],\n            \"op_in_bytes\": [\n                [\n                    1546939970,\n                    0\n                ],\n                [\n                    1546939975,\n                    0\n                ],\n                [\n                    1546939980,\n                    0\n                ],\n                [\n                    1546939985,\n                    0\n                ],\n                [\n                    1546939990,\n                    0\n                ],\n                [\n                    1546939995,\n                    0\n                ],\n                [\n                    1546940000,\n                    0\n                ],\n                [\n                    1546940005,\n                    0\n                ],\n                [\n                    1546940010,\n                    0\n                ],\n                [\n                    1546940015,\n                    0\n                ],\n                [\n                    1546940020,\n                    0\n                ],\n                [\n                    1546940025,\n                    0\n                ],\n                [\n                    1546940030,\n                    0\n                ],\n                [\n                    1546940035,\n                    0\n                ],\n                [\n                    1546940040,\n                    0\n                ],\n                [\n                    1546940045,\n                    0\n                ],\n                [\n                    1546940050,\n                    0\n                ],\n                [\n                    1546940055,\n                    0\n                ],\n                [\n                    1546940060,\n                    0\n                ]\n            ],\n            \"op_r\": [\n                [\n                    1546939970,\n                    0.6\n                ],\n                [\n                    1546939975,\n                    0.6\n                ],\n                [\n                    1546939980,\n                    0.6\n                ],\n                [\n                    1546939985,\n                    0.6\n                ],\n                [\n                    1546939990,\n                    0.6\n                ],\n                [\n                    1546939995,\n                    0.6\n                ],\n                [\n                    1546940000,\n                    0.6\n                ],\n                [\n                    1546940005,\n                    10.6\n                ],\n                [\n                    1546940010,\n                    3.4\n                ],\n                [\n                    1546940015,\n                    0.6\n                ],\n                [\n                    1546940020,\n                    0.6\n                ],\n                [\n                    1546940025,\n                    0.6\n                ],\n                [\n                    1546940030,\n                    0.6\n                ],\n                [\n                    1546940035,\n                    0.6\n                ],\n                [\n                    1546940040,\n                    0.6\n                ],\n                [\n                    1546940045,\n                    0.6\n                ],\n                [\n                    1546940050,\n                    0.6\n                ],\n                [\n                    1546940055,\n                    0.6\n                ],\n                [\n                    1546940060,\n                    0.6\n                ]\n            ],\n            \"op_out_bytes\": [\n                [\n                    1546939970,\n                    0\n                ],\n                [\n                    1546939975,\n                    0\n                ],\n                [\n                    1546939980,\n                    0\n                ],\n                [\n                    1546939985,\n                    0\n                ],\n                [\n                    1546939990,\n                    0\n                ],\n                [\n                    1546939995,\n                    0\n                ],\n                [\n                    1546940000,\n                    0\n                ],\n                [\n                    1546940005,\n                    144.4\n                ],\n                [\n                    1546940010,\n                    42\n                ],\n                [\n                    1546940015,\n                    0\n                ],\n                [\n                    1546940020,\n                    0\n                ],\n                [\n                    1546940025,\n                    0\n                ],\n                [\n                    1546940030,\n                    0\n                ],\n                [\n                    1546940035,\n                    0\n                ],\n                [\n                    1546940040,\n                    0\n                ],\n                [\n                    1546940045,\n                    0\n                ],\n                [\n                    1546940050,\n                    0\n                ],\n                [\n                    1546940055,\n                    0\n                ],\n                [\n                    1546940060,\n                    0\n                ]\n            ]\n        }\n    },\n    {\n        \"osd\": 1,\n        \"up\": 1,\n        \"in\": 1,\n        \"weight\": 1,\n        \"primary_affinity\": 1,\n        \"last_clean_begin\": 0,\n        \"last_clean_end\": 0,\n        \"up_from\": 8,\n        \"up_thru\": 51,\n        \"down_at\": 0,\n        \"lost_at\": 0,\n        \"public_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11817,\n                    \"addr\": \"10.42.0.1:6805\"\n                }\n            ]\n        },\n        \"cluster_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11817,\n                    \"addr\": \"10.42.0.1:6806\"\n                }\n            ]\n        },\n        \"heartbeat_back_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11817,\n                    \"addr\": \"10.42.0.1:6808\"\n                }\n            ]\n        },\n        \"heartbeat_front_addr\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11817,\n                    \"addr\": \"10.42.0.1:6807\"\n                }\n            ]\n        },\n        \"state\": [\n            \"exists\",\n            \"up\"\n        ],\n        \"uuid\": \"b4dac5ba-c2e1-4501-a121-e9c5934c34a9\",\n        \"public_addr\": \"10.42.0.1:6805/11817\",\n        \"cluster_addr\": \"10.42.0.1:6806/11817\",\n        \"id\": 1,\n        \"osd_stats\": {\n            \"osd\": 1,\n            \"up_from\": 8,\n            \"seq\": 34359739588,\n            \"num_pgs\": 88,\n            \"kb\": 10551288,\n            \"kb_used\": 1125624,\n            \"kb_used_data\": 9664,\n            \"kb_used_omap\": 0,\n            \"kb_used_meta\": 1048576,\n            \"kb_avail\": 9425664,\n            \"statfs\": {\n                \"total\": 10804518912,\n                \"available\": 9651879936,\n                \"internally_reserved\": 1073741824,\n                \"allocated\": 9895936,\n                \"data_stored\": 206092,\n                \"data_compressed\": 0,\n                \"data_compressed_allocated\": 0,\n                \"data_compressed_original\": 0,\n                \"omap_allocated\": 0,\n                \"internal_metadata\": 1073741824\n            },\n            \"hb_peers\": [\n                0,\n                2\n            ],\n            \"snap_trim_queue_len\": 0,\n            \"num_snap_trimming\": 0,\n            \"op_queue_age_hist\": {\n                \"histogram\": [],\n                \"upper_bound\": 1\n            },\n            \"perf_stat\": {\n                \"commit_latency_ms\": 0,\n                \"apply_latency_ms\": 0,\n                \"commit_latency_ns\": 0,\n                \"apply_latency_ns\": 0\n            }\n        },\n        \"tree\": {\n            \"id\": 1,\n            \"device_class\": \"hdd\",\n            \"type\": \"osd\",\n            \"type_id\": 0,\n            \"crush_weight\": 0.009796142578125,\n            \"depth\": 2,\n            \"pool_weights\": {},\n            \"exists\": 1,\n            \"status\": \"up\",\n            \"reweight\": 1,\n            \"primary_affinity\": 1,\n            \"name\": \"osd.1\"\n        },\n        \"host\": {\n            \"id\": -3,\n            \"name\": \"ceph-dev\",\n            \"type\": \"host\",\n            \"type_id\": 1,\n            \"pool_weights\": {},\n            \"children\": [\n                2,\n                1,\n                0\n            ]\n        },\n        \"stats\": {\n            \"op_w\": 0,\n            \"op_in_bytes\": 0,\n            \"op_r\": 0.8,\n            \"op_out_bytes\": 0,\n            \"numpg\": 88,\n            \"stat_bytes\": 10804518912,\n            \"stat_bytes_used\": 1152638976\n        },\n        \"stats_history\": {\n            \"op_w\": [\n                [\n                    1546939973,\n                    0\n                ],\n                [\n                    1546939978,\n                    0\n                ],\n                [\n                    1546939983,\n                    0\n                ],\n                [\n                    1546939988,\n                    0\n                ],\n                [\n                    1546939994,\n                    0\n                ],\n                [\n                    1546939999,\n                    0\n                ],\n                [\n                    1546940004,\n                    0\n                ],\n                [\n                    1546940009,\n                    0\n                ],\n                [\n                    1546940014,\n                    0\n                ],\n                [\n                    1546940019,\n                    0\n                ],\n                [\n                    1546940024,\n                    0\n                ],\n                [\n                    1546940029,\n                    0\n                ],\n                [\n                    1546940034,\n                    0\n                ],\n                [\n                    1546940039,\n                    0\n                ],\n                [\n                    1546940044,\n                    0\n                ],\n                [\n                    1546940049,\n                    0\n                ],\n                [\n                    1546940054,\n                    0\n                ],\n                [\n                    1546940059,\n                    0\n                ],\n                [\n                    1546940064,\n                    0\n                ]\n            ],\n            \"op_in_bytes\": [\n                [\n                    1546939973,\n                    0\n                ],\n                [\n                    1546939978,\n                    0\n                ],\n                [\n                    1546939983,\n                    0\n                ],\n                [\n                    1546939988,\n                    0\n                ],\n                [\n                    1546939994,\n                    0\n                ],\n                [\n                    1546939999,\n                    0\n                ],\n                [\n                    1546940004,\n                    0\n                ],\n                [\n                    1546940009,\n                    0\n                ],\n                [\n                    1546940014,\n                    0\n                ],\n                [\n                    1546940019,\n                    0\n                ],\n                [\n                    1546940024,\n                    0\n                ],\n                [\n                    1546940029,\n                    0\n                ],\n                [\n                    1546940034,\n                    0\n                ],\n                [\n                    1546940039,\n                    0\n                ],\n                [\n                    1546940044,\n                    0\n                ],\n                [\n                    1546940049,\n                    0\n                ],\n                [\n                    1546940054,\n                    0\n                ],\n                [\n                    1546940059,\n                    0\n                ],\n                [\n                    1546940064,\n                    0\n                ]\n            ],\n            \"op_r\": [\n                [\n                    1546939973,\n                    0.8\n                ],\n                [\n                    1546939978,\n                    0.8\n                ],\n                [\n                    1546939983,\n                    0.8\n                ],\n                [\n                    1546939988,\n                    0.8\n                ],\n                [\n                    1546939994,\n                    0.6666666666666666\n                ],\n                [\n                    1546939999,\n                    0.8\n                ],\n                [\n                    1546940004,\n                    8.4\n                ],\n                [\n                    1546940009,\n                    9\n                ],\n                [\n                    1546940014,\n                    0.8\n                ],\n                [\n                    1546940019,\n                    0.8\n                ],\n                [\n                    1546940024,\n                    0.8\n                ],\n                [\n                    1546940029,\n                    0.8\n                ],\n                [\n                    1546940034,\n                    0.8\n                ],\n                [\n                    1546940039,\n                    0.8\n                ],\n                [\n                    1546940044,\n                    0.8\n                ],\n                [\n                    1546940049,\n                    0.8\n                ],\n                [\n                    1546940054,\n                    0.8\n                ],\n                [\n                    1546940059,\n                    0.8\n                ],\n                [\n                    1546940064,\n                    0.8\n                ]\n            ],\n            \"op_out_bytes\": [\n                [\n                    1546939973,\n                    0\n                ],\n                [\n                    1546939978,\n                    0\n                ],\n                [\n                    1546939983,\n                    0\n                ],\n                [\n                    1546939988,\n                    0\n                ],\n                [\n                    1546939994,\n                    0\n                ],\n                [\n                    1546939999,\n                    0\n                ],\n                [\n                    1546940004,\n                    106.8\n                ],\n                [\n                    1546940009,\n                    123\n                ],\n                [\n                    1546940014,\n                    0\n                ],\n                [\n                    1546940019,\n                    0\n                ],\n                [\n                    1546940024,\n                    0\n                ],\n                [\n                    1546940029,\n                    0\n                ],\n                [\n                    1546940034,\n                    0\n                ],\n                [\n                    1546940039,\n                    0\n                ],\n                [\n                    1546940044,\n                    0\n                ],\n                [\n                    1546940049,\n                    0\n                ],\n                [\n                    1546940054,\n                    0\n                ],\n                [\n                    1546940059,\n                    0\n                ],\n                [\n                    1546940064,\n                    0\n                ]\n            ]\n        }\n    },\n    {\n        \"osd\": 2,\n        \"up\": 1,\n        \"in\": 1,\n        \"weight\": 1,\n        \"primary_affinity\": 1,\n        \"last_clean_begin\": 0,\n        \"last_clean_end\": 0,\n        \"up_from\": 11,\n        \"up_thru\": 51,\n        \"down_at\": 0,\n        \"lost_at\": 0,\n        \"public_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 12126,\n                    \"addr\": \"10.42.0.1:6809\"\n                }\n            ]\n        },\n        \"cluster_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 12126,\n                    \"addr\": \"10.42.0.1:6810\"\n                }\n            ]\n        },\n        \"heartbeat_back_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 12126,\n                    \"addr\": \"10.42.0.1:6812\"\n                }\n            ]\n        },\n        \"heartbeat_front_addr\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 12126,\n                    \"addr\": \"10.42.0.1:6811\"\n                }\n            ]\n        },\n        \"state\": [\n            \"exists\",\n            \"up\"\n        ],\n        \"uuid\": \"ea123ad8-9457-4a72-b10f-29bcc08d0375\",\n        \"public_addr\": \"10.42.0.1:6809/12126\",\n        \"cluster_addr\": \"10.42.0.1:6810/12126\",\n        \"id\": 2,\n        \"osd_stats\": {\n            \"osd\": 2,\n            \"up_from\": 11,\n            \"seq\": 47244641475,\n            \"num_pgs\": 88,\n            \"kb\": 10551288,\n            \"kb_used\": 1125624,\n            \"kb_used_data\": 9664,\n            \"kb_used_omap\": 0,\n            \"kb_used_meta\": 1048576,\n            \"kb_avail\": 9425664,\n            \"statfs\": {\n                \"total\": 10804518912,\n                \"available\": 9651879936,\n                \"internally_reserved\": 1073741824,\n                \"allocated\": 9895936,\n                \"data_stored\": 206092,\n                \"data_compressed\": 0,\n                \"data_compressed_allocated\": 0,\n                \"data_compressed_original\": 0,\n                \"omap_allocated\": 0,\n                \"internal_metadata\": 1073741824\n            },\n            \"hb_peers\": [\n                0,\n                1\n            ],\n            \"snap_trim_queue_len\": 0,\n            \"num_snap_trimming\": 0,\n            \"op_queue_age_hist\": {\n                \"histogram\": [],\n                \"upper_bound\": 1\n            },\n            \"perf_stat\": {\n                \"commit_latency_ms\": 0,\n                \"apply_latency_ms\": 0,\n                \"commit_latency_ns\": 0,\n                \"apply_latency_ns\": 0\n            }\n        },\n        \"tree\": {\n            \"id\": 2,\n            \"device_class\": \"hdd\",\n            \"type\": \"osd\",\n            \"type_id\": 0,\n            \"crush_weight\": 0.009796142578125,\n            \"depth\": 2,\n            \"pool_weights\": {},\n            \"exists\": 1,\n            \"status\": \"up\",\n            \"reweight\": 1,\n            \"primary_affinity\": 1,\n            \"name\": \"osd.2\"\n        },\n        \"host\": {\n            \"id\": -3,\n            \"name\": \"ceph-dev\",\n            \"type\": \"host\",\n            \"type_id\": 1,\n            \"pool_weights\": {},\n            \"children\": [\n                2,\n                1,\n                0\n            ]\n        },\n        \"stats\": {\n            \"op_w\": 0,\n            \"op_in_bytes\": 0,\n            \"op_r\": 0.2,\n            \"op_out_bytes\": 0,\n            \"numpg\": 88,\n            \"stat_bytes\": 10804518912,\n            \"stat_bytes_used\": 1152638976\n        },\n        \"stats_history\": {\n            \"op_w\": [\n                [\n                    1546939973,\n                    0\n                ],\n                [\n                    1546939978,\n                    0\n                ],\n                [\n                    1546939983,\n                    0\n                ],\n                [\n                    1546939988,\n                    0\n                ],\n                [\n                    1546939993,\n                    0\n                ],\n                [\n                    1546939998,\n                    0\n                ],\n                [\n                    1546940003,\n                    0\n                ],\n                [\n                    1546940008,\n                    0\n                ],\n                [\n                    1546940013,\n                    0\n                ],\n                [\n                    1546940018,\n                    0\n                ],\n                [\n                    1546940023,\n                    0\n                ],\n                [\n                    1546940028,\n                    0\n                ],\n                [\n                    1546940033,\n                    0\n                ],\n                [\n                    1546940038,\n                    0\n                ],\n                [\n                    1546940043,\n                    0\n                ],\n                [\n                    1546940048,\n                    0\n                ],\n                [\n                    1546940053,\n                    0\n                ],\n                [\n                    1546940058,\n                    0\n                ],\n                [\n                    1546940063,\n                    0\n                ]\n            ],\n            \"op_in_bytes\": [\n                [\n                    1546939973,\n                    0\n                ],\n                [\n                    1546939978,\n                    0\n                ],\n                [\n                    1546939983,\n                    0\n                ],\n                [\n                    1546939988,\n                    0\n                ],\n                [\n                    1546939993,\n                    0\n                ],\n                [\n                    1546939998,\n                    0\n                ],\n                [\n                    1546940003,\n                    0\n                ],\n                [\n                    1546940008,\n                    0\n                ],\n                [\n                    1546940013,\n                    0\n                ],\n                [\n                    1546940018,\n                    0\n                ],\n                [\n                    1546940023,\n                    0\n                ],\n                [\n                    1546940028,\n                    0\n                ],\n                [\n                    1546940033,\n                    0\n                ],\n                [\n                    1546940038,\n                    0\n                ],\n                [\n                    1546940043,\n                    0\n                ],\n                [\n                    1546940048,\n                    0\n                ],\n                [\n                    1546940053,\n                    0\n                ],\n                [\n                    1546940058,\n                    0\n                ],\n                [\n                    1546940063,\n                    0\n                ]\n            ],\n            \"op_r\": [\n                [\n                    1546939973,\n                    0.2\n                ],\n                [\n                    1546939978,\n                    0.2\n                ],\n                [\n                    1546939983,\n                    0.2\n                ],\n                [\n                    1546939988,\n                    0.2\n                ],\n                [\n                    1546939993,\n                    0.2\n                ],\n                [\n                    1546939998,\n                    0.2\n                ],\n                [\n                    1546940003,\n                    0.2\n                ],\n                [\n                    1546940008,\n                    0.2\n                ],\n                [\n                    1546940013,\n                    0.2\n                ],\n                [\n                    1546940018,\n                    0.2\n                ],\n                [\n                    1546940023,\n                    0.2\n                ],\n                [\n                    1546940028,\n                    0.2\n                ],\n                [\n                    1546940033,\n                    0.2\n                ],\n                [\n                    1546940038,\n                    0.2\n                ],\n                [\n                    1546940043,\n                    0.2\n                ],\n                [\n                    1546940048,\n                    0.2\n                ],\n                [\n                    1546940053,\n                    0.2\n                ],\n                [\n                    1546940058,\n                    0.2\n                ],\n                [\n                    1546940063,\n                    0.2\n                ]\n            ],\n            \"op_out_bytes\": [\n                [\n                    1546939973,\n                    0\n                ],\n                [\n                    1546939978,\n                    0\n                ],\n                [\n                    1546939983,\n                    0\n                ],\n                [\n                    1546939988,\n                    0\n                ],\n                [\n                    1546939993,\n                    0\n                ],\n                [\n                    1546939998,\n                    0\n                ],\n                [\n                    1546940003,\n                    0\n                ],\n                [\n                    1546940008,\n                    0\n                ],\n                [\n                    1546940013,\n                    0\n                ],\n                [\n                    1546940018,\n                    0\n                ],\n                [\n                    1546940023,\n                    0\n                ],\n                [\n                    1546940028,\n                    0\n                ],\n                [\n                    1546940033,\n                    0\n                ],\n                [\n                    1546940038,\n                    0\n                ],\n                [\n                    1546940043,\n                    0\n                ],\n                [\n                    1546940048,\n                    0\n                ],\n                [\n                    1546940053,\n                    0\n                ],\n                [\n                    1546940058,\n                    0\n                ],\n                [\n                    1546940063,\n                    0\n                ]\n            ]\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "OSD detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/osd/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"osd",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "OSD detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/osd/0",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"osd",
										"0"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:34:56 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "2249"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"osd_map\": {\n        \"osd\": 0,\n        \"up\": 1,\n        \"in\": 1,\n        \"weight\": 1,\n        \"primary_affinity\": 1,\n        \"last_clean_begin\": 0,\n        \"last_clean_end\": 0,\n        \"up_from\": 5,\n        \"up_thru\": 51,\n        \"down_at\": 0,\n        \"lost_at\": 0,\n        \"public_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6801\"\n                }\n            ]\n        },\n        \"cluster_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6802\"\n                }\n            ]\n        },\n        \"heartbeat_back_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6804\"\n                }\n            ]\n        },\n        \"heartbeat_front_addr\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 11508,\n                    \"addr\": \"10.42.0.1:6803\"\n                }\n            ]\n        },\n        \"state\": [\n            \"exists\",\n            \"up\"\n        ],\n        \"uuid\": \"df7104ce-f7b7-4e09-ab5f-554fa3eafc93\",\n        \"public_addr\": \"10.42.0.1:6801/11508\",\n        \"cluster_addr\": \"10.42.0.1:6802/11508\",\n        \"id\": 0\n    },\n    \"osd_metadata\": {\n        \"hostname\": \"ceph-dev\",\n        \"arch\": \"x86_64\",\n        \"back_addr\": \"10.42.0.1:6802/11508\",\n        \"back_iface\": \"wlan0\",\n        \"bluefs\": \"1\",\n        \"bluefs_db_access_mode\": \"file\",\n        \"bluefs_db_block_size\": \"4096\",\n        \"bluefs_db_driver\": \"KernelDevice\",\n        \"bluefs_db_path\": \"/ceph/build/dev/osd0/block.db\",\n        \"bluefs_db_rotational\": \"1\",\n        \"bluefs_db_size\": \"67108864\",\n        \"bluefs_db_support_discard\": \"0\",\n        \"bluefs_db_type\": \"hdd\",\n        \"bluefs_single_shared_device\": \"0\",\n        \"bluefs_wal_access_mode\": \"file\",\n        \"bluefs_wal_block_size\": \"4096\",\n        \"bluefs_wal_driver\": \"KernelDevice\",\n        \"bluefs_wal_path\": \"/ceph/build/dev/osd0/block.wal\",\n        \"bluefs_wal_rotational\": \"1\",\n        \"bluefs_wal_size\": \"1048576000\",\n        \"bluefs_wal_support_discard\": \"0\",\n        \"bluefs_wal_type\": \"hdd\",\n        \"bluestore_bdev_access_mode\": \"file\",\n        \"bluestore_bdev_block_size\": \"4096\",\n        \"bluestore_bdev_driver\": \"KernelDevice\",\n        \"bluestore_bdev_path\": \"/ceph/build/dev/osd0/block\",\n        \"bluestore_bdev_rotational\": \"1\",\n        \"bluestore_bdev_size\": \"10737418240\",\n        \"bluestore_bdev_support_discard\": \"0\",\n        \"bluestore_bdev_type\": \"hdd\",\n        \"ceph_release\": \"nautilus\",\n        \"ceph_version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n        \"ceph_version_short\": \"14.0.1-2176-g41d266b9b9\",\n        \"cpu\": \"Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz\",\n        \"default_device_class\": \"hdd\",\n        \"device_ids\": \"\",\n        \"devices\": \"\",\n        \"distro\": \"opensuse-tumbleweed\",\n        \"distro_description\": \"openSUSE Tumbleweed\",\n        \"distro_version\": \"20181224\",\n        \"front_addr\": \"10.42.0.1:6801/11508\",\n        \"front_iface\": \"wlan0\",\n        \"hb_back_addr\": \"10.42.0.1:6804/11508\",\n        \"hb_front_addr\": \"10.42.0.1:6803/11508\",\n        \"journal_rotational\": \"1\",\n        \"kernel_description\": \"#1 SMP Mon Dec 3 16:46:15 UTC 2018 (b91289f)\",\n        \"kernel_version\": \"4.12.14-lp150.12.28-default\",\n        \"mem_swap_kb\": \"0\",\n        \"mem_total_kb\": \"11982896\",\n        \"os\": \"Linux\",\n        \"osd_data\": \"/ceph/build/dev/osd0\",\n        \"osd_objectstore\": \"bluestore\",\n        \"rotational\": \"1\"\n    },\n    \"histogram\": {\n        \"AsyncMessenger::Worker-0\": {},\n        \"AsyncMessenger::Worker-1\": {},\n        \"AsyncMessenger::Worker-2\": {},\n        \"bluefs\": {},\n        \"bluestore\": {},\n        \"cct\": {},\n        \"finisher-commit_finisher\": {},\n        \"finisher-defered_finisher\": {},\n        \"finisher-objecter-finisher-0\": {},\n        \"mempool\": {},\n        \"objecter\": {},\n        \"osd\": {\n            \"op_r_latency_out_bytes_histogram\": {\n                \"axes\": [\n                    {\n                        \"name\": \"Latency (usec)\",\n                        \"min\": 0,\n                        \"quant_size\": 100000,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 99999\n                            },\n                            {\n                                \"min\": 100000,\n                                \"max\": 199999\n                            },\n                            {\n                                \"min\": 200000,\n                                \"max\": 399999\n                            },\n                            {\n                                \"min\": 400000,\n                                \"max\": 799999\n                            },\n                            {\n                                \"min\": 800000,\n                                \"max\": 1599999\n                            },\n                            {\n                                \"min\": 1600000,\n                                \"max\": 3199999\n                            },\n                            {\n                                \"min\": 3200000,\n                                \"max\": 6399999\n                            },\n                            {\n                                \"min\": 6400000,\n                                \"max\": 12799999\n                            },\n                            {\n                                \"min\": 12800000,\n                                \"max\": 25599999\n                            },\n                            {\n                                \"min\": 25600000,\n                                \"max\": 51199999\n                            },\n                            {\n                                \"min\": 51200000,\n                                \"max\": 102399999\n                            },\n                            {\n                                \"min\": 102400000,\n                                \"max\": 204799999\n                            },\n                            {\n                                \"min\": 204800000,\n                                \"max\": 409599999\n                            },\n                            {\n                                \"min\": 409600000,\n                                \"max\": 819199999\n                            },\n                            {\n                                \"min\": 819200000,\n                                \"max\": 1638399999\n                            },\n                            {\n                                \"min\": 1638400000,\n                                \"max\": 3276799999\n                            },\n                            {\n                                \"min\": 3276800000,\n                                \"max\": 6553599999\n                            },\n                            {\n                                \"min\": 6553600000,\n                                \"max\": 13107199999\n                            },\n                            {\n                                \"min\": 13107200000,\n                                \"max\": 26214399999\n                            },\n                            {\n                                \"min\": 26214400000,\n                                \"max\": 52428799999\n                            },\n                            {\n                                \"min\": 52428800000,\n                                \"max\": 104857599999\n                            },\n                            {\n                                \"min\": 104857600000,\n                                \"max\": 209715199999\n                            },\n                            {\n                                \"min\": 209715200000,\n                                \"max\": 419430399999\n                            },\n                            {\n                                \"min\": 419430400000,\n                                \"max\": 838860799999\n                            },\n                            {\n                                \"min\": 838860800000,\n                                \"max\": 1677721599999\n                            },\n                            {\n                                \"min\": 1677721600000,\n                                \"max\": 3355443199999\n                            },\n                            {\n                                \"min\": 3355443200000,\n                                \"max\": 6710886399999\n                            },\n                            {\n                                \"min\": 6710886400000,\n                                \"max\": 13421772799999\n                            },\n                            {\n                                \"min\": 13421772800000,\n                                \"max\": 26843545599999\n                            },\n                            {\n                                \"min\": 26843545600000,\n                                \"max\": 53687091199999\n                            },\n                            {\n                                \"min\": 53687091200000\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Request size (bytes)\",\n                        \"min\": 0,\n                        \"quant_size\": 512,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 511\n                            },\n                            {\n                                \"min\": 512,\n                                \"max\": 1023\n                            },\n                            {\n                                \"min\": 1024,\n                                \"max\": 2047\n                            },\n                            {\n                                \"min\": 2048,\n                                \"max\": 4095\n                            },\n                            {\n                                \"min\": 4096,\n                                \"max\": 8191\n                            },\n                            {\n                                \"min\": 8192,\n                                \"max\": 16383\n                            },\n                            {\n                                \"min\": 16384,\n                                \"max\": 32767\n                            },\n                            {\n                                \"min\": 32768,\n                                \"max\": 65535\n                            },\n                            {\n                                \"min\": 65536,\n                                \"max\": 131071\n                            },\n                            {\n                                \"min\": 131072,\n                                \"max\": 262143\n                            },\n                            {\n                                \"min\": 262144,\n                                \"max\": 524287\n                            },\n                            {\n                                \"min\": 524288,\n                                \"max\": 1048575\n                            },\n                            {\n                                \"min\": 1048576,\n                                \"max\": 2097151\n                            },\n                            {\n                                \"min\": 2097152,\n                                \"max\": 4194303\n                            },\n                            {\n                                \"min\": 4194304,\n                                \"max\": 8388607\n                            },\n                            {\n                                \"min\": 8388608,\n                                \"max\": 16777215\n                            },\n                            {\n                                \"min\": 16777216,\n                                \"max\": 33554431\n                            },\n                            {\n                                \"min\": 33554432,\n                                \"max\": 67108863\n                            },\n                            {\n                                \"min\": 67108864,\n                                \"max\": 134217727\n                            },\n                            {\n                                \"min\": 134217728,\n                                \"max\": 268435455\n                            },\n                            {\n                                \"min\": 268435456,\n                                \"max\": 536870911\n                            },\n                            {\n                                \"min\": 536870912,\n                                \"max\": 1073741823\n                            },\n                            {\n                                \"min\": 1073741824,\n                                \"max\": 2147483647\n                            },\n                            {\n                                \"min\": 2147483648,\n                                \"max\": 4294967295\n                            },\n                            {\n                                \"min\": 4294967296,\n                                \"max\": 8589934591\n                            },\n                            {\n                                \"min\": 8589934592,\n                                \"max\": 17179869183\n                            },\n                            {\n                                \"min\": 17179869184,\n                                \"max\": 34359738367\n                            },\n                            {\n                                \"min\": 34359738368,\n                                \"max\": 68719476735\n                            },\n                            {\n                                \"min\": 68719476736,\n                                \"max\": 137438953471\n                            },\n                            {\n                                \"min\": 137438953472,\n                                \"max\": 274877906943\n                            },\n                            {\n                                \"min\": 274877906944\n                            }\n                        ]\n                    }\n                ],\n                \"values\": [\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        1,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        8959,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        6256,\n                        2,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        1443,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        144,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        12,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        2,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        4,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        1,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        4,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ]\n            },\n            \"op_w_latency_in_bytes_histogram\": {\n                \"axes\": [\n                    {\n                        \"name\": \"Latency (usec)\",\n                        \"min\": 0,\n                        \"quant_size\": 100000,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 99999\n                            },\n                            {\n                                \"min\": 100000,\n                                \"max\": 199999\n                            },\n                            {\n                                \"min\": 200000,\n                                \"max\": 399999\n                            },\n                            {\n                                \"min\": 400000,\n                                \"max\": 799999\n                            },\n                            {\n                                \"min\": 800000,\n                                \"max\": 1599999\n                            },\n                            {\n                                \"min\": 1600000,\n                                \"max\": 3199999\n                            },\n                            {\n                                \"min\": 3200000,\n                                \"max\": 6399999\n                            },\n                            {\n                                \"min\": 6400000,\n                                \"max\": 12799999\n                            },\n                            {\n                                \"min\": 12800000,\n                                \"max\": 25599999\n                            },\n                            {\n                                \"min\": 25600000,\n                                \"max\": 51199999\n                            },\n                            {\n                                \"min\": 51200000,\n                                \"max\": 102399999\n                            },\n                            {\n                                \"min\": 102400000,\n                                \"max\": 204799999\n                            },\n                            {\n                                \"min\": 204800000,\n                                \"max\": 409599999\n                            },\n                            {\n                                \"min\": 409600000,\n                                \"max\": 819199999\n                            },\n                            {\n                                \"min\": 819200000,\n                                \"max\": 1638399999\n                            },\n                            {\n                                \"min\": 1638400000,\n                                \"max\": 3276799999\n                            },\n                            {\n                                \"min\": 3276800000,\n                                \"max\": 6553599999\n                            },\n                            {\n                                \"min\": 6553600000,\n                                \"max\": 13107199999\n                            },\n                            {\n                                \"min\": 13107200000,\n                                \"max\": 26214399999\n                            },\n                            {\n                                \"min\": 26214400000,\n                                \"max\": 52428799999\n                            },\n                            {\n                                \"min\": 52428800000,\n                                \"max\": 104857599999\n                            },\n                            {\n                                \"min\": 104857600000,\n                                \"max\": 209715199999\n                            },\n                            {\n                                \"min\": 209715200000,\n                                \"max\": 419430399999\n                            },\n                            {\n                                \"min\": 419430400000,\n                                \"max\": 838860799999\n                            },\n                            {\n                                \"min\": 838860800000,\n                                \"max\": 1677721599999\n                            },\n                            {\n                                \"min\": 1677721600000,\n                                \"max\": 3355443199999\n                            },\n                            {\n                                \"min\": 3355443200000,\n                                \"max\": 6710886399999\n                            },\n                            {\n                                \"min\": 6710886400000,\n                                \"max\": 13421772799999\n                            },\n                            {\n                                \"min\": 13421772800000,\n                                \"max\": 26843545599999\n                            },\n                            {\n                                \"min\": 26843545600000,\n                                \"max\": 53687091199999\n                            },\n                            {\n                                \"min\": 53687091200000\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Request size (bytes)\",\n                        \"min\": 0,\n                        \"quant_size\": 512,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 511\n                            },\n                            {\n                                \"min\": 512,\n                                \"max\": 1023\n                            },\n                            {\n                                \"min\": 1024,\n                                \"max\": 2047\n                            },\n                            {\n                                \"min\": 2048,\n                                \"max\": 4095\n                            },\n                            {\n                                \"min\": 4096,\n                                \"max\": 8191\n                            },\n                            {\n                                \"min\": 8192,\n                                \"max\": 16383\n                            },\n                            {\n                                \"min\": 16384,\n                                \"max\": 32767\n                            },\n                            {\n                                \"min\": 32768,\n                                \"max\": 65535\n                            },\n                            {\n                                \"min\": 65536,\n                                \"max\": 131071\n                            },\n                            {\n                                \"min\": 131072,\n                                \"max\": 262143\n                            },\n                            {\n                                \"min\": 262144,\n                                \"max\": 524287\n                            },\n                            {\n                                \"min\": 524288,\n                                \"max\": 1048575\n                            },\n                            {\n                                \"min\": 1048576,\n                                \"max\": 2097151\n                            },\n                            {\n                                \"min\": 2097152,\n                                \"max\": 4194303\n                            },\n                            {\n                                \"min\": 4194304,\n                                \"max\": 8388607\n                            },\n                            {\n                                \"min\": 8388608,\n                                \"max\": 16777215\n                            },\n                            {\n                                \"min\": 16777216,\n                                \"max\": 33554431\n                            },\n                            {\n                                \"min\": 33554432,\n                                \"max\": 67108863\n                            },\n                            {\n                                \"min\": 67108864,\n                                \"max\": 134217727\n                            },\n                            {\n                                \"min\": 134217728,\n                                \"max\": 268435455\n                            },\n                            {\n                                \"min\": 268435456,\n                                \"max\": 536870911\n                            },\n                            {\n                                \"min\": 536870912,\n                                \"max\": 1073741823\n                            },\n                            {\n                                \"min\": 1073741824,\n                                \"max\": 2147483647\n                            },\n                            {\n                                \"min\": 2147483648,\n                                \"max\": 4294967295\n                            },\n                            {\n                                \"min\": 4294967296,\n                                \"max\": 8589934591\n                            },\n                            {\n                                \"min\": 8589934592,\n                                \"max\": 17179869183\n                            },\n                            {\n                                \"min\": 17179869184,\n                                \"max\": 34359738367\n                            },\n                            {\n                                \"min\": 34359738368,\n                                \"max\": 68719476735\n                            },\n                            {\n                                \"min\": 68719476736,\n                                \"max\": 137438953471\n                            },\n                            {\n                                \"min\": 137438953472,\n                                \"max\": 274877906943\n                            },\n                            {\n                                \"min\": 274877906944\n                            }\n                        ]\n                    }\n                ],\n                \"values\": [\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        32,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        23,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ]\n            },\n            \"op_rw_latency_in_bytes_histogram\": {\n                \"axes\": [\n                    {\n                        \"name\": \"Latency (usec)\",\n                        \"min\": 0,\n                        \"quant_size\": 100000,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 99999\n                            },\n                            {\n                                \"min\": 100000,\n                                \"max\": 199999\n                            },\n                            {\n                                \"min\": 200000,\n                                \"max\": 399999\n                            },\n                            {\n                                \"min\": 400000,\n                                \"max\": 799999\n                            },\n                            {\n                                \"min\": 800000,\n                                \"max\": 1599999\n                            },\n                            {\n                                \"min\": 1600000,\n                                \"max\": 3199999\n                            },\n                            {\n                                \"min\": 3200000,\n                                \"max\": 6399999\n                            },\n                            {\n                                \"min\": 6400000,\n                                \"max\": 12799999\n                            },\n                            {\n                                \"min\": 12800000,\n                                \"max\": 25599999\n                            },\n                            {\n                                \"min\": 25600000,\n                                \"max\": 51199999\n                            },\n                            {\n                                \"min\": 51200000,\n                                \"max\": 102399999\n                            },\n                            {\n                                \"min\": 102400000,\n                                \"max\": 204799999\n                            },\n                            {\n                                \"min\": 204800000,\n                                \"max\": 409599999\n                            },\n                            {\n                                \"min\": 409600000,\n                                \"max\": 819199999\n                            },\n                            {\n                                \"min\": 819200000,\n                                \"max\": 1638399999\n                            },\n                            {\n                                \"min\": 1638400000,\n                                \"max\": 3276799999\n                            },\n                            {\n                                \"min\": 3276800000,\n                                \"max\": 6553599999\n                            },\n                            {\n                                \"min\": 6553600000,\n                                \"max\": 13107199999\n                            },\n                            {\n                                \"min\": 13107200000,\n                                \"max\": 26214399999\n                            },\n                            {\n                                \"min\": 26214400000,\n                                \"max\": 52428799999\n                            },\n                            {\n                                \"min\": 52428800000,\n                                \"max\": 104857599999\n                            },\n                            {\n                                \"min\": 104857600000,\n                                \"max\": 209715199999\n                            },\n                            {\n                                \"min\": 209715200000,\n                                \"max\": 419430399999\n                            },\n                            {\n                                \"min\": 419430400000,\n                                \"max\": 838860799999\n                            },\n                            {\n                                \"min\": 838860800000,\n                                \"max\": 1677721599999\n                            },\n                            {\n                                \"min\": 1677721600000,\n                                \"max\": 3355443199999\n                            },\n                            {\n                                \"min\": 3355443200000,\n                                \"max\": 6710886399999\n                            },\n                            {\n                                \"min\": 6710886400000,\n                                \"max\": 13421772799999\n                            },\n                            {\n                                \"min\": 13421772800000,\n                                \"max\": 26843545599999\n                            },\n                            {\n                                \"min\": 26843545600000,\n                                \"max\": 53687091199999\n                            },\n                            {\n                                \"min\": 53687091200000\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Request size (bytes)\",\n                        \"min\": 0,\n                        \"quant_size\": 512,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 511\n                            },\n                            {\n                                \"min\": 512,\n                                \"max\": 1023\n                            },\n                            {\n                                \"min\": 1024,\n                                \"max\": 2047\n                            },\n                            {\n                                \"min\": 2048,\n                                \"max\": 4095\n                            },\n                            {\n                                \"min\": 4096,\n                                \"max\": 8191\n                            },\n                            {\n                                \"min\": 8192,\n                                \"max\": 16383\n                            },\n                            {\n                                \"min\": 16384,\n                                \"max\": 32767\n                            },\n                            {\n                                \"min\": 32768,\n                                \"max\": 65535\n                            },\n                            {\n                                \"min\": 65536,\n                                \"max\": 131071\n                            },\n                            {\n                                \"min\": 131072,\n                                \"max\": 262143\n                            },\n                            {\n                                \"min\": 262144,\n                                \"max\": 524287\n                            },\n                            {\n                                \"min\": 524288,\n                                \"max\": 1048575\n                            },\n                            {\n                                \"min\": 1048576,\n                                \"max\": 2097151\n                            },\n                            {\n                                \"min\": 2097152,\n                                \"max\": 4194303\n                            },\n                            {\n                                \"min\": 4194304,\n                                \"max\": 8388607\n                            },\n                            {\n                                \"min\": 8388608,\n                                \"max\": 16777215\n                            },\n                            {\n                                \"min\": 16777216,\n                                \"max\": 33554431\n                            },\n                            {\n                                \"min\": 33554432,\n                                \"max\": 67108863\n                            },\n                            {\n                                \"min\": 67108864,\n                                \"max\": 134217727\n                            },\n                            {\n                                \"min\": 134217728,\n                                \"max\": 268435455\n                            },\n                            {\n                                \"min\": 268435456,\n                                \"max\": 536870911\n                            },\n                            {\n                                \"min\": 536870912,\n                                \"max\": 1073741823\n                            },\n                            {\n                                \"min\": 1073741824,\n                                \"max\": 2147483647\n                            },\n                            {\n                                \"min\": 2147483648,\n                                \"max\": 4294967295\n                            },\n                            {\n                                \"min\": 4294967296,\n                                \"max\": 8589934591\n                            },\n                            {\n                                \"min\": 8589934592,\n                                \"max\": 17179869183\n                            },\n                            {\n                                \"min\": 17179869184,\n                                \"max\": 34359738367\n                            },\n                            {\n                                \"min\": 34359738368,\n                                \"max\": 68719476735\n                            },\n                            {\n                                \"min\": 68719476736,\n                                \"max\": 137438953471\n                            },\n                            {\n                                \"min\": 137438953472,\n                                \"max\": 274877906943\n                            },\n                            {\n                                \"min\": 274877906944\n                            }\n                        ]\n                    }\n                ],\n                \"values\": [\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        2565,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        479,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        49,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        3,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ]\n            },\n            \"op_rw_latency_out_bytes_histogram\": {\n                \"axes\": [\n                    {\n                        \"name\": \"Latency (usec)\",\n                        \"min\": 0,\n                        \"quant_size\": 100000,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 99999\n                            },\n                            {\n                                \"min\": 100000,\n                                \"max\": 199999\n                            },\n                            {\n                                \"min\": 200000,\n                                \"max\": 399999\n                            },\n                            {\n                                \"min\": 400000,\n                                \"max\": 799999\n                            },\n                            {\n                                \"min\": 800000,\n                                \"max\": 1599999\n                            },\n                            {\n                                \"min\": 1600000,\n                                \"max\": 3199999\n                            },\n                            {\n                                \"min\": 3200000,\n                                \"max\": 6399999\n                            },\n                            {\n                                \"min\": 6400000,\n                                \"max\": 12799999\n                            },\n                            {\n                                \"min\": 12800000,\n                                \"max\": 25599999\n                            },\n                            {\n                                \"min\": 25600000,\n                                \"max\": 51199999\n                            },\n                            {\n                                \"min\": 51200000,\n                                \"max\": 102399999\n                            },\n                            {\n                                \"min\": 102400000,\n                                \"max\": 204799999\n                            },\n                            {\n                                \"min\": 204800000,\n                                \"max\": 409599999\n                            },\n                            {\n                                \"min\": 409600000,\n                                \"max\": 819199999\n                            },\n                            {\n                                \"min\": 819200000,\n                                \"max\": 1638399999\n                            },\n                            {\n                                \"min\": 1638400000,\n                                \"max\": 3276799999\n                            },\n                            {\n                                \"min\": 3276800000,\n                                \"max\": 6553599999\n                            },\n                            {\n                                \"min\": 6553600000,\n                                \"max\": 13107199999\n                            },\n                            {\n                                \"min\": 13107200000,\n                                \"max\": 26214399999\n                            },\n                            {\n                                \"min\": 26214400000,\n                                \"max\": 52428799999\n                            },\n                            {\n                                \"min\": 52428800000,\n                                \"max\": 104857599999\n                            },\n                            {\n                                \"min\": 104857600000,\n                                \"max\": 209715199999\n                            },\n                            {\n                                \"min\": 209715200000,\n                                \"max\": 419430399999\n                            },\n                            {\n                                \"min\": 419430400000,\n                                \"max\": 838860799999\n                            },\n                            {\n                                \"min\": 838860800000,\n                                \"max\": 1677721599999\n                            },\n                            {\n                                \"min\": 1677721600000,\n                                \"max\": 3355443199999\n                            },\n                            {\n                                \"min\": 3355443200000,\n                                \"max\": 6710886399999\n                            },\n                            {\n                                \"min\": 6710886400000,\n                                \"max\": 13421772799999\n                            },\n                            {\n                                \"min\": 13421772800000,\n                                \"max\": 26843545599999\n                            },\n                            {\n                                \"min\": 26843545600000,\n                                \"max\": 53687091199999\n                            },\n                            {\n                                \"min\": 53687091200000\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Request size (bytes)\",\n                        \"min\": 0,\n                        \"quant_size\": 512,\n                        \"buckets\": 32,\n                        \"scale_type\": \"log2\",\n                        \"ranges\": [\n                            {\n                                \"max\": -1\n                            },\n                            {\n                                \"min\": 0,\n                                \"max\": 511\n                            },\n                            {\n                                \"min\": 512,\n                                \"max\": 1023\n                            },\n                            {\n                                \"min\": 1024,\n                                \"max\": 2047\n                            },\n                            {\n                                \"min\": 2048,\n                                \"max\": 4095\n                            },\n                            {\n                                \"min\": 4096,\n                                \"max\": 8191\n                            },\n                            {\n                                \"min\": 8192,\n                                \"max\": 16383\n                            },\n                            {\n                                \"min\": 16384,\n                                \"max\": 32767\n                            },\n                            {\n                                \"min\": 32768,\n                                \"max\": 65535\n                            },\n                            {\n                                \"min\": 65536,\n                                \"max\": 131071\n                            },\n                            {\n                                \"min\": 131072,\n                                \"max\": 262143\n                            },\n                            {\n                                \"min\": 262144,\n                                \"max\": 524287\n                            },\n                            {\n                                \"min\": 524288,\n                                \"max\": 1048575\n                            },\n                            {\n                                \"min\": 1048576,\n                                \"max\": 2097151\n                            },\n                            {\n                                \"min\": 2097152,\n                                \"max\": 4194303\n                            },\n                            {\n                                \"min\": 4194304,\n                                \"max\": 8388607\n                            },\n                            {\n                                \"min\": 8388608,\n                                \"max\": 16777215\n                            },\n                            {\n                                \"min\": 16777216,\n                                \"max\": 33554431\n                            },\n                            {\n                                \"min\": 33554432,\n                                \"max\": 67108863\n                            },\n                            {\n                                \"min\": 67108864,\n                                \"max\": 134217727\n                            },\n                            {\n                                \"min\": 134217728,\n                                \"max\": 268435455\n                            },\n                            {\n                                \"min\": 268435456,\n                                \"max\": 536870911\n                            },\n                            {\n                                \"min\": 536870912,\n                                \"max\": 1073741823\n                            },\n                            {\n                                \"min\": 1073741824,\n                                \"max\": 2147483647\n                            },\n                            {\n                                \"min\": 2147483648,\n                                \"max\": 4294967295\n                            },\n                            {\n                                \"min\": 4294967296,\n                                \"max\": 8589934591\n                            },\n                            {\n                                \"min\": 8589934592,\n                                \"max\": 17179869183\n                            },\n                            {\n                                \"min\": 17179869184,\n                                \"max\": 34359738367\n                            },\n                            {\n                                \"min\": 34359738368,\n                                \"max\": 68719476735\n                            },\n                            {\n                                \"min\": 68719476736,\n                                \"max\": 137438953471\n                            },\n                            {\n                                \"min\": 137438953472,\n                                \"max\": 274877906943\n                            },\n                            {\n                                \"min\": 274877906944\n                            }\n                        ]\n                    }\n                ],\n                \"values\": [\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        2565,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        479,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        49,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        3,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ]\n            }\n        },\n        \"recoverystate_perf\": {},\n        \"rocksdb\": {},\n        \"throttle-bluestore_throttle_bytes\": {},\n        \"throttle-bluestore_throttle_deferred_bytes\": {},\n        \"throttle-msgr_dispatch_throttler-client\": {},\n        \"throttle-msgr_dispatch_throttler-cluster\": {},\n        \"throttle-msgr_dispatch_throttler-hb_back_client\": {},\n        \"throttle-msgr_dispatch_throttler-hb_back_server\": {},\n        \"throttle-msgr_dispatch_throttler-hb_front_client\": {},\n        \"throttle-msgr_dispatch_throttler-hb_front_server\": {},\n        \"throttle-msgr_dispatch_throttler-ms_objecter\": {},\n        \"throttle-objecter_bytes\": {},\n        \"throttle-objecter_ops\": {},\n        \"throttle-osd_client_bytes\": {}\n    }\n}"
						}
					]
				},
				{
					"name": "OSD scrub",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/osd/2/scrub?deep=false",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"osd",
								"2",
								"scrub"
							],
							"query": [
								{
									"key": "deep",
									"value": "false"
								}
							]
						}
					},
					"response": [
						{
							"name": "OSD scrub",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/osd/2/scrub?deep=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"osd",
										"2",
										"scrub"
									],
									"query": [
										{
											"key": "deep",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:35:55 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "24"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "OSD deep scrub",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/osd/2/scrub?deep=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"osd",
								"2",
								"scrub"
							],
							"query": [
								{
									"key": "deep",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "OSD deep scrub",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/osd/2/scrub?deep=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"osd",
										"2",
										"scrub"
									],
									"query": [
										{
											"key": "deep",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:36:16 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "24"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			]
		},
		{
			"name": "cluster",
			"item": [
				{
					"name": "cluster summay",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/summary",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"summary"
							]
						},
						"description": "集群整体状态信息，包括:\n- 健康状态\n- mgr id\n- mon连接状态\n- 执行中的任务\n- 结束的任务\n- ceph版本\n- rbd镜像状态"
					},
					"response": [
						{
							"name": "cluster summay",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/summary",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"summary"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:36:33 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "717"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"health_status\": \"HEALTH_OK\",\n    \"mgr_id\": \"x\",\n    \"have_mon_connection\": true,\n    \"executing_tasks\": [],\n    \"finished_tasks\": [\n        {\n            \"name\": \"rbd/trash/purge\",\n            \"metadata\": {\n                \"pool_name\": \"\"\n            },\n            \"begin_time\": \"2019-01-08T08:43:46.924580Z\",\n            \"end_time\": \"2019-01-08T08:43:47.203153Z\",\n            \"duration\": 0.27857303619384766,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/move\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:43:38.970093Z\",\n            \"end_time\": \"2019-01-08T08:43:39.265078Z\",\n            \"duration\": 0.2949843406677246,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/restore\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_id\": \"10da8b718cb9\",\n                \"new_image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:43:08.055964Z\",\n            \"end_time\": \"2019-01-08T08:43:08.162493Z\",\n            \"duration\": 0.10652947425842285,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/move\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:43:01.626681Z\",\n            \"end_time\": \"2019-01-08T08:43:01.887666Z\",\n            \"duration\": 0.2609853744506836,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/restore\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_id\": \"10da8b718cb9\",\n                \"new_image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:42:41.251519Z\",\n            \"end_time\": \"2019-01-08T08:42:41.328988Z\",\n            \"duration\": 0.0774688720703125,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/move\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:42:13.301690Z\",\n            \"end_time\": \"2019-01-08T08:42:13.549140Z\",\n            \"duration\": 0.24744963645935059,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/restore\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_id\": \"10da8b718cb9\",\n                \"new_image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:42:08.172660Z\",\n            \"end_time\": \"2019-01-08T08:42:08.265101Z\",\n            \"duration\": 0.09244108200073242,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/trash/move\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_name\": \"test-block-snap3-clone0\"\n            },\n            \"begin_time\": \"2019-01-08T08:41:48.436169Z\",\n            \"end_time\": \"2019-01-08T08:41:48.635989Z\",\n            \"duration\": 0.19982051849365234,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/delete\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_name\": \"test-block-snap3-clone1\"\n            },\n            \"begin_time\": \"2019-01-08T08:41:10.993522Z\",\n            \"end_time\": \"2019-01-08T08:41:11.290226Z\",\n            \"duration\": 0.2967031002044678,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        },\n        {\n            \"name\": \"rbd/delete\",\n            \"metadata\": {\n                \"pool_name\": \"test\",\n                \"image_name\": \"test-block-snap3-copy0\"\n            },\n            \"begin_time\": \"2019-01-08T08:40:50.975166Z\",\n            \"end_time\": \"2019-01-08T08:40:51.283971Z\",\n            \"duration\": 0.308804988861084,\n            \"progress\": 100,\n            \"success\": true,\n            \"ret_value\": null,\n            \"exception\": null\n        }\n    ],\n    \"version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n    \"rbd_mirroring\": {\n        \"warnings\": 0,\n        \"errors\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "health minimal",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/health/minimal",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"health",
								"minimal"
							]
						}
					},
					"response": [
						{
							"name": "health minimal",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/health/minimal",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"health",
										"minimal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:39:57 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "400"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"health\": {\n        \"checks\": [],\n        \"status\": \"HEALTH_OK\"\n    },\n    \"mon_status\": {\n        \"monmap\": {\n            \"mons\": [\n                {},\n                {},\n                {}\n            ]\n        },\n        \"quorum\": [\n            0,\n            1,\n            2\n        ]\n    },\n    \"fs_map\": {\n        \"filesystems\": [\n            {\n                \"mdsmap\": {\n                    \"info\": {\n                        \"gid_34163\": {\n                            \"state\": \"up:active\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"standbys\": [\n            {},\n            {}\n        ]\n    },\n    \"osd_map\": {\n        \"osds\": [\n            {\n                \"in\": 1,\n                \"up\": 1\n            },\n            {\n                \"in\": 1,\n                \"up\": 1\n            },\n            {\n                \"in\": 1,\n                \"up\": 1\n            }\n        ]\n    },\n    \"scrub_status\": \"Inactive\",\n    \"pg_info\": {\n        \"pgs_per_osd\": 88,\n        \"statuses\": {\n            \"active+clean\": 88\n        }\n    },\n    \"mgr_map\": {\n        \"active_name\": \"x\",\n        \"standbys\": []\n    },\n    \"pools\": [\n        {},\n        {},\n        {},\n        {},\n        {},\n        {},\n        {},\n        {}\n    ],\n    \"df\": {\n        \"stats\": {\n            \"total_avail_bytes\": 28955639808,\n            \"total_bytes\": 32413556736,\n            \"total_objects\": 245,\n            \"total_used_raw_bytes\": 3457916928\n        }\n    },\n    \"client_perf\": {\n        \"read_bytes_sec\": 0,\n        \"read_op_per_sec\": 0,\n        \"recovering_bytes_per_sec\": 0,\n        \"write_bytes_sec\": 0,\n        \"write_op_per_sec\": 0\n    },\n    \"hosts\": 1,\n    \"rgw\": 1,\n    \"iscsi_daemons\": 0\n}"
						}
					]
				},
				{
					"name": "cluster configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/cluster_conf/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"cluster_conf",
								""
							]
						}
					},
					"response": [
						{
							"name": "cluster configs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/cluster_conf/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"cluster_conf",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:18:40 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "59219"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"name\": \"admin_socket\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path for the runtime control socket file, used by the 'ceph daemon' command\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"$run_dir/$cluster-$name.asok\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"admin_socket_mode\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"file mode to set for the admin socket file, e.g, '0755'\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [\n            \"admin_socket\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_client_required\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"cephx, none\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_cluster_required\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"cephx\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_debug\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_mon_ticket_ttl\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 43200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_service_required\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"cephx\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_service_ticket_ttl\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"auth_supported\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_aio\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_aio_max_queue_depth\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_aio_poll_ms\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 250,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_aio_reap_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_async_discard\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_block_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"bdev_debug_aio\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_debug_aio_suicide_timeout\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_debug_inflight_ios\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_enable_discard\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_inject_crash\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_inject_crash_flush_delay\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_nvme_retry_count\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bdev_nvme_unbind_from_kernel\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluefs_alloc_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"bluefs_allocator\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"bitmap\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluefs_buffered_io\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluefs_compact_log_sync\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluefs_log_compact_min_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluefs_log_compact_min_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16777216\"\n    },\n    {\n        \"name\": \"bluefs_max_log_runway\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4194304\"\n    },\n    {\n        \"name\": \"bluefs_max_prefetch\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"bluefs_min_flush_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"524288\"\n    },\n    {\n        \"name\": \"bluefs_min_log_runway\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"bluefs_preextend_wal_files\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluefs_sync_write\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_2q_cache_kin_ratio\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"2Q paper suggests .5\",\n        \"long_desc\": \"\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_2q_cache_kout_ratio\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"2Q paper suggests .5\",\n        \"long_desc\": \"\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_allocator\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Allocator policy\",\n        \"long_desc\": \"\",\n        \"default\": \"bitmap\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"bitmap\",\n            \"stupid\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_bitmapallocator_blocks_per_zone\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1024\"\n    },\n    {\n        \"name\": \"bluestore_bitmapallocator_span_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1024\"\n    },\n    {\n        \"name\": \"bluestore_blobid_prealloc\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Number of unique blob ids to preallocate at a time\",\n        \"long_desc\": \"\",\n        \"default\": 10240,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_block_create\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Create bluestore_block_path if it doesn't exist\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_block_path\",\n            \"bluestore_block_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_db_create\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Create bluestore_block_db_path if it doesn't exist\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_block_db_path\",\n            \"bluestore_block_db_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_db_path\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Path for db block device\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_db_size\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Size of file to create for bluestore_block_db_path\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_path\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Path to block device/file\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_preallocate_file\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Preallocate file created via bluestore_block*_create\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Size of file to create for backing bluestore\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"10737418240\"\n    },\n    {\n        \"name\": \"bluestore_block_wal_create\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Create bluestore_block_wal_path if it doesn't exist\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_block_wal_path\",\n            \"bluestore_block_wal_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_wal_path\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Path to block device/file backing bluefs wal\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_block_wal_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Size of file to create for bluestore_block_wal_path\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"100663296\"\n    },\n    {\n        \"name\": \"bluestore_bluefs\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Use BlueFS to back rocksdb\",\n        \"long_desc\": \"BlueFS allows rocksdb to share the same physical device(s) as the rest of BlueStore.  It should be used in all cases unless testing/developing an alternative metadata database for BlueStore.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_bluefs_balance_failure_dump_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"How frequently (in seconds) to dump information on allocation failure occurred during BlueFS space rebalance\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_bluefs_balance_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"How frequently (in seconds) to balance free space between BlueFS and BlueStore\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_bluefs_env_mirror\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Mirror bluefs data to file system for testing/validation\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_bluefs_gift_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum fraction of free space to give to BlueFS at once\",\n        \"long_desc\": \"\",\n        \"default\": 0.02,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_bluefs_max_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum fraction of free storage devoted to BlueFS\",\n        \"long_desc\": \"\",\n        \"default\": 0.9,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_bluefs_min\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum disk space allocated to BlueFS (e.g., at mkfs)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"bluestore_bluefs_min_free\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum free space allocated to BlueFS\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"bluestore_bluefs_min_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum fraction of free space devoted to BlueFS\",\n        \"long_desc\": \"\",\n        \"default\": 0.02,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_bluefs_reclaim_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum fraction of free space to reclaim from BlueFS at once\",\n        \"long_desc\": \"\",\n        \"default\": 0.2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_autotune\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Automatically tune the ratio of caches while respecting min values.\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_size\",\n            \"bluestore_cache_meta_ratio\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_autotune_chunk_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"The chunk size in bytes to allocate to caches when cache autotune is enabled.\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"33554432\"\n    },\n    {\n        \"name\": \"bluestore_cache_autotune_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"The number of seconds to wait between rebalances when cache autotune is enabled.\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_kv_ratio\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Ratio of bluestore cache to devote to kv database (rocksdb)\",\n        \"long_desc\": \"\",\n        \"default\": 0.4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_meta_ratio\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Ratio of bluestore cache to devote to metadata\",\n        \"long_desc\": \"\",\n        \"default\": 0.4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Cache size (in bytes) for BlueStore\",\n        \"long_desc\": \"This includes data and metadata cached by BlueStore as well as memory devoted to rocksdb's cache(s).\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_cache_size_hdd\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Default bluestore_cache_size for rotational media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"bluestore_cache_size_ssd\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Default bluestore_cache_size for non-rotational (solid state) media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"3221225472\"\n    },\n    {\n        \"name\": \"bluestore_cache_trim_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"How frequently we trim the bluestore cache\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_trim_max_skip_pinned\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Max pinned cache entries we consider before giving up\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_cache_type\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Cache replacement algorithm\",\n        \"long_desc\": \"\",\n        \"default\": \"2q\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"2q\",\n            \"lru\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_clone_cow\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use copy-on-write when cloning objects (versus reading and rewriting them at clone time)\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_compression_algorithm\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default compression algorithm to use when writing object data\",\n        \"long_desc\": \"This controls the default compressor to use (if any) if the per-pool property is not set.  Note that zstd is *not* recommended for bluestore due to high CPU overhead when compressing small amounts of data.\",\n        \"default\": \"snappy\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"\",\n            \"snappy\",\n            \"zlib\",\n            \"zstd\",\n            \"lz4\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_compression_max_blob_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum chunk size to apply compression to when non-random access is expected for an object.\",\n        \"long_desc\": \"Chunks larger than this are broken into smaller chunks before being compressed\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_compression_max_blob_size_hdd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default value of bluestore_compression_max_blob_size for rotational media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"524288\"\n    },\n    {\n        \"name\": \"bluestore_compression_max_blob_size_ssd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default value of bluestore_compression_max_blob_size for non-rotational (solid state) media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"bluestore_compression_min_blob_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum chunk size to apply compression to when random access is expected for an object.\",\n        \"long_desc\": \"Chunks larger than this are broken into smaller chunks before being compressed\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_compression_min_blob_size_hdd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default value of bluestore_compression_min_blob_size for rotational media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"131072\"\n    },\n    {\n        \"name\": \"bluestore_compression_min_blob_size_ssd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default value of bluestore_compression_min_blob_size for non-rotational (solid state) media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"8192\"\n    },\n    {\n        \"name\": \"bluestore_compression_mode\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default policy for using compression when pool does not specify\",\n        \"long_desc\": \"'none' means never use compression.  'passive' means use compression when clients hint that data is compressible.  'aggressive' means use compression unless clients hint that data is not compressible.  This option is used when the per-pool property for the compression mode is not present.\",\n        \"default\": \"none\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"none\",\n            \"passive\",\n            \"aggressive\",\n            \"force\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_compression_required_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Compression ratio required to store compressed data\",\n        \"long_desc\": \"If we compress data and get less than this we discard the result and store the original uncompressed data.\",\n        \"default\": 0.875,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_csum_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default checksum algorithm to use\",\n        \"long_desc\": \"crc32c, xxhash32, and xxhash64 are available.  The _16 and _8 variants use only a subset of the bits for more compact (but less reliable) checksumming.\",\n        \"default\": \"crc32c\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"none\",\n            \"crc32c\",\n            \"crc32c_16\",\n            \"crc32c_8\",\n            \"xxhash32\",\n            \"xxhash64\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_debug_freelist\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_fsck_abort\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_inject_bug21040\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_inject_csum_err_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"inject crc verification errors into bluestore device reads\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_inject_read_err\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_misc\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_no_reuse_blocks\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_omit_block_device_write\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_omit_kv_commit\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_permit_any_bdev_label\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_prefill\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"simulate fragmentation\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_prefragment_max\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"bluestore_debug_random_read_err\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_randomize_serial_transaction\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_debug_small_allocations\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_default_buffered_read\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Cache read results by default (unless hinted NOCACHE or WONTNEED)\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_default_buffered_write\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Cache writes by default (unless hinted NOCACHE or WONTNEED)\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_deferred_batch_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of deferred writes before we flush the deferred write queue\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_deferred_batch_ops_hdd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default bluestore_deferred_batch_ops for rotational media\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_deferred_batch_ops_ssd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default bluestore_deferred_batch_ops for non-rotational (solid state) media\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_extent_map_inline_shard_prealloc_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Preallocated buffer for inline shards\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"256\"\n    },\n    {\n        \"name\": \"bluestore_extent_map_shard_max_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Max size (bytes) for a single extent map shard before splitting\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1200\"\n    },\n    {\n        \"name\": \"bluestore_extent_map_shard_min_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Min size (bytes) for a single extent map shard before merging\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"150\"\n    },\n    {\n        \"name\": \"bluestore_extent_map_shard_target_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Target size (bytes) for a single extent map shard\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"500\"\n    },\n    {\n        \"name\": \"bluestore_extent_map_shard_target_size_slop\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Ratio above/below target for a shard when trying to align to an existing extent or blob boundary\",\n        \"long_desc\": \"\",\n        \"default\": 0.2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_freelist_blocks_per_key\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Block (and bits) per database key\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"128\"\n    },\n    {\n        \"name\": \"bluestore_fsck_on_mkfs\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Run fsck after mkfs\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_fsck_on_mkfs_deep\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Run deep fsck after mkfs\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_fsck_on_mount\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Run fsck at mount\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_fsck_on_mount_deep\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Run deep fsck at mount\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_fsck_on_umount\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Run fsck at umount\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_fsck_on_umount_deep\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Run deep fsck at umount\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_gc_enable_blob_threshold\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_gc_enable_total_threshold\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_kvbackend\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Key value database to use for bluestore\",\n        \"long_desc\": \"\",\n        \"default\": \"rocksdb\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_max_alloc_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum size of a single allocation (0 for no max)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_max_blob_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_max_blob_size_hdd\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"524288\"\n    },\n    {\n        \"name\": \"bluestore_max_blob_size_ssd\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"bluestore_max_deferred_txc\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max transactions with deferred writes that can accumulate before we force flush deferred writes\",\n        \"long_desc\": \"\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_min_alloc_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum allocation size to allocate for an object\",\n        \"long_desc\": \"A smaller allocation size generally means less data is read and then rewritten when a copy-on-write operation is triggered (e.g., when writing to something that was recently snapshotted).  Similarly, less data is journaled before performing an overwrite (writes smaller than min_alloc_size must first pass through the BlueStore journal).  Larger values of min_alloc_size reduce the amount of metadata required to describe the on-disk layout and reduce overall fragmentation.\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_min_alloc_size_hdd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default min_alloc_size value for rotational media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"bluestore_min_alloc_size_ssd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default min_alloc_size value for non-rotational (solid state)  media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"16384\"\n    },\n    {\n        \"name\": \"bluestore_nid_prealloc\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"Number of unique object ids to preallocate at a time\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_no_per_pool_stats_tolerance\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Specified how to treat lack of per-pool stats, e.g. caused by an upgrade\",\n        \"long_desc\": \"'until_fsck' will tolerate the case for regular ops and fail on fsck or repair, the latter will fix the issue, 'until_repair' will tolerate for regular ops and fsck. Repair indicates and fixes the issue, 'enforce' will unconditionally use global stats mode.\",\n        \"default\": \"until_repair\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"enforce\",\n            \"until_repair\",\n            \"until_fsck\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_prefer_deferred_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Writes smaller than this size will be written to the journal and then asynchronously written to the device.  This can be beneficial when using rotational media where seeks are expensive, and is helpful both with and without solid state journal/wal devices.\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_prefer_deferred_size_hdd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default bluestore_prefer_deferred_size for rotational media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"32768\"\n    },\n    {\n        \"name\": \"bluestore_prefer_deferred_size_ssd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default bluestore_prefer_deferred_size for non-rotational (solid state) media\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_retry_disk_reads\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of read retries on checksum validation error\",\n        \"long_desc\": \"Retries to read data from the disk this many times when checksum validation fails to handle spurious read errors gracefully.\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": 255,\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_rocksdb_cf\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable use of rocksdb column families for bluestore metadata\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_rocksdb_cfs\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"List of whitespace-separate key/value pairs where key is CF name and value is CF options\",\n        \"long_desc\": \"\",\n        \"default\": \"M= P= L=\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_rocksdb_options\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Rocksdb options\",\n        \"long_desc\": \"\",\n        \"default\": \"compression=kNoCompression,max_write_buffer_number=4,min_write_buffer_number_to_merge=1,recycle_log_file_num=4,write_buffer_size=268435456,writable_file_max_buffer_size=0,compaction_readahead_size=2097152\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_spdk_coremask\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"A hexadecimal bit mask of the cores to run on. Note the core numbering can change between platforms and should be determined beforehand\",\n        \"long_desc\": \"\",\n        \"default\": \"0x1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_spdk_io_sleep\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Time period to wait if there is no completed I/O from polling\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_spdk_max_io_completion\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Maximal I/Os to be batched completed while checking queue pair completions, 0 means let spdk library determine it\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_spdk_mem\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"Amount of dpdk memory size in MB\",\n        \"long_desc\": \"If running multiple SPDK instances per node, you must specify the amount of dpdk memory size in MB each instance will use, to make sure each instance uses its own dpdk memory\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"512\"\n    },\n    {\n        \"name\": \"bluestore_sync_submit_transaction\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Try to submit metadata transaction to rocksdb in queuing thread context\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"bluestore_throttle_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum bytes in flight before we throttle IO submission\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"67108864\"\n    },\n    {\n        \"name\": \"bluestore_throttle_cost_per_io\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Overhead added to transaction cost (in bytes) for each IO\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"bluestore_throttle_cost_per_io_hdd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default bluestore_throttle_cost_per_io for rotational media\",\n        \"long_desc\": \"\",\n        \"default\": 670000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_throttle_cost_per_io_ssd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default bluestore_throttle_cost_per_io for non-rotation (solid state) media\",\n        \"long_desc\": \"\",\n        \"default\": 4000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"bluestore_throttle_deferred_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum bytes for deferred writes before we throttle IO submission\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"default\": \"134217728\"\n    },\n    {\n        \"name\": \"cephx_cluster_require_signatures\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cephx_cluster_require_version\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Cephx version required by the cluster from clients (1 = pre-mimic, 2 = mimic+)\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cephx_require_signatures\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cephx_require_version\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Cephx version required (1 = pre-mimic, 2 = mimic+)\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cephx_service_require_signatures\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cephx_service_require_version\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Cephx version required from ceph services (1 = pre-mimic, 2 = mimic+)\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cephx_sign_messages\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"chdir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to chdir(2) to after daemonizing\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [\n            \"daemonize\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"client_acl_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"ACL type to enforce (none or \\\"posix_acl\\\")\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_cache_mid\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mid-point of client cache LRU\",\n        \"long_desc\": \"\",\n        \"default\": 0.75,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_cache_size\",\n        \"type\": \"size\",\n        \"level\": \"basic\",\n        \"desc\": \"soft maximum number of directory entries in client cache\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16384\"\n    },\n    {\n        \"name\": \"client_caps_release_delay\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_check_pool_perm\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"confirm access to inode's data pool/namespace described in file layout\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_debug_force_sync_read\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_debug_getattr_caps\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_debug_inject_tick_delay\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_die_on_failed_dentry_invalidate\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"kill the client when no dentry invalidation options are available\",\n        \"long_desc\": \"The CephFS client requires a mechanism to invalidate dentries in the caller (e.g. the kernel for ceph-fuse) when capabilities must be recalled. If the client cannot do this then the MDS cache cannot shrink which can cause the MDS to fail.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_die_on_failed_remount\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_dirsize_rbytes\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set the directory size as the number of file bytes recursively used\",\n        \"long_desc\": \"This option enables a CephFS feature that stores the recursive directory size (the bytes used by files in the directory and its descendents) in the st_size field of the stat structure.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_force_lazyio\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_inject_fixed_oldest_tid\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_inject_release_failure\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_max_inline_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"client_mds_namespace\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"CephFS file system name to mount\",\n        \"long_desc\": \"Use this with ceph-fuse, or with any process that uses libcephfs.  Programs using libcephfs may also pass the filesystem name into mount(), which will override this setting. If no filesystem name is given in mount() or this setting, the default filesystem will be mounted (usually the first created).\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_metadata\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"metadata key=value comma-delimited pairs appended to session metadata\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_mount_gid\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"gid to mount as\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_mount_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"timeout for mounting CephFS (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_mount_uid\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"uid to mount as\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_mountpoint\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default mount-point\",\n        \"long_desc\": \"\",\n        \"default\": \"/\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_notify_timeout\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_oc\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"enable object caching\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_oc_max_dirty\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum size of dirty pages in object cache\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"client_oc_max_dirty_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum age of dirty pages in object cache (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_oc_max_objects\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of objects in cache\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_oc_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum size of object cache\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"209715200\"\n    },\n    {\n        \"name\": \"client_oc_target_dirty\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"target size of dirty pages object cache\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8388608\"\n    },\n    {\n        \"name\": \"client_permissions\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"client-enforced permission checking\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_quota_df\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"show quota usage for statfs (df)\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_readahead_max_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum bytes to readahead in a file (zero is unlimited)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"client_readahead_max_periods\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum stripe periods to readahead in a file\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_readahead_min\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum bytes to readahead in a file\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"131072\"\n    },\n    {\n        \"name\": \"client_reconnect_stale\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"reconnect when the session becomes stale\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_snapdir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"pseudo directory for snapshot access to a directory\",\n        \"long_desc\": \"\",\n        \"default\": \".snap\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_tick_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"seconds between client upkeep ticks\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_trace\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"file containing trace of client operations\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_try_dentry_invalidate\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_use_faked_inos\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"client_use_random_mds\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"issue new requests to a random active MDS\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_graylog\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Make daemons send cluster log to graylog\",\n        \"long_desc\": \"\",\n        \"default\": \"false\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_graylog_host\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Graylog host to cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"127.0.0.1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"clog_to_graylog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_graylog_port\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Graylog port number for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"12201\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"clog_to_graylog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_monitors\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Make daemons send cluster log messages to monitors\",\n        \"long_desc\": \"\",\n        \"default\": \"default=true\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_syslog\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Make daemons send cluster log messages to syslog\",\n        \"long_desc\": \"\",\n        \"default\": \"false\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_syslog_facility\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Syslog facility for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"default=daemon audit=local0\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"clog_to_syslog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"clog_to_syslog_level\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Syslog level for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"info\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"clog_to_syslog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cluster_addr\",\n        \"type\": \"addr\",\n        \"level\": \"basic\",\n        \"desc\": \"cluster-facing address to bind to\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [],\n        \"default\": \"-\"\n    },\n    {\n        \"name\": \"cluster_network\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Network(s) from which to choose a cluster address to bind to\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"cluster_network_interface\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Interface name(s) from which to choose an address from a cluster_network to bind to; cluster_network must also be specified.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mds\",\n            \"osd\",\n            \"mgr\"\n        ],\n        \"see_also\": [\n            \"cluster_network\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"compressor_zlib_isal\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use Intel ISA-L accelerated zlib implementation if available\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"compressor_zlib_level\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Zlib compression level to use\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"crash_dir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Directory where crash reports are archived\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/lib/ceph/crash\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"crush_location\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"crush_location_hook\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"crush_location_hook_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"daemonize\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"whether to daemonize (background) after startup\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": true,\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [\n            \"pid_file\",\n            \"chdir\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"debug_asok\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for asok\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_asok_assert_abort\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"allow commands 'assert' and 'abort' via asok for testing crash dumps etc\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"debug_asserts_on_shutdown\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Enable certain asserts to check for refcounting bugs on shutdown; see http://tracker.ceph.com/issues/21738\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"debug_auth\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for auth\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_bdev\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for bdev\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/3\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_bluefs\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for bluefs\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_bluestore\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for bluestore\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_buffer\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for buffer\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_civetweb\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for civetweb\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/10\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_client\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for client\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_compressor\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for compressor\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_context\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for context\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_crush\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for crush\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_crypto\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for crypto\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_deliberately_leak_memory\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"debug_dpdk\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for dpdk\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_eventtrace\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for eventtrace\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_filer\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for filer\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_filestore\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for filestore\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/3\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_finisher\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for finisher\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_fuse\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for fuse\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_heartbeatmap\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for heartbeatmap\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_javaclient\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for javaclient\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_journal\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for journal\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/3\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_journaler\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for journaler\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_kinetic\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for kinetic\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_kstore\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for kstore\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_leveldb\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for leveldb\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"4/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_lockdep\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for lockdep\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_mds\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mds\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"mds\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_mds_balancer\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mds_balancer\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_mds_locker\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mds_locker\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_mds_log\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mds_log\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_mds_log_expire\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mds_log_expire\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_mds_migrator\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mds_migrator\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_memdb\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for memdb\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"4/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_mgr\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mgr\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"mgr\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_mgrc\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mgrc\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            },\n            {\n                \"section\": \"mds\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_mon\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for mon\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"mgr\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_monc\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for monc\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/10\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"mgr\",\n                \"value\": \"20/20\"\n            },\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            },\n            {\n                \"section\": \"mds\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_ms\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for ms\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"mgr\",\n                \"value\": \"1/1\"\n            },\n            {\n                \"section\": \"osd\",\n                \"value\": \"1/1\"\n            },\n            {\n                \"section\": \"mds\",\n                \"value\": \"1/1\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_none\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for none\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_objclass\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for objclass\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_objectcacher\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for objectcacher\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_objecter\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for objecter\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_optracker\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for optracker\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_osd\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for osd\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"25/25\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_paxos\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for paxos\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_perfcounter\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for perfcounter\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_rados\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rados\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_rbd\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rbd\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_rbd_mirror\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rbd_mirror\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_rbd_replay\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rbd_replay\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_refs\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for refs\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/0\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_reserver\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for reserver\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"10/10\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_rgw\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rgw\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_rgw_sync\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rgw_sync\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_rocksdb\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for rocksdb\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"4/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"20/20\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"debug_striper\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for striper\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_throttle\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for throttle\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_timer\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for timer\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_tp\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for tp\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"0/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"debug_xio\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Debug level for xio\",\n        \"long_desc\": \"The value takes the form 'N' or 'N/M' where N and M are values between 0 and 99.  N is the debug level to log (all values below this are included), and M is the level to gather and buffer in memory.  In the event of a crash, the most recent items <= M are dumped to the log file.\",\n        \"default\": \"1/5\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"device_failure_prediction_mode\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"Method used to predict device failures\",\n        \"long_desc\": \"To disable prediction, use 'none',  'local' uses a prediction model that runs inside the mgr daemon.  'cloud' will share metrics with a cloud service and query the service for devicelife expectancy.\",\n        \"default\": \"none\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"none\",\n            \"local\",\n            \"cloud\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"enable_experimental_unrecoverable_data_corrupting_features\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable named (or all with '*') experimental features that may be untested, dangerous, and/or cause permanent data loss\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"erasure_code_dir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"directory where erasure-code plugins can be found\",\n        \"long_desc\": \"\",\n        \"default\": \"/usr/local/lib64/ceph/erasure-code\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"err_to_graylog\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"send critical error log lines to remote graylog server\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"log_to_graylog\",\n            \"log_graylog_host\",\n            \"log_graylog_port\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"err_to_stderr\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"send critical error log lines to stderr\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": true,\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"err_to_syslog\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"send critical error log lines to syslog facility\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"event_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fatal_signal_handlers\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"whether to register signal handlers for SIGABRT etc that dump a stack trace\",\n        \"long_desc\": \"This is normally true for daemons and values for libraries.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filer_max_purge_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max in-flight operations for purging a striped range (e.g., MDS journal)\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filer_max_truncate_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max in-flight operations for truncating/deleting a striped sequence (e.g., MDS journal)\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_apply_finisher_threads\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_blackhole\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_btrfs_clone_range\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use btrfs clone_range ioctl to efficiently duplicate objects\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_btrfs_snap\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_caller_concurrency\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_collect_device_partition_information\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Collect metadata about the backing file system on OSD startup\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_commit_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Seconds before backing file system is considered hung\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_debug_inject_read_err\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_debug_omap_check\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_debug_random_read_err\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_debug_verify_split\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_dump_file\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_expected_throughput_bytes\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Expected throughput of backend device (aids throttling calculations)\",\n        \"long_desc\": \"\",\n        \"default\": 209715200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_expected_throughput_ops\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Expected through of backend device in IOPS (aids throttling calculations)\",\n        \"long_desc\": \"\",\n        \"default\": 200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_fadvise\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use posix_fadvise(2) to pass hints to file system\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_fail_eio\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_fd_cache_shards\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_fd_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_fiemap\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use fiemap ioctl(2) to determine which parts of objects are sparse\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_fiemap_threshold\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"filestore_fsync_flushes_journal_data\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_index_retry_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_inject_stall\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_journal_parallel\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_journal_trailing\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_journal_writeahead\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_kill_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_max_alloc_hint_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"filestore_max_inline_xattr_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"filestore_max_inline_xattr_size_btrfs\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"2048\"\n    },\n    {\n        \"name\": \"filestore_max_inline_xattr_size_other\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"512\"\n    },\n    {\n        \"name\": \"filestore_max_inline_xattr_size_xfs\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"filestore_max_inline_xattrs\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_max_inline_xattrs_btrfs\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_max_inline_xattrs_other\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_max_inline_xattrs_xfs\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_max_sync_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period between calls to syncfs(2) and journal trims (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_max_xattr_value_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"filestore_max_xattr_value_size_btrfs\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"filestore_max_xattr_value_size_other\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1024\"\n    },\n    {\n        \"name\": \"filestore_max_xattr_value_size_xfs\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"filestore_merge_threshold\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": -10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_min_sync_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Minimum period between calls to syncfs(2)\",\n        \"long_desc\": \"\",\n        \"default\": 0.01,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_odsync_write\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Write with O_DSYNC\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_omap_backend\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"rocksdb\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_omap_backend_path\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_omap_header_cache_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1024\"\n    },\n    {\n        \"name\": \"filestore_ondisk_finisher_threads\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_op_thread_suicide_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Seconds before a worker thread is considered dead\",\n        \"long_desc\": \"\",\n        \"default\": 180,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_op_thread_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Seconds before a worker thread is considered stalled\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_op_threads\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Threads used to apply changes to backing file system\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_punch_hole\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use fallocate(2) FALLOC_FL_PUNCH_HOLE to efficiently zero ranges of objects\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_high_delay_multiple\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_high_delay_multiple_bytes\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_high_delay_multiple_ops\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_high_threshhold\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.9,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_low_threshhold\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_max_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max (written) bytes in flight\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"filestore_queue_max_delay_multiple\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_max_delay_multiple_bytes\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_max_delay_multiple_ops\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_queue_max_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max IO operations in flight\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_rocksdb_options\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"max_background_jobs=10,compaction_readahead_size=2097152,compression=kNoCompression\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_seek_data_hole\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use lseek(2) SEEK_HOLE and SEEK_DATA to determine which parts of objects are sparse\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_sloppy_crc\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_sloppy_crc_block_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"filestore_splice\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use splice(2) to more efficiently copy data between files\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_split_multiple\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_split_rand_factor\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_update_to\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_btrfs_bytes_hard_limit\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Block writes when this many bytes haven't been flushed (fsynced) (btrfs)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"419430400\"\n    },\n    {\n        \"name\": \"filestore_wbthrottle_btrfs_bytes_start_flusher\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Start flushing (fsyncing) when this many bytes are written(btrfs)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"41943040\"\n    },\n    {\n        \"name\": \"filestore_wbthrottle_btrfs_inodes_hard_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Block writing when this many inodes have outstanding writes (btrfs)\",\n        \"long_desc\": \"\",\n        \"default\": 5000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_btrfs_inodes_start_flusher\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Start flushing (fsyncing) when this many distinct inodes have been modified (btrfs)\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_btrfs_ios_hard_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Block writes when this many IOs haven't been flushed (fsynced) (btrfs)\",\n        \"long_desc\": \"\",\n        \"default\": 5000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_btrfs_ios_start_flusher\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Start flushing (fsyncing) when this many IOs are written (brtrfs)\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_enable\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enabling throttling of operations to backing file system\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_xfs_bytes_hard_limit\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Block writes when this many bytes haven't been flushed (fsynced) (xfs)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"419430400\"\n    },\n    {\n        \"name\": \"filestore_wbthrottle_xfs_bytes_start_flusher\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Start flushing (fsyncing) when this many bytes are written(xfs)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"41943040\"\n    },\n    {\n        \"name\": \"filestore_wbthrottle_xfs_inodes_hard_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Block writing when this many inodes have outstanding writes (xfs)\",\n        \"long_desc\": \"\",\n        \"default\": 5000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_xfs_inodes_start_flusher\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Start flushing (fsyncing) when this many distinct inodes have been modified (xfs)\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_xfs_ios_hard_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Block writes when this many IOs haven't been flushed (fsynced) (xfs)\",\n        \"long_desc\": \"\",\n        \"default\": 5000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_wbthrottle_xfs_ios_start_flusher\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Start flushing (fsyncing) when this many IOs are written (xfs)\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_xfs_extsize\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use XFS extsize ioctl(2) to hint allocator about expected write sizes\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"filestore_zfs_snap\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fio_dir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"/tmp/fio\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fsid\",\n        \"type\": \"uuid\",\n        \"level\": \"basic\",\n        \"desc\": \"cluster fsid (uuid)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ],\n        \"default\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n        \"name\": \"fuse_allow_other\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"pass allow_other to FUSE on mount\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_atomic_o_trunc\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"pass atomic_o_trunc flag to FUSE on mount\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_big_writes\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"big_writes is deprecated in libfuse 3.0.0\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_debug\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_default_permissions\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"pass default_permisions to FUSE on mount\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_disable_pagecache\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"disable page caching in the kernel for this FUSE mount\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_max_write\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"set the maximum number of bytes in a single write operation\",\n        \"long_desc\": \"Set the maximum number of bytes in a single write operation that may pass atomically through FUSE. The FUSE default is 128kB and may be indicated by setting this option to 0.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"fuse_multithreaded\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"allow parallel processing through FUSE library\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_require_active_mds\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"require active MDSs in the file system when mounting\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_set_user_groups\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"check for ceph-fuse to consider supplementary groups for permissions\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_syncfs_on_mksnap\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"synchronize all local metadata/file changes after snapshot\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"fuse_use_invalidate_cb\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"use fuse 2.8+ invalidate callback to keep page cache consistent\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"gss_ktab_client_file\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"GSS/KRB5 Keytab file for client authentication\",\n        \"long_desc\": \"This sets the full path for the GSS/Kerberos client keytab file location.\",\n        \"default\": \"/var/lib/ceph/$name/gss_client_$name.ktab\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"gss_target_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"This sets the gss target service name.\",\n        \"default\": \"ceph\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"heartbeat_file\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"File to touch on successful internal heartbeat\",\n        \"long_desc\": \"If set, this file will be touched every time an internal heartbeat check succeeds.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"heartbeat_interval\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"heartbeat_inject_failure\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"heartbeat_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Frequency of internal heartbeat checks (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"host\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"local hostname\",\n        \"long_desc\": \"if blank, ceph assumes the short hostname (hostname -s)\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"inject_early_sigterm\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"send ourselves a SIGTERM early during startup\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_aio\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_align_min_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"journal_block_align\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_block_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"journal_dio\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_discard\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_force_aio\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_ignore_corruption\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_max_write_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max bytes in flight to journal\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"10485760\"\n    },\n    {\n        \"name\": \"journal_max_write_entries\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max IOs in flight to journal\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_replay_from\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_throttle_high_multiple\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_throttle_high_threshhold\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.9,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_throttle_low_threshhold\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.6,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_throttle_max_multiple\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_write_header_frequency\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journal_zero_on_create\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journaler_prefetch_periods\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of striping periods to prefetch while reading MDS journal\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 2,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journaler_prezero_periods\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of striping periods to zero head of MDS journal write position\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 2,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"journaler_write_head_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Interval in seconds between journal header updates (to help bound replay time)\",\n        \"long_desc\": \"\",\n        \"default\": 15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"key\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Authentication key\",\n        \"long_desc\": \"A CephX authentication key, base64 encoded.  It normally looks something like 'AQAtut9ZdMbNJBAAHz6yBAWyJyz2yYRyeMWDag=='.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"keyfile\",\n            \"keyring\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"keyfile\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Path to a file containing a key\",\n        \"long_desc\": \"The file should contain a CephX authentication key and optionally a trailing newline, but nothing else.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"key\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"keyring\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Path to a keyring file.\",\n        \"long_desc\": \"A keyring file is an INI-style formatted file where the section names are client or daemon names (e.g., 'osd.0') and each section contains a 'key' property with CephX authentication key as the value.\",\n        \"default\": \"/etc/ceph/$cluster.$name.keyring,/etc/ceph/$cluster.keyring,/etc/ceph/keyring,/etc/ceph/keyring.bin,\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"key\",\n            \"keyfile\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"kinetic_hmac_key\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"asdfasdf\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kinetic_host\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kinetic_port\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 8123,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kinetic_use_ssl\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kinetic_user_id\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_backend\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"rocksdb\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_default_stripe_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"kstore_fsck_on_mount\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_fsck_on_mount_deep\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_max_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"67108864\"\n    },\n    {\n        \"name\": \"kstore_max_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 512,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_nid_prealloc\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_onode_map_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_rocksdb_options\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"compression=kNoCompression\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_sync_submit_transaction\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"kstore_sync_transaction\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_block_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"leveldb_bloom_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_cache_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"134217728\"\n    },\n    {\n        \"name\": \"leveldb_compact_on_mount\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_compression\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_log\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"/dev/null\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_log_to_ceph_log\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_max_open_files\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_paranoid\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"leveldb_write_buffer_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8388608\"\n    },\n    {\n        \"name\": \"lockdep\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"enable lockdep lock dependency analyzer\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"lockdep_force_backtrace\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"always gather current backtrace at every lock\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [\n            \"lockdep\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_coarse_timestamps\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"timestamp log entries from coarse system clock to improve performance\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"performance\",\n            \"service\"\n        ],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_file\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"path to log file\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"/var/log/ceph/$cluster-$name.log\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"log_to_stderr\",\n            \"err_to_stderr\",\n            \"log_to_syslog\",\n            \"err_to_syslog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_flush_on_exit\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set a process exit handler to ensure the log is flushed on exit\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_graylog_host\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"address or hostname of graylog server to log to\",\n        \"long_desc\": \"\",\n        \"default\": \"127.0.0.1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"log_to_graylog\",\n            \"err_to_graylog\",\n            \"log_graylog_port\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_graylog_port\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"port number for the remote graylog server\",\n        \"long_desc\": \"\",\n        \"default\": 12201,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"log_graylog_host\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_max_new\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max unwritten log entries to allow before waiting to flush to the log\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"log_max_recent\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_max_recent\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"recent log entries to keep in memory to dump in the event of a crash\",\n        \"long_desc\": \"The purpose of this option is to log at a higher debug level only to the in-memory buffer, and write out the detailed log messages only if there is a crash.  Only log entries below the lower log level will be written unconditionally to the log.  For example, debug_osd=1/5 will write everything <= 1 to the log unconditionally but keep entries at levels 2-5 in memory.  If there is a seg fault or assertion failure, all entries will be dumped to the log.\",\n        \"default\": 500,\n        \"daemon_default\": 10000,\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_stderr_prefix\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"String to prefix log messages with when sent to stderr\",\n        \"long_desc\": \"This is useful in container environments when combined with mon_cluster_log_to_stderr.  The mon log prefixes each line with the channel name (e.g., 'default', 'audit'), while log_stderr_prefix can be set to 'debug '.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"mon_cluster_log_to_stderr\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_stop_at_utilization\",\n        \"type\": \"float\",\n        \"level\": \"basic\",\n        \"desc\": \"stop writing to the log file when device utilization reaches this ratio\",\n        \"long_desc\": \"\",\n        \"default\": 0.97,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"log_file\"\n        ],\n        \"min\": 0,\n        \"max\": 1,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_to_graylog\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"send log lines to remote graylog server\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"err_to_graylog\",\n            \"log_graylog_host\",\n            \"log_graylog_port\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_to_stderr\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"send log lines to stderr\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": false,\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"log_to_syslog\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"send log lines to syslog facility\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"max_rotating_auth_attempts\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_action_on_write_error\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"action to take when MDS cannot write to RADOS (0:ignore, 1:read-only, 2:suicide)\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_export_pin\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"allow setting directory export pins to particular ranks\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_fragment_dirs\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"enable directory fragmentation\",\n        \"long_desc\": \"Directory fragmentation is a standard feature of CephFS that allows sharding directories across multiple objects for performance and stability. Additionally, this allows fragments to be distributed across multiple active MDSs to increase throughput. Disabling (new) fragmentation should only be done in exceptional circumstances and may lead to performance issues.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_fragment_fast_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"ratio of mds_bal_split_size at which fast fragment splitting occurs\",\n        \"long_desc\": \"\",\n        \"default\": 1.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_fragment_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"delay in seconds before interrupting client IO to perform splits\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_fragment_size_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum size of a directory fragment before new creat/links fail\",\n        \"long_desc\": \"\",\n        \"default\": 100000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_idle_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"idle metadata popularity threshold before rebalancing\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval between MDS balancer cycles\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_max\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_max_until\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_merge_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"size of fragments where merging should occur\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_midchunk\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_min_rebalance\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"amount overloaded over internal target before balancer begins offloading\",\n        \"long_desc\": \"\",\n        \"default\": 0.1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_min_start\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_minchunk\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.001,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_mode\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_need_max\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1.2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_need_min\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_replicate_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"hot popularity threshold to replicate a subtree\",\n        \"long_desc\": \"\",\n        \"default\": 8000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_sample_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval in seconds between balancer ticks\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_split_bits\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"power of two child fragments for a fragment on split\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": 24,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_split_rd\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"hot read popularity threshold for splitting a directory fragment\",\n        \"long_desc\": \"\",\n        \"default\": 25000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_split_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum size of directory fragment before splitting\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_split_wr\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"hot write popularity threshold for splitting a directory fragment\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_target_decay\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"rate of decay for export targets communicated to clients\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_bal_unreplicate_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"cold popularity threshold to merge subtrees\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_beacon_grace\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"tolerance in seconds for missed MDS beacons to monitors\",\n        \"long_desc\": \"\",\n        \"default\": 15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_beacon_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval in seconds between MDS beacons to monitors\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_cache_memory_limit\",\n        \"type\": \"size\",\n        \"level\": \"basic\",\n        \"desc\": \"target maximum memory usage of MDS cache\",\n        \"long_desc\": \"This sets a target maximum memory usage of the MDS cache and is the primary tunable to limit the MDS memory usage. The MDS will try to stay under a reservation of this limit (by default 95%; 1 - mds_cache_reservation) by trimming unused metadata in its cache and recalling cached items in the client caches. It is possible for the MDS to exceed this limit due to slow recall from clients. The mds_health_cache_threshold (150%) sets a cache full threshold for when the MDS signals a cluster health warning.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"mds_cache_mid\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"midpoint for MDS cache LRU\",\n        \"long_desc\": \"\",\n        \"default\": 0.7,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_cache_reservation\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"amount of memory to reserve for future cached objects\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of inodes in MDS cache (<=0 is unlimited)\",\n        \"long_desc\": \"This tunable is no longer recommended. Use mds_cache_memory_limit.\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_cap_revoke_eviction_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds after which clients which have not responded to cap revoke messages by the MDS are evicted.\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_client_prealloc_inos\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of unused inodes to pre-allocate to clients for file creation\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_client_writeable_range_max_inc_objs\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of objects in writeable range of a file for a client\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_damage_table_max_entries\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of damage table entries\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_data\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to MDS data and keyring\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/lib/ceph/mds/$cluster-$id\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"mds_debug_auth_pins\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mds\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mds_debug_frag\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mds\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mds_debug_scatterstat\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mds\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mds_debug_subtrees\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mds\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mds_decay_halflife\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"rate of decay for temperature counters on each directory for balancing\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_default_dir_hash\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"hash function to select directory fragment for dentry name\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_dir_keys_per_op\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of directory entries to read in one RADOS operation\",\n        \"long_desc\": \"\",\n        \"default\": 16384,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_dir_max_commit_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum size in megabytes for a RADOS write to a directory\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_dirstat_min_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_dump_cache_after_rejoin\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_dump_cache_on_map\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_dump_cache_threshold_file\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"threshold for cache usage to disallow \\\"dump cache\\\" operation to file\",\n        \"long_desc\": \"Disallow MDS from dumping caches to file via \\\"dump cache\\\" command if cache usage exceeds this threshold.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"mds_dump_cache_threshold_formatter\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"threshold for cache usage to disallow \\\"dump cache\\\" operation to formatter\",\n        \"long_desc\": \"Disallow MDS from dumping caches to formatter via \\\"dump cache\\\" command if cache usage exceeds this threshold.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"mds_early_reply\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"additional reply to clients that metadata requests are complete but not yet durable\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_enable_op_tracker\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"track remote operation progression and statistics\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_enforce_unique_name\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"require MDS name is unique in the cluster\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_freeze_tree_timeout\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_hack_allow_loading_invalid_metadata\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"INTENTIONALLY CAUSE DATA LOSS by bypasing checks for invalid metadata on disk. Allows testing repair tools.\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_health_cache_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"threshold for cache size to generate health warning\",\n        \"long_desc\": \"\",\n        \"default\": 1.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_health_summarize_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"threshold of number of clients to summarize late client recall\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_heartbeat_grace\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"tolerance in seconds for MDS internal heartbeat\",\n        \"long_desc\": \"\",\n        \"default\": 15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_inject_migrator_session_race\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_inject_traceless_reply_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_journal_format\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_create_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_export_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_import_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_journal_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_journal_expire_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_journal_replay_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_link_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_mdstable_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_openc_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_kill_rename_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_log_events_per_segment\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of events in an MDS journal segment\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_log_max_events\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of events in the MDS journal (-1 is unlimited)\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_log_max_segments\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of segments which may be untrimmed\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_log_pause\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_log_segment_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"size in bytes of each MDS log segment\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"mds_log_skip_corrupt_events\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_completed_flushes\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_completed_requests\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_export_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"20971520\"\n    },\n    {\n        \"name\": \"mds_max_file_recover\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of files to recover file sizes in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_purge_files\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of deleted files to purge in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_purge_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of purge operations performed in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 8192,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_purge_ops_per_pg\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of parallel purge operations performed per PG\",\n        \"long_desc\": \"\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_ratio_caps_per_client\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"maximum ratio of current caps that may be recalled during MDS cache pressure\",\n        \"long_desc\": \"\",\n        \"default\": 0.8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_retries_on_remount_failure\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of consecutive failed remount attempts for invalidating kernel dcache after which client would abort.\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_scrub_ops_in_progress\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of scrub operations performed in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_max_xattr_pairs_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum aggregate size of extended attributes on a file\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"mds_min_caps_per_client\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum number of capabilities a client may hold\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_mon_shutdown_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"time to wait for mon to receive damaged MDS rank notification\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_op_complaint_time\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"time in seconds to consider an operation blocked after no updates\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_op_history_duration\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"expiration time in seconds of historical operations\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_op_history_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum size for list of historical operations\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_op_log_threshold\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_purge_queue_busy_flush_period\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_recall_state_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"timeout for clients late on cap recall to create health warnings\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_reconnect_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"timeout in seconds to wait for clients to reconnect during MDS reconnect recovery state\",\n        \"long_desc\": \"\",\n        \"default\": 45,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_replay_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"time in seconds between replay of updates to journal by standby replay MDS\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_request_load_average_decay_rate\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"rate of decay in seconds for calculating request load average\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_root_ino_gid\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"default gid for new root directory\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_root_ino_uid\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"default uid for new root directory\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_scatter_nudge_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum interval between scatter lock updates\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_session_blacklist_on_evict\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"blacklist clients that have been evicted\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_session_blacklist_on_timeout\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"blacklist clients whose sessions have become stale\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_sessionmap_keys_per_op\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of omap keys to read from the SessionMap in one operation\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_shutdown_check\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_skip_ino\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_snap_max_uid\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum uid of client to perform snapshots\",\n        \"long_desc\": \"\",\n        \"default\": 4294967294,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_snap_min_uid\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum uid of client to perform snapshots\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_snap_rstat\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"enabled nested rstat for snapshots\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_standby_for_fscid\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"standby only for the file system with the given fscid\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_standby_for_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"standby for named MDS daemon when not active\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_standby_for_rank\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"allow MDS to become a standby:replay daemon\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_standby_replay\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"allow MDS to standby replay for an active MDS\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_thrash_exports\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_thrash_fragments\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_tick_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"time in seconds between upkeep tasks\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_verify_backtrace\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_verify_scatter\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mds\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mds_wipe_ino_prealloc\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mds_wipe_sessions\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mempool_debug\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"memstore_device_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"memstore_page_set\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"memstore_page_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"mgr_client_bytes\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"134217728\"\n    },\n    {\n        \"name\": \"mgr_client_messages\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 512,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_client_service_daemon_unregister_timeout\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Time to wait during shutdown to deregister service with mgr\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_connect_retry_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_data\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Filesystem path to the ceph-mgr data directory, used to contain keyring.\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/lib/ceph/mgr/$cluster-$id\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"mgr_debug_aggressive_pg_num_changes\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Bypass most throttling and safety checks in pg[p]_num controller\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_initial_modules\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"List of manager modules to enable when the cluster is first started\",\n        \"long_desc\": \"This list of module names is read by the monitor when the cluster is first started after installation, to populate the list of enabled manager modules.  Subsequent updates are done using the 'mgr module [enable|disable]' commands.  List may be comma or space separated.\",\n        \"default\": \"restful iostat\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mgr_mds_bytes\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"134217728\"\n    },\n    {\n        \"name\": \"mgr_mds_messages\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_module_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Filesystem path to manager modules.\",\n        \"long_desc\": \"\",\n        \"default\": \"/usr/local/lib64/ceph/mgr\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_mon_bytes\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"134217728\"\n    },\n    {\n        \"name\": \"mgr_mon_messages\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_osd_bytes\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"536870912\"\n    },\n    {\n        \"name\": \"mgr_osd_messages\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 8192,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_service_beacon_grace\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period in seconds from last beacon to manager dropping state about a monitored service (RGW, rbd-mirror etc)\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_stats_period\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"Period in seconds of OSD/MDS stats reports to manager\",\n        \"long_desc\": \"Use this setting to control the granularity of time series data collection from daemons.  Adjust upwards if the manager CPU load is too high, or if you simply do not require the most up to date performance counter data.\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_stats_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Lowest perfcounter priority collected by mgr\",\n        \"long_desc\": \"Daemons only set perf counter data to the manager daemon if the counter has a priority higher than this.\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": 11,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mgr_tick_period\",\n        \"type\": \"secs\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period in seconds of beacon messages to monitor\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"2\"\n    },\n    {\n        \"name\": \"mon_accept_timeout_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"multiple of mon_lease for follower mons to accept proposed state changes before calling a new election\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_lease\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_allow_pool_delete\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"allow pool deletions\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mon\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mon_cache_target_full_warn_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue CACHE_POOL_NEAR_FULL health warning when cache pool utilization exceeds this ratio of usable space\",\n        \"long_desc\": \"\",\n        \"default\": 0.66,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_client_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"max bytes of outstanding client messages mon will read off the network\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"mon_client_hunt_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_hunt_interval_backoff\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_hunt_interval_max_multiple\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_hunt_interval_min_multiple\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_hunt_parallel\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_max_log_entries_per_message\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_ping_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_client_ping_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_clock_drift_allowed\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"allowed clock drift (in seconds) between mons before issuing a health warning\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_clock_drift_warn_backoff\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"exponential backoff factor for logging clock drift warnings in the cluster log\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_file\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"File(s) to write cluster log to\",\n        \"long_desc\": \"This can either be a simple file name to receive all messages, or a list of key/value pairs where the key is the log channel and the value is the filename, which may include $cluster and $channel metavariables\",\n        \"default\": \"default=/var/log/ceph/$cluster.$channel.log cluster=/var/log/ceph/$cluster.log\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_file_level\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Lowest level to include is cluster log file\",\n        \"long_desc\": \"\",\n        \"default\": \"info\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_cluster_log_file\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_graylog\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Make monitor send cluster log to graylog\",\n        \"long_desc\": \"\",\n        \"default\": \"false\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_graylog_host\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Graylog host for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"127.0.0.1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_cluster_log_to_graylog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_graylog_port\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Graylog port for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"12201\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_cluster_log_to_graylog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_stderr\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Make monitor send cluster log messages to stderr (prefixed by channel)\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"log_stderr_prefix\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_syslog\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Make monitor send cluster log messages to syslog\",\n        \"long_desc\": \"\",\n        \"default\": \"default=false\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_syslog_facility\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Syslog facility for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"daemon\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_cluster_log_to_syslog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_cluster_log_to_syslog_level\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Syslog level for cluster log messages\",\n        \"long_desc\": \"\",\n        \"default\": \"info\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_cluster_log_to_syslog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_compact_on_bootstrap\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_compact_on_start\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_compact_on_trim\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_config_key_max_entry_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Defines the number of bytes allowed to be held in a single config-key entry\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"mon_cpu_threads\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"worker threads for CPU intensive background work\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_crush_min_required_version\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum ceph release to use for mon_warn_on_legacy_crush_tunables\",\n        \"long_desc\": \"\",\n        \"default\": \"firefly\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [\n            \"mon_warn_on_legacy_crush_tunables\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_daemon_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"max bytes of outstanding mon messages mon will read off the network\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"419430400\"\n    },\n    {\n        \"name\": \"mon_data\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to mon database\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/lib/ceph/mon/$cluster-$id\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"mon_data_avail_crit\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue MON_DISK_CRIT health error when mon available space below this percentage\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mon\",\n                \"value\": \"1\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mon_data_avail_warn\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"isue MON_DISK_LOW health warning when mon available space below this percentage\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"mon\",\n                \"value\": \"2\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mon_data_size_warn\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue MON_DISK_BIG health warning when mon database is above this size\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16106127360\"\n    },\n    {\n        \"name\": \"mon_debug_block_osdmap_trim\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Block OSDMap trimming while the option is enabled.\",\n        \"long_desc\": \"Blocking OSDMap trimming may be quite helpful to easily reproduce states in which the monitor keeps (hundreds of) thousands of osdmaps.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_deprecated_as_obsolete\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"treat deprecated mon commands as obsolete\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_dump_json\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"dump paxos transasctions to log as json\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_debug_dump_transactions\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_dump_location\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"file to dump paxos transactions to\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/log/ceph/$cluster-$name.tdump\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_debug_dump_transactions\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_dump_transactions\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"dump paxos transactions to log\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_debug_dump_location\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_extra_checks\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Enable some additional monitor checks\",\n        \"long_desc\": \"Enable some additional monitor checks that would be too expensive to run on production systems, or would only be relevant while testing or debugging.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_no_initial_persistent_features\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"do not set any monmap features for new mon clusters\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_debug_no_require_bluestore_for_ec_overwrites\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"do not require bluestore OSDs to enable EC overwrites on a rados pool\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_debug_no_require_mimic\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"do not set mimic feature for new mon clusters\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_debug_no_require_nautilus\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"do not set nautilus feature for new mon clusters\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_debug_unsafe_allow_tier_with_nonempty_snaps\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_delta_reset_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"window duration for rate calculations in 'ceph status'\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_dns_srv_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"name of DNS SRV record to check for monitor addresses\",\n        \"long_desc\": \"\",\n        \"default\": \"ceph-mon\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [\n            \"mon_host\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"mon_election_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum time for a mon election (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_enable_op_tracker\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"enable/disable MON op tracking\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_fake_pool_delete\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"fake pool deletions by renaming the rados pool\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_force_quorum_join\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"force mon to rejoin quorum even though it was just removed\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_force_standby_active\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"allow use of MDS daemons in standby-replay as replacements\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_globalid_prealloc\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of globalid values to preallocate\",\n        \"long_desc\": \"This setting caps how many new clients can authenticate with the cluster before the monitors have to perform a write to preallocate more.  Large values burn through the 64-bit ID space more quickly.\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_health_log_update_period\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"minimum time in seconds between log messages about each health check\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_health_max_detail\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"max detailed pgs to report in health detail\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_health_to_clog\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"log monitor health to cluster log\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_health_to_clog_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"frequency to log monitor health to cluster log\",\n        \"long_desc\": \"\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_health_to_clog\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_health_to_clog_tick_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_host\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"list of hosts or addresses to search for a monitor\",\n        \"long_desc\": \"This is a comma, whitespace, or semicolon separated list of IP addresses or hostnames. Hostnames are resolved via DNS and all A or AAAA records are included in the search list.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"mon_initial_members\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_inject_pg_merge_bounce_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"probability of failing and reverting a pg_num decrement\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_inject_sync_get_chunk_delay\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"inject delay during sync (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_inject_transaction_delay_max\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"max duration of injected delay in paxos\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_inject_transaction_delay_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"probability of injecting a delay in paxos\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_keyvaluedb\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"database backend to use for the mon database\",\n        \"long_desc\": \"\",\n        \"default\": \"rocksdb\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"leveldb\",\n            \"rocksdb\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"mon_lease\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"lease interval between quorum monitors (seconds)\",\n        \"long_desc\": \"This setting controls how sensitive your mon quorum is to intermittent network issues or other failures.\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_lease_ack_timeout_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"multiple of mon_lease for the lease ack interval before calling new election\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_lease\"\n        ],\n        \"min\": 1.0001,\n        \"max\": 100,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_lease_renew_interval_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"multiple of mon_lease for the lease renewal interval\",\n        \"long_desc\": \"Leases must be renewed before they time out.  A smaller value means frequent renewals, while a value close to 1 makes a lease expiration more likely.\",\n        \"default\": 0.6,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_lease\"\n        ],\n        \"min\": 0,\n        \"max\": 0.9999999,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_log_max_summary\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of recent cluster log messages to retain\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_log_entries_per_event\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max cluster log entries per paxos event\",\n        \"long_desc\": \"\",\n        \"default\": 4096,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_log_epochs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of past cluster log epochs to store\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_mdsmap_epochs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of FSMaps/MDSMaps to store\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_mgrmap_epochs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of MgrMaps to store\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_osd\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of OSDs in a cluster\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_pg_per_osd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of PGs per OSD the cluster will allow\",\n        \"long_desc\": \"If the number of PGs per OSD exceeds this, a health warning will be visible in `ceph status`.  This is also used in automated PG management, as the threshold at which some pools' pg_num may be shrunk in order to enable increasing the pg_num of others.\",\n        \"default\": 250,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_pool_pg_num\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 65536,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_max_snap_prune_per_epoch\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of pruned snaps we will process in a single OSDMap epoch\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mds_blacklist_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Duration in seconds that blacklist entries for MDS daemons remain in the OSD map\",\n        \"long_desc\": \"\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": 3600,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mds_force_trim_to\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"force mons to trim mdsmaps/fsmaps through this epoch\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mds_skip_sanity\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"skip sanity checks on fsmap/mdsmap\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mgr_beacon_grace\",\n        \"type\": \"secs\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period in seconds from last beacon to monitor marking a manager daemon as failed\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"30\"\n    },\n    {\n        \"name\": \"mon_mgr_digest_period\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"Period in seconds between monitor-to-manager health/status updates\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mgr_inactive_grace\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period in seconds after cluster creation during which cluster may have no active manager\",\n        \"long_desc\": \"This grace period enables the cluster to come up cleanly without raising spurious health check failures about managers that aren't online yet\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mgr_mkfs_grace\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period in seconds that the cluster may have no active manager before this is reported as an ERR rather than a WARN\",\n        \"long_desc\": \"\",\n        \"default\": 120,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_mgr_proxy_client_bytes_ratio\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"ratio of mon_client_bytes that can be consumed by proxied mgr commands before we error out to client\",\n        \"long_desc\": \"\",\n        \"default\": 0.3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_min_osdmap_epochs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"min number of OSDMaps to store\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_op_complaint_time\",\n        \"type\": \"secs\",\n        \"level\": \"advanced\",\n        \"desc\": \"time after which to consider a monitor operation blocked after no updates\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"30\"\n    },\n    {\n        \"name\": \"mon_op_history_duration\",\n        \"type\": \"secs\",\n        \"level\": \"advanced\",\n        \"desc\": \"expiration time in seconds of historical MON OPS\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"600\"\n    },\n    {\n        \"name\": \"mon_op_history_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of completed ops to track\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_op_history_slow_op_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of slow historical MON OPS to keep\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_op_history_slow_op_threshold\",\n        \"type\": \"secs\",\n        \"level\": \"advanced\",\n        \"desc\": \"duration of an op to be considered as a historical slow op\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"10\"\n    },\n    {\n        \"name\": \"mon_op_log_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max number of slow ops to display\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_adjust_down_out_interval\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"increase the mon_osd_down_out_interval if an OSD appears to be laggy\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_adjust_heartbeat_grace\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_adjust_heartbeat_grace\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"increase OSD heartbeat grace if peers appear to be laggy\",\n        \"long_desc\": \"If an OSD is marked down but then marks itself back up, it implies it wasn't actually down but was unable to respond to heartbeats.  If this option is true, we can use the laggy_probability and laggy_interval values calculated to model this situation to increase the heartbeat grace period for this OSD so that it isn't marked down again.  laggy_probability is an estimated probability that the given OSD is down because it is laggy (not actually down), and laggy_interval is an estiate on how long it stays down when it is laggy.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_laggy_halflife\",\n            \"mon_osd_laggy_weight\",\n            \"mon_osd_laggy_max_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_auto_mark_auto_out_in\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"mark any OSD that comes up that was automatically marked 'out' back 'in'\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_down_out_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_auto_mark_in\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"mark any OSD that comes up 'in'\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_auto_mark_new_in\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"mark any new OSD that comes up 'in'\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_backfillfull_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.9,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_osd_blacklist_default_expire\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Duration in seconds that blacklist entries for clients remain in the OSD map\",\n        \"long_desc\": \"\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of OSDMaps to cache in memory\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_crush_smoke_test\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"perform a smoke test on any new CRUSH map before accepting changes\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_destroyed_out_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"mark any OSD 'out' that has been 'destroy'ed for this long (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_down_out_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"mark any OSD 'out' that has been 'down' for this long (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_down_out_subtree_limit\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"do not automatically mark OSDs 'out' if an entire subtree of this size is down\",\n        \"long_desc\": \"\",\n        \"default\": \"rack\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_down_out_interval\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_err_op_age_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue REQUEST_STUCK health error if OSD ops are slower than is age (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_force_trim_to\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"force mons to trim osdmaps through this epoch\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_full_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"full ratio of OSDs to be set during initial creation of the cluster\",\n        \"long_desc\": \"\",\n        \"default\": 0.95,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_osd_initial_require_min_compat_client\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"jewel\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_osd_laggy_halflife\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"halflife of OSD 'lagginess' factor\",\n        \"long_desc\": \"\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_laggy_max_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"cap value for period for OSD to be marked for laggy_interval calculation\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_laggy_weight\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"how heavily to weight OSD marking itself back up in overall laggy_probability\",\n        \"long_desc\": \"1.0 means that an OSD marking itself back up (because it was marked down but not actually dead) means a 100% laggy_probability; 0.0 effectively disables tracking of laggy_probability.\",\n        \"default\": 0.3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": 1,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_mapping_pgs_per_chunk\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"granularity of PG placement calculation background work\",\n        \"long_desc\": \"\",\n        \"default\": 4096,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_max_creating_pgs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of PGs the mon will create at once\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_max_initial_pgs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of PGs a pool will created with\",\n        \"long_desc\": \"If the user specifies more PGs than this, the cluster will subsequently split PGs after the pool is created in order to reach the target.\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_min_down_reporters\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of OSDs from different subtrees who need to report a down OSD for it to count\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_reporter_subtree_level\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_min_in_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"do not automatically mark OSDs 'out' if fewer than this many OSDs are 'in'\",\n        \"long_desc\": \"\",\n        \"default\": 0.75,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_down_out_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_min_up_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"do not automatically mark OSDs 'out' if fewer than this many OSDs are 'up'\",\n        \"long_desc\": \"\",\n        \"default\": 0.3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osd_down_out_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_nearfull_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"nearfull ratio for OSDs to be set during initial creation of cluster\",\n        \"long_desc\": \"\",\n        \"default\": 0.85,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"cluster_create\"\n        ]\n    },\n    {\n        \"name\": \"mon_osd_prime_pg_temp\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"minimize peering work by priming pg_temp values after a map change\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_prime_pg_temp_max_estimate\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"calculate all PG mappings if estimated fraction of PGs that change is above this amount\",\n        \"long_desc\": \"\",\n        \"default\": 0.25,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_prime_pg_temp_max_time\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"maximum time to spend precalculating PG mappings on map change (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_report_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"time before OSDs who do not report to the mons are marked down (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 900,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_reporter_subtree_level\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"in which level of parent bucket the reporters are counted\",\n        \"long_desc\": \"\",\n        \"default\": \"host\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"mon\",\n                \"value\": \"osd\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mon_osd_snap_trim_queue_warn_on\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Warn when snap trim queue is that large (or larger).\",\n        \"long_desc\": \"Warn when snap trim queue length for at least one PG crosses this value, as this is indicator of snap trimmer not keeping up, wasting disk space\",\n        \"default\": 32768,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osd_warn_op_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue REQUEST_SLOW health warning if OSD ops are slower than this age (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osdmap_full_prune_enabled\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"enables pruning full osdmap versions when we go over a given number of maps\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osdmap_full_prune_min\",\n            \"mon_osdmap_full_prune_interval\",\n            \"mon_osdmap_full_prune_txsize\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osdmap_full_prune_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval between maps that will not be pruned; maps in the middle will be pruned.\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osdmap_full_prune_enabled\",\n            \"mon_osdmap_full_prune_interval\",\n            \"mon_osdmap_full_prune_txsize\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osdmap_full_prune_min\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum number of versions in the store to trigger full map pruning\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osdmap_full_prune_enabled\",\n            \"mon_osdmap_full_prune_interval\",\n            \"mon_osdmap_full_prune_txsize\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_osdmap_full_prune_txsize\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of maps we will prune per iteration\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_osdmap_full_prune_enabled\",\n            \"mon_osdmap_full_prune_interval\",\n            \"mon_osdmap_full_prune_txsize\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pg_check_down_all_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"threshold of down osds after which we check all pgs\",\n        \"long_desc\": \"\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pg_stuck_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds after which pgs can be considered stuck inactive, unclean, etc\",\n        \"long_desc\": \"see doc/control.rst under dump_stuck for more info\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pg_warn_max_object_skew\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"max skew few average in objects per pg\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pg_warn_min_objects\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"do not warn below this object #\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pg_warn_min_per_osd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimal number PGs per (in) osd before we warn the admin\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"global\",\n                \"value\": \"3\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"mon_pg_warn_min_pool_objects\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"do not warn on pools below this object #\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pool_quota_crit_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"percent of quota at which to issue errors\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_pool_quota_warn_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"percent of quota at which to issue warnings\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_probe_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"timeout for querying other mons during bootstrap pre-election phase (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_reweight_max_change\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_reweight_max_osds\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_reweight_min_bytes_per_osd\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"mon_reweight_min_pgs_per_osd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_rocksdb_options\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"write_buffer_size=33554432,compression=kNoCompression,level_compaction_dynamic_level_bytes=true\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_scrub_inject_crc_mismatch\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"probability for injecting crc mismatches into mon scrub\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_scrub_inject_missing_keys\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"probability for injecting missing keys into mon scrub\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_scrub_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"frequency for scrubbing mon database\",\n        \"long_desc\": \"\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_scrub_max_keys\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"max keys per on scrub chunk/step\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_scrub_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"timeout to restart scrub of mon quorum participant does not respond for the latest chunk\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_session_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"close inactive mon client connections after this many seconds\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_smart_report_timeout\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Timeout (in seconds) for smarctl to run, default is set to 5\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_stat_smooth_intervals\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of PGMaps stats over which we calc the average read/write throughput of the whole cluster\",\n        \"long_desc\": \"\",\n        \"default\": 6,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_subscribe_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"subscribe interval for pre-jewel clients\",\n        \"long_desc\": \"\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_sync_debug\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"enable extra debugging during mon sync\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_sync_max_payload_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"target max message payload for mon sync\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"mon_sync_provider_kill_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"kill mon sync requester at specific point\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_sync_requester_kill_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"kill mon sync requestor at specific point\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_sync_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"timeout before canceling sync if syncing mon does not respond\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_target_pg_per_osd\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Automated PG management creates this many PGs per OSD\",\n        \"long_desc\": \"When creating pools, the automated PG management logic will attempt to reach this target.  In some circumstances, it may exceed this target, up to the ``mon_max_pg_per_osd`` limit. Conversely, a lower number of PGs per OSD may be created if the cluster is not yet fully utilised\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_tick_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval for internal mon background checks\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_timecheck_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"frequency of clock synchronization checks between monitors (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_timecheck_skew_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"frequency of clock synchronization (re)checks between monitors while clocks are believed to be skewed (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"mon_timecheck_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_not_deep_scrubbed\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"if non-zero, issue PG_NOT_DEEP_SCRUBBED when PG(s) have not been scrubbed for more than this long beyond the configured mon_scrub_interval (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"osd_deep_scrub_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_not_scrubbed\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"if non-zero, issue PG_NOT_SCRUBBED when PG(s) have not been scrubbed for more than this long beyond the configured mon_scrub_interval (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"osd_scrub_min_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_on_cache_pools_without_hit_sets\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue CACHE_POOL_NO_HIT_SET health warning for cache pools that do not have hit sets configured\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_on_crush_straw_calc_version_zero\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue OLD_CRUSH_STRAW_CALC_VERSION health warning if the CRUSH map's straw_calc_version is zero\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_on_legacy_crush_tunables\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue OLD_CRUSH_TUNABLES health warning if CRUSH tunables are older than mon_crush_min_required_version\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [\n            \"mon_crush_min_required_version\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_on_misplaced\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Issue a health warning if there are misplaced objects\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_on_osd_down_out_interval_zero\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"issue OSD_NO_DOWN_OUT_INTERVAL health warning if mon_osd_down_out_interval is zero\",\n        \"long_desc\": \"Having mon_osd_down_out_interval set to 0 means that down OSDs are not marked out automatically and the cluster does not heal itself without administrator intervention.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [\n            \"mon_osd_down_out_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"mon_warn_on_pool_no_app\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"issue POOL_APP_NOT_ENABLED health warning if pool has not application enabled\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"monmap\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to MonMap file\",\n        \"long_desc\": \"This option is normally used during mkfs, but can also be used to identify which monitors to connect to.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\",\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"ms_async_affinity_cores\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"List of cores to set worker thread affinity\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_async_set_affinity\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_max_op_threads\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum threadpool size of AsyncMessenger\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_async_op_threads\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_op_threads\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Threadpool size for AsyncMessenger (ms_type=async)\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": 24,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_buffer_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"131072\"\n    },\n    {\n        \"name\": \"ms_async_rdma_cm\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_device_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_dscp\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 96,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_enable_hugepage\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_local_gid\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_polling_us\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_port_num\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_receive_buffers\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 32768,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_receive_queue_len\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 4096,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_roce_ver\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_send_buffers\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_sl\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_support_srq\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_rdma_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"ib\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_async_set_affinity\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Set CPU affinity for AsyncMessenger worker threads\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_before_connect\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Call bind(2) on client sockets\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_ipv4\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Bind servers to IPv4 address(es)\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_bind_ipv6\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_ipv6\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Bind servers to IPv6 address(es)\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_bind_ipv4\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_msgr1\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Bind servers to msgr1 (legacy) protocol address(es)\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_bind_msgr2\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_msgr2\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Bind servers to msgr2 (nautilus+) protocol address(es)\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_bind_msgr1\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_port_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Highest port number to bind daemon(s) to\",\n        \"long_desc\": \"\",\n        \"default\": 7300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_port_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Lowest port number to bind daemon(s) to\",\n        \"long_desc\": \"\",\n        \"default\": 6800,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_prefer_ipv4\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Prefer IPV4 over IPV6 address(es)\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_retry_count\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of attempts to make while bind(2)ing to a port\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_bind_retry_delay\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Delay between bind(2) attempts (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_cluster_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Messenger implementation to use for the internal cluster network\",\n        \"long_desc\": \"If not specified, use ms_type\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_type\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_crc_data\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Set and/or verify crc32c checksum on data payload sent over network\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_crc_header\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Set and/or verify crc32c checksum on header payload sent over network\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_die_on_bad_msg\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Induce a daemon crash/exit when a bad network message is received\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_die_on_old_message\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Induce a daemon crash/exit when a old, undecodable message is received\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_die_on_skipped_message\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Induce a daemon crash/exit if sender skips a message sequence number\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_die_on_unhandled_msg\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Induce a daemon crash/exit when an unrecognized message is received\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dispatch_throttle_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Limit messages that are read off the network but still being processed\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"ms_dpdk_coremask\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"0xF\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_async_op_threads\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_debug_allow_loopback\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_gateway_ipv4_addr\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_host_ipv4_addr\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_hugepages\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_hw_flow_control\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_hw_queue_weight\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_lro\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_memory_channel\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"4\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_netmask_ipv4_addr\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_pmd\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_port_id\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dpdk_rx_buffer_count_per_core\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 8192,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dump_corrupt_message_level\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Log level at which to hexdump corrupt messages we receive\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_dump_on_send\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Hexdump message to debug log on message send\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_initial_backoff\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Initial backoff after a network error is detected (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 0.2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_inject_delay_max\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Max delay to inject\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_inject_delay_msg_type\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Message type to inject delays for\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_inject_delay_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_inject_delay_type\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Entity type to inject delays for\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"ms_inject_internal_delays\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Inject various internal delays to induce races (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_inject_socket_failures\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Inject a socket failure every Nth socket operation\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_max_accept_failures\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"The maximum number of consecutive failed accept() calls before considering the daemon is misconfigured and abort it.\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_max_backoff\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum backoff after a network error before retrying (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_initial_backoff\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_pq_max_tokens_per_priority\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 16777216,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_pq_min_cost\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"ms_public_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Messenger implementation to use for the public network\",\n        \"long_desc\": \"If not specified, use ms_type\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"ms_type\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_rwthread_stack_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Size of stack for SimpleMessenger read/write threads\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"ms_tcp_listen_backlog\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Size of queue of incoming connections for accept(2)\",\n        \"long_desc\": \"\",\n        \"default\": 512,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_tcp_nodelay\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Disable Nagle's algorithm and send queued network traffic immediately\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_tcp_prefetch_max_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum amount of data to prefetch out of the socket receive buffer\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"ms_tcp_rcvbuf\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Size of TCP socket receive buffer\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"ms_tcp_read_timeout\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time before an idle TCP connection is closed (seconds)\",\n        \"long_desc\": \"\",\n        \"default\": 900,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"ms_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Messenger implementation to use for network communication\",\n        \"long_desc\": \"\",\n        \"default\": \"async+posix\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"nss_db_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_completion_locks_per_session\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_debug_inject_relock_delay\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_inflight_op_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max in-flight data in bytes (both directions)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"objecter_inflight_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max in-flight operations\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_inject_no_watch_ping\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_retry_writes_after_first_reply\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_tick_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objecter_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Seconds before in-flight op is considered 'laggy' and we query mon for the latest OSDMap\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"objectstore_blackhole\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_delay_time\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"how long agent should sleep if it has no work to do\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_hist_halflife\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"halflife of agent atime and temp histograms\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_max_low_ops\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum concurrent low-priority tiering operations for tiering agent\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_max_ops\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum concurrent tiering operations for tiering agent\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_min_evict_effort\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum effort to expend evicting clean objects\",\n        \"long_desc\": \"\",\n        \"default\": 0.1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": 0.99,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_quantize_effort\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"size of quantize unit for eviction effort\",\n        \"long_desc\": \"\",\n        \"default\": 0.1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_agent_slop\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"slop factor to avoid switching tiering flush and eviction mode\",\n        \"long_desc\": \"\",\n        \"default\": 0.02,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_allow_recovery_below_min_size\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"allow replicated pools to recover with < min_size active members\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_async_recovery_min_cost\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"A mixture measure of number of current log entries difference and historical missing objects,  above which we switch to use asynchronous recovery when appropriate\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_auto_mark_unfound_lost\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_backfill_retry_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"how frequently to retry backfill reservations after being denied (e.g., due to a full OSD)\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_backfill_scan_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 512,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_backfill_scan_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_backoff_on_degraded\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_backoff_on_peering\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_backoff_on_unfound\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_beacon_report_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_bench_duration\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_bench_large_size_max_throughput\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"104857600\"\n    },\n    {\n        \"name\": \"osd_bench_max_block_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"67108864\"\n    },\n    {\n        \"name\": \"osd_bench_small_size_max_iops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_blkin_trace_all\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_check_for_log_corruption\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_check_max_object_name_len_on_startup\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_class_default_list\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"cephfs hello journal lock log numops otp rbd refcount rgw timeindex user version cas\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_class_dir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"/usr/local/lib64/rados-classes\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_class_load_list\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"cephfs hello journal lock log numops otp rbd refcount rgw timeindex user version cas\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_class_update_on_start\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set OSD device class on startup\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_client_message_cap\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of in-flight client requests\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_client_message_size_cap\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum memory to devote to in-flight client requests\",\n        \"long_desc\": \"If this value is exceeded, the OSD will not read any new client data off of the network until memory is freed.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"524288000\"\n    },\n    {\n        \"name\": \"osd_client_op_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 63,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_client_watch_timeout\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mds_client\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_command_max_records\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 256,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_command_thread_suicide_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 900,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_command_thread_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_copyfrom_max_chunk\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8388608\",\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"524288\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"osd_crush_chooseleaf_type\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"default chooseleaf type for osdmaptool --create\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"osd_crush_initial_weight\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"if >= 0, initial CRUSH weight for newly created OSDs\",\n        \"long_desc\": \"If this value is negative, the size of the OSD in TiB is used.\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_crush_update_on_start\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"update OSD CRUSH location on startup\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_crush_update_weight_set\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"update CRUSH weight-set weights when updating weights\",\n        \"long_desc\": \"If this setting is true, we will update the weight-set weights when adjusting an item's weight, effectively making changes take effect immediately, and discarding any previous optimization in the weight-set value.  Setting this value to false will leave it to the balancer to (slowly, presumably) adjust weights to approach the new target value.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_data\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to OSD data\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/lib/ceph/osd/$cluster-$id\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"osd_debug_crash_on_ignored_backoff\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_deep_scrub_sleep\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Inject an expensive sleep during deep scrub IO to make it easier to induce preemption\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_drop_ping_duration\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_drop_ping_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_inject_copyfrom_error\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_inject_dispatch_delay_duration\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_inject_dispatch_delay_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_misdirected_ops\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"osd_debug_op_order\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"true\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"osd_debug_pg_log_writeout\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_random_push_read_error\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_reject_backfill_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_shutdown\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Turn up debug levels during shutdown\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_skip_full_check_in_backfill_reservation\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_skip_full_check_in_recovery\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_verify_cached_snaps\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_verify_missing_on_start\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_verify_snaps\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_debug_verify_stray_on_activate\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_deep_scrub_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Deep scrub each PG (i.e., verify data checksums) at least this often\",\n        \"long_desc\": \"\",\n        \"default\": 604800,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_deep_scrub_keys\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of keys to read from an object at a time during deep scrub\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_deep_scrub_large_omap_object_key_threshold\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Warn when we encounter an object with more omap keys than this\",\n        \"long_desc\": \"\",\n        \"default\": 2000000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [\n            \"osd_deep_scrub_large_omap_object_value_sum_threshold\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_deep_scrub_large_omap_object_value_sum_threshold\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Warn when we encounter an object with more omap key bytes than this\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [\n            \"osd_deep_scrub_large_omap_object_key_threshold\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"osd_deep_scrub_randomize_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Ratio of deep scrub interval to randomly vary\",\n        \"long_desc\": \"This prevents a deep scrub 'stampede' by randomly varying the scrub intervals so that they are soon uniformly distributed over the week\",\n        \"default\": 0.15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_deep_scrub_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_deep_scrub_stride\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of bytes to read from an object at a time during deep scrub\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"524288\"\n    },\n    {\n        \"name\": \"osd_deep_scrub_update_digest_min_age\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Update overall object digest only if object was last modified longer ago than this\",\n        \"long_desc\": \"\",\n        \"default\": 7200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_default_data_pool_replay_window\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 45,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_default_notify_timeout\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_delete_sleep\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next removal transaction (overrides values below)\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_delete_sleep_hdd\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next removal transaction for HDDs\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_delete_sleep_hybrid\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next removal transaction when data is on HDD and journal is on SSD\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_delete_sleep_ssd\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next removal transaction for SSDs\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_discard_disconnected_ops\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_enable_op_tracker\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_erasure_code_plugins\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"erasure code plugins to load\",\n        \"long_desc\": \"\",\n        \"default\": \"jerasure lrc isa\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_failsafe_full_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.97,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_fast_fail_on_connection_refused\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_fast_info\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_find_best_info_ignore_history_les\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"ignore last_epoch_started value when peering AND PROBABLY LOSE DATA\",\n        \"long_desc\": \"THIS IS AN EXTREMELY DANGEROUS OPTION THAT SHOULD ONLY BE USED AT THE DIRECTION OF A DEVELOPER.  It makes peering ignore the last_epoch_started value when peering, which can allow the OSD to believe an OSD has an authoritative view of a PG's contents even when it is in fact old and stale, typically leading to data loss (by believing a stale PG is up to date).\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_force_auth_primary_missing_objects\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Approximate missing objects above which to force auth_log_shard to be primary temporarily\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_force_recovery_pg_log_entries_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1.3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_function_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_heartbeat_grace\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_heartbeat_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Interval (in seconds) between peer pings\",\n        \"long_desc\": \"\",\n        \"default\": 6,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": 86400,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_heartbeat_min_healthy_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.33,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_heartbeat_min_peers\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_heartbeat_min_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum heartbeat packet size in bytes. Will add dummy payload if heartbeat packet is smaller than this.\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"2000\"\n    },\n    {\n        \"name\": \"osd_heartbeat_use_min_delay_socket\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_hit_set_max_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_hit_set_min_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_hit_set_namespace\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \".ceph-internal\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_ignore_stale_divergent_priors\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_inject_bad_map_crc_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_inject_failure_on_pg_removal\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_journal\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to OSD journal (when FileStore backend is in use)\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/lib/ceph/osd/$cluster-$id/journal\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"osd_journal_flush_on_shutdown\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"flush FileStore journal contents during clean OSD shutdown\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_journal_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"size of FileStore journal (in MiB)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"5120\"\n    },\n    {\n        \"name\": \"osd_kill_backfill_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_loop_before_reset_tphandle\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_map_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_map_dedup\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_map_message_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 40,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_map_share_max_epochs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 40,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_attr_name_len\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_attr_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_backfills\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of concurrent backfills per OSD\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_markdown_count\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_markdown_period\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_object_name_len\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2048,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_object_namespace_len\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 256,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_object_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"134217728\"\n    },\n    {\n        \"name\": \"osd_max_omap_bytes_per_request\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1073741824\"\n    },\n    {\n        \"name\": \"osd_max_omap_entries_per_request\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 131072,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_pg_blocked_by\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_pg_log_entries\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of entries to maintain in the PG log when degraded before we trim\",\n        \"long_desc\": \"\",\n        \"default\": 3000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [\n            \"osd_min_pg_log_entries\",\n            \"osd_pg_log_dups_tracked\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_pg_per_osd_hard_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum number of PG per OSD, a factor of 'mon_max_pg_per_osd'\",\n        \"long_desc\": \"OSD will refuse to instantiate PG if the number of PG it serves exceeds this number.\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"mon_max_pg_per_osd\"\n        ],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_pgls\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of results when listing objects in a pool\",\n        \"long_desc\": \"\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_push_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8388608\"\n    },\n    {\n        \"name\": \"osd_max_push_objects\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_scrubs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum concurrent scrubs on a single OSD\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_snap_prune_intervals_per_epoch\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"Max number of snap intervals to report to mgr in pg_stat_t\",\n        \"long_desc\": \"\",\n        \"default\": 512,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_trimming_pgs\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_max_write_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum size of a RADOS write operation in megabytes\",\n        \"long_desc\": \"This setting prevents clients from doing very large writes to RADOS.  If you set this to a value below what clients expect, they will receive an error when attempting to write to the cluster.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"90\",\n        \"min\": \"4\"\n    },\n    {\n        \"name\": \"osd_memory_base\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"When tcmalloc and cache autotuning is enabled, estimate the minimum amount of memory in bytes the OSD will need.\",\n        \"long_desc\": \"\",\n        \"default\": 805306368,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_memory_cache_min\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"When tcmalloc and cache autotuning is enabled, set the minimum amount of memory used for caches.\",\n        \"long_desc\": \"\",\n        \"default\": 134217728,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_memory_cache_resize_interval\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"When tcmalloc and cache autotuning is enabled, wait this many seconds between resizing caches.\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_memory_expected_fragmentation\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"When tcmalloc and cache autotuning is enabled, estimate the percent of memory fragmentation.\",\n        \"long_desc\": \"\",\n        \"default\": 0.15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": 0,\n        \"max\": 1,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_memory_target\",\n        \"type\": \"uint\",\n        \"level\": \"basic\",\n        \"desc\": \"When tcmalloc and cache autotuning is enabled, try to keep this many bytes mapped in memory.\",\n        \"long_desc\": \"\",\n        \"default\": 4294967296,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"bluestore_cache_autotune\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_min_pg_log_entries\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum number of entries to maintain in the PG log\",\n        \"long_desc\": \"\",\n        \"default\": 3000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [\n            \"osd_max_pg_log_entries\",\n            \"osd_pg_log_dups_tracked\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_min_recovery_priority\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum priority below which recovery is not performed\",\n        \"long_desc\": \"The purpose here is to prevent the cluster from doing *any* lower priority work (e.g., rebalancing) below this threshold and focus solely on higher priority work (e.g., replicating degraded objects).\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_mon_ack_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_mon_heartbeat_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_mon_report_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Frequency of OSD reports to mon for peer failures, fullness status changes\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_mon_report_max_in_flight\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_mon_shutdown_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_num_op_tracker_shard\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_objecter_finishers\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_objectstore\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"backend type for an OSD (like filestore or bluestore)\",\n        \"long_desc\": \"\",\n        \"default\": \"filestore\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"bluestore\",\n            \"filestore\",\n            \"memstore\",\n            \"kstore\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ]\n    },\n    {\n        \"name\": \"osd_objectstore_fuse\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_objectstore_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_complaint_time\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_history_duration\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_history_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_history_slow_op_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_history_slow_op_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_log_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_num_shards\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_num_shards_hdd\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_num_shards_ssd\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_num_threads_per_shard\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_num_threads_per_shard_hdd\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_num_threads_per_shard_ssd\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_pq_max_tokens_per_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 4194304,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_pq_min_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"osd_op_queue\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"which operation queue algorithm to use\",\n        \"long_desc\": \"which operation queue algorithm to use; mclock_opclass and mclock_client are currently experimental\",\n        \"default\": \"wpq\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue_cut_off\"\n        ],\n        \"enum_values\": [\n            \"wpq\",\n            \"prioritized\",\n            \"mclock_opclass\",\n            \"mclock_client\",\n            \"debug_random\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"startup\"\n        ]\n    },\n    {\n        \"name\": \"osd_op_queue_cut_off\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"the threshold between high priority ops and low priority ops\",\n        \"long_desc\": \"the threshold between high priority ops that use strict priority ordering and low priority ops that use a fairness algorithm that may or may not incorporate priority\",\n        \"default\": \"low\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\"\n        ],\n        \"enum_values\": [\n            \"low\",\n            \"high\",\n            \"debug_random\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_anticipation_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock anticipation timeout in seconds\",\n        \"long_desc\": \"the amount of time that mclock waits until the unused resource is forfeited\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_client_op_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock limit of client operator requests\",\n        \"long_desc\": \"mclock limit of client operator requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_client_op_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of client operator requests\",\n        \"long_desc\": \"mclock reservation of client operator requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_client_op_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of client operator requests\",\n        \"long_desc\": \"mclock weight of client operator requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_osd_rep_op_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock limit of osd replication operation requests and replies\",\n        \"long_desc\": \"mclock limit of osd sub-operation requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_osd_rep_op_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of osd replication operation requests and replies\",\n        \"long_desc\": \"mclock reservation of replication operation requests and replies when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_osd_rep_op_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of osd replication operation requests and replies\",\n        \"long_desc\": \"mclock weight of osd replication operation requests and replies when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_peering_event_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of limit peering events\",\n        \"long_desc\": \"mclock weight of limit requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0.001,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_peering_event_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of peering events\",\n        \"long_desc\": \"mclock reservation of scrub requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_peering_event_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of peering events\",\n        \"long_desc\": \"mclock weight of scrub requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_lim\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_pg_delete_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of pg delete work limit requests\",\n        \"long_desc\": \"mclock weight of limit pg delete work when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0.001,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_pg_delete_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of pg delete work\",\n        \"long_desc\": \"mclock reservation of pg delete work when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_pg_delete_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of pg delete work\",\n        \"long_desc\": \"mclock weight of pg delete work when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_lim\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_recov_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock limit of recovery requests\",\n        \"long_desc\": \"mclock limit of recovery requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0.001,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_recov_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of recovery requests\",\n        \"long_desc\": \"mclock reservation of recovery requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_recov_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of recovery requests\",\n        \"long_desc\": \"mclock weight of recovery requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_scrub_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of limit requests\",\n        \"long_desc\": \"mclock weight of limit requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0.001,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_scrub_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of scrub requests\",\n        \"long_desc\": \"mclock reservation of scrub requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_scrub_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of scrub requests\",\n        \"long_desc\": \"mclock weight of scrub requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_snap_lim\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock limit of snaptrim requests\",\n        \"long_desc\": \"mclock limit of snaptrim requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the limit\",\n        \"default\": 0.001,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_snap_res\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock reservation of snaptrim requests\",\n        \"long_desc\": \"mclock reservation of snaptrim requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the reservation\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_wgt\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_queue_mclock_snap_wgt\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"mclock weight of snaptrim requests\",\n        \"long_desc\": \"mclock weight of snaptrim requests when osd_op_queue is either 'mclock_opclass' or 'mclock_client'; higher values increase the weight\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_op_queue\",\n            \"osd_op_queue_mclock_client_op_res\",\n            \"osd_op_queue_mclock_client_op_wgt\",\n            \"osd_op_queue_mclock_client_op_lim\",\n            \"osd_op_queue_mclock_osd_rep_op_res\",\n            \"osd_op_queue_mclock_osd_rep_op_wgt\",\n            \"osd_op_queue_mclock_osd_rep_op_lim\",\n            \"osd_op_queue_mclock_snap_res\",\n            \"osd_op_queue_mclock_snap_lim\",\n            \"osd_op_queue_mclock_recov_res\",\n            \"osd_op_queue_mclock_recov_wgt\",\n            \"osd_op_queue_mclock_recov_lim\",\n            \"osd_op_queue_mclock_scrub_res\",\n            \"osd_op_queue_mclock_scrub_wgt\",\n            \"osd_op_queue_mclock_scrub_lim\",\n            \"osd_op_queue_mclock_anticipation_timeout\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_thread_suicide_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 150,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_op_thread_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 15,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_open_classes_on_start\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_os_flags\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"flags to skip filestore omap or journal initialization\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_peering_op_priority\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 255,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_delete_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"osd_pg_delete_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_epoch_max_lag_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max multiple of the map cache that PGs can lag before we throttle map injest\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_map_cache_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_epoch_persisted_max_stale\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 40,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_log_dups_tracked\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"how many versions back to track in order to detect duplicate ops; this is combined with both the regular pg log entries and additional minimal dup detection entries\",\n        \"long_desc\": \"\",\n        \"default\": 3000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [\n            \"osd_min_pg_log_entries\",\n            \"osd_max_pg_log_entries\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_log_trim_max\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of entries to remove at once from the PG log\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"osd\"\n        ],\n        \"see_also\": [\n            \"osd_min_pg_log_entries\",\n            \"osd_max_pg_log_entries\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_log_trim_min\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_max_concurrent_snap_trims\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_object_context_cache_count\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pg_stat_report_interval_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_cache_max_evict_check_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_cache_min_evict_age\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_cache_min_flush_age\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_cache_target_dirty_high_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.6,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_cache_target_dirty_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_cache_target_full_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_crush_rule\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"CRUSH rule for newly created pools\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_ec_fast_read\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set ec_fast_read for new erasure-coded pools\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_erasure_code_profile\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default erasure code profile for new erasure-coded pools\",\n        \"long_desc\": \"\",\n        \"default\": \"plugin=jerasure technique=reed_sol_van k=2 m=1\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"osd_pool_default_flag_hashpspool\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set hashpspool (better hashing scheme) flag on new pools\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_flag_nodelete\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set nodelete flag on new pools\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_flag_nopgchange\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set nopgchange flag on new pools\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_flag_nosizechange\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"set nosizechange flag on new pools\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_flags\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"(integer) flags to set on new pools\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_hit_set_bloom_fpp\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"osd_tier_default_cache_hit_set_type\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_min_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the minimal number of copies allowed to write to a degraded pool for new replicated pools\",\n        \"long_desc\": \"0 means no specific default; ceph will use size-size/2\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"osd_pool_default_size\"\n        ],\n        \"min\": 0,\n        \"max\": 255,\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"global\",\n                \"value\": \"1\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"osd_pool_default_pg_autoscale_mode\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default PG autoscaling behavior for new pools\",\n        \"long_desc\": \"\",\n        \"default\": \"warn\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"off\",\n            \"warn\",\n            \"on\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_pool_default_pg_num\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of PGs for new pools\",\n        \"long_desc\": \"\",\n        \"default\": 8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"osd_pool_default_pgp_num\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of PGs for placement purposes (0 to match pg_num)\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [\n            \"osd_pool_default_pg_num\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"osd_pool_default_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the number of copies of an object for new replicated pools\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": 10,\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ],\n        \"value\": [\n            {\n                \"section\": \"global\",\n                \"value\": \"3\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"osd_pool_default_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default type of pool to create\",\n        \"long_desc\": \"\",\n        \"default\": \"replicated\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"replicated\",\n            \"erasure\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"osd_pool_erasure_code_stripe_unit\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"the amount of data (in bytes) in a data chunk, per stripe\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"osd_pool_use_gmt_hitset\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"use UTC for hitset timestamps\",\n        \"long_desc\": \"This setting only exists for compatibility with hammer (and older) clusters.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_push_per_object_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1000\"\n    },\n    {\n        \"name\": \"osd_read_ec_check_for_errors\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recover_clone_overlap\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recover_clone_overlap_limit\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"20971520\"\n    },\n    {\n        \"name\": \"osd_recovery_delay_start\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_max_active\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_max_chunk\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8388608\"\n    },\n    {\n        \"name\": \"osd_recovery_max_omap_entries_per_chunk\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 8096,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_max_single_start\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_op_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_op_warn_multiple\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_retry_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"how frequently to retry recovery reservations after being denied (e.g., due to a full OSD)\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_sleep\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next recovery or backfill op\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_sleep_hdd\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next recovery or backfill op for HDDs\",\n        \"long_desc\": \"\",\n        \"default\": 0.1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_sleep_hybrid\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next recovery or backfill op when data is on HDD and journal is on SSD\",\n        \"long_desc\": \"\",\n        \"default\": 0.025,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_recovery_sleep_ssd\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Time in seconds to sleep before next recovery or backfill op for SSDs\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_requested_scrub_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 120,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_rollback_to_cluster_snap\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_auto_repair\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Automatically repair damaged objects detected during scrub\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_auto_repair_num_errors\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum number of detected errors to automatically repair\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_auto_repair\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_backoff_ratio\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Backoff ratio after a failed scrub scheduling attempt\",\n        \"long_desc\": \"\",\n        \"default\": 0.66,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_begin_hour\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Restrict scrubbing to this hour of the day or later\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_end_hour\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_begin_week_day\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Restrict scrubbing to this day of the week or later\",\n        \"long_desc\": \"0 or 7 = Sunday, 1 = Monday, etc.\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_end_week_day\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_chunk_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum number of objects to scrub in a single chunk\",\n        \"long_desc\": \"\",\n        \"default\": 25,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_chunk_min\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_chunk_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum number of objects to scrub in a single chunk\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_chunk_max\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Cost for scrub operations in work queue\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"52428800\"\n    },\n    {\n        \"name\": \"osd_scrub_during_recovery\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Allow scrubbing when PGs on the OSD are undergoing recovery\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_end_hour\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Restrict scrubbing to hours of the day earlier than this\",\n        \"long_desc\": \"\",\n        \"default\": 24,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_begin_hour\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_end_week_day\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Restrict scrubbing to days of the week earlier than this\",\n        \"long_desc\": \"0 or 7 = Sunday, 1 = Monday, etc.\",\n        \"default\": 7,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_begin_week_day\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_interval_randomize_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Ratio of scrub interval to randomly vary\",\n        \"long_desc\": \"This prevents a scrub 'stampede' by randomly varying the scrub intervals so that they are soon uniformly distributed over the week\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_min_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_invalid_stats\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_load_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Allow scrubbing when system load divided by number of CPUs is below this value\",\n        \"long_desc\": \"\",\n        \"default\": 0.5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"value\": [\n            {\n                \"section\": \"osd\",\n                \"value\": \"2000.000000\"\n            }\n        ],\n        \"source\": \"mon\"\n    },\n    {\n        \"name\": \"osd_scrub_max_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Scrub each PG no less often than this interval\",\n        \"long_desc\": \"\",\n        \"default\": 604800,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_min_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_max_preemptions\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Set the maximum number of times we will preempt a deep scrub due to a client operation before blocking client IO to complete the scrub\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_min_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Scrub each PG no more often than this interval\",\n        \"long_desc\": \"\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [\n            \"osd_scrub_max_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Priority for scrub operations in work queue\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_scrub_sleep\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Duration to inject a delay during scrubbing\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_shutdown_pgref_assert\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_skip_data_digest\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Do not store full-object checksums if the backend (bluestore) does its own checksums.  Only usable with all BlueStore OSDs.\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_smart_report_timeout\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Timeout (in seconds) for smarctl to run, default is set to 5\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_snap_trim_cost\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"osd_snap_trim_priority\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_snap_trim_sleep\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_stats_ack_timeout_decay\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.9,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_stats_ack_timeout_factor\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_target_transaction_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_hit_set_count\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_hit_set_grade_decay_rate\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_hit_set_period\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_hit_set_search_last_n\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_hit_set_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"bloom\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"bloom\",\n            \"explicit_hash\",\n            \"explicit_object\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"osd_tier_default_cache_min_read_recency_for_promote\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of recent HitSets the object must appear in to be promoted (on read)\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_min_write_recency_for_promote\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of recent HitSets the object must appear in to be promoted (on write)\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tier_default_cache_mode\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"writeback\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"none\",\n            \"writeback\",\n            \"forward\",\n            \"readonly\",\n            \"readforward\",\n            \"readproxy\",\n            \"proxy\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"osd_tier_promote_max_bytes_sec\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"5242880\"\n    },\n    {\n        \"name\": \"osd_tier_promote_max_objects_sec\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 25,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_use_stale_snap\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osd_uuid\",\n        \"type\": \"uuid\",\n        \"level\": \"advanced\",\n        \"desc\": \"uuid label for a new OSD\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"create\"\n        ],\n        \"default\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n        \"name\": \"osd_verify_sparse_read_holes\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"osdc_blkin_trace_all\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_kill_at\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_max_join_drift\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_min_wait\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_propose_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_service_trim_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_service_trim_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 250,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_stash_full_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 25,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_trim_max\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 500,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"paxos_trim_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 250,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"perf\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable internal performance metrics\",\n        \"long_desc\": \"If enabled, collect and expose internal health metrics\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"pid_file\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path to write a pid file (if any)\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"plugin_crypto_accelerator\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Crypto accelerator library to use\",\n        \"long_desc\": \"\",\n        \"default\": \"crypto_isal\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"plugin_dir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Base directory for dynamically loaded plugins\",\n        \"long_desc\": \"\",\n        \"default\": \"/usr/local/lib64/ceph\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"osd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"public_addr\",\n        \"type\": \"addr\",\n        \"level\": \"basic\",\n        \"desc\": \"public-facing address to bind to\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\",\n            \"mds\",\n            \"osd\",\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [],\n        \"default\": \"-\"\n    },\n    {\n        \"name\": \"public_bind_addr\",\n        \"type\": \"addr\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"mon\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [],\n        \"default\": \"-\"\n    },\n    {\n        \"name\": \"public_network\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Network(s) from which to choose a public address to bind to\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mds\",\n            \"osd\",\n            \"mgr\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"public_network_interface\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Interface name(s) from which to choose an address from a public_network to bind to; public_network must also be specified.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"network\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mds\",\n            \"osd\",\n            \"mgr\"\n        ],\n        \"see_also\": [\n            \"public_network\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"qat_compressor_enabled\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable Intel QAT acceleration support for compression if available\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rados_mon_op_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rados_osd_op_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rados_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_atime_update_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"RBD Image access timestamp refresh interval. Set to 0 to disable access timestamp update.\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_auto_exclusive_lock_until_manual_request\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"automatically acquire/release exclusive lock until it is explicitly requested\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_balance_parent_reads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"distribute parent read requests to random OSD\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_balance_snap_reads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"distribute snap read requests to random OSD\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_blacklist_expire_seconds\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds to blacklist - set to 0 for OSD default\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_blacklist_on_break_lock\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"whether to blacklist clients whose lock was broken\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_blkin_trace_all\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"create a blkin trace for all RBD requests\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_cache\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"whether to enable caching (writeback unless rbd_cache_max_dirty is 0)\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_cache_block_writes_upfront\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"whether to block writes to the cache before the aio_write call completes\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_cache_max_dirty\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"dirty limit in bytes - set to 0 for write-through caching\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"25165824\"\n    },\n    {\n        \"name\": \"rbd_cache_max_dirty_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"seconds in cache before writeback starts\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_cache_max_dirty_object\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"dirty limit for objects - set to 0 for auto calculate from rbd_cache_size\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_cache_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"cache size in bytes\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"33554432\"\n    },\n    {\n        \"name\": \"rbd_cache_target_dirty\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"target dirty limit in bytes\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16777216\"\n    },\n    {\n        \"name\": \"rbd_cache_writethrough_until_flush\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"whether to make writeback caching writethrough until flush is called, to be sure the user of librbd will send flushes so that writeback is safe\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_clone_copy_on_read\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"copy-up parent image blocks to clone upon read request\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_concurrent_management_ops\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"how many operations can be in flight for a management operation like deleting or resizing an image\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_clone_format\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default internal format for handling clones\",\n        \"long_desc\": \"This sets the internal format for tracking cloned images. The setting of '1' requires attaching to protected snapshots that cannot be removed until the clone is removed/flattened. The setting of '2' will allow clones to be attached to any snapshot and permits removing in-use parent snapshots but requires Mimic or later clients. The default setting of 'auto' will use the v2 format if the cluster is configured to require mimic or later clients.\",\n        \"default\": \"auto\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"1\",\n            \"2\",\n            \"auto\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"rbd_default_data_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default pool for storing data blocks for new images\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_features\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default v2 image features for new images\",\n        \"long_desc\": \"RBD features are only applicable for v2 images. This setting accepts either an integer bitmask value or comma-delimited string of RBD feature names. This setting is always internally stored as an integer bitmask value. The mapping between feature bitmask value and feature name is as follows: +1 -> layering, +2 -> striping, +4 -> exclusive-lock, +8 -> object-map, +16 -> fast-diff, +32 -> deep-flatten, +64 -> journaling, +128 -> data-pool\",\n        \"default\": \"layering,exclusive-lock,object-map,fast-diff,deep-flatten\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [\n            \"runtime\"\n        ]\n    },\n    {\n        \"name\": \"rbd_default_format\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"default image format for new images\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_map_options\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default krbd map options\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_order\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"default order (data block object size) for new images\",\n        \"long_desc\": \"\",\n        \"default\": 22,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default pool for storing new images\",\n        \"long_desc\": \"\",\n        \"default\": \"rbd\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_stripe_count\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"default stripe count for new images\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_default_stripe_unit\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"default stripe width for new images\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"rbd_discard_on_zeroed_write_same\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"discard data on zeroed write same instead of writing zero\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_enable_alloc_hint\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"when writing a object, it will issue a hint to osd backend to indicate the expected size object need\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_commit_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"commit time interval, seconds\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_max_concurrent_object_sets\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of object sets a journal client can be behind before it is automatically unregistered\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_max_payload_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum journal payload size before splitting\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16384\"\n    },\n    {\n        \"name\": \"rbd_journal_object_flush_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum age (in seconds) for pending commits\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_object_flush_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of pending bytes per journal object\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"rbd_journal_object_flush_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of pending commits per journal object\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_object_max_in_flight_appends\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of in-flight appends per journal object\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_order\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"default order (object size) for journal data objects\",\n        \"long_desc\": \"\",\n        \"default\": 24,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": 12,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"pool for journal objects\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_journal_splay_width\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of active journal objects\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_localize_parent_reads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"localize parent requests to closest OSD\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_localize_snap_reads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"localize snap read requests to closest OSD\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_concurrent_image_deletions\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of image deletions in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_concurrent_image_syncs\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum number of image syncs in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_delete_retry_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval to check and retry the failed deletion requests\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_image_policy_migration_throttle\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds after which an image can be reshuffled (migrated) again\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_image_policy_rebalance_timeout\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds policy should be idle before trigerring reshuffle (rebalance) of images\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_image_policy_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"active/active policy type for mapping images to instances\",\n        \"long_desc\": \"\",\n        \"default\": \"none\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [\n            \"none\",\n            \"simple\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_image_policy_update_throttle_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval (in seconds) to throttle images for mirror daemon peer updates\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_image_state_check_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval to get images from pool watcher and set sources in replayer\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_journal_commit_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"commit time interval, seconds\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_journal_max_fetch_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum bytes to read from each journal data object per fetch\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"32768\"\n    },\n    {\n        \"name\": \"rbd_mirror_journal_poll_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"maximum age (in seconds) between successive journal polls\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_leader_heartbeat_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval (in seconds) between mirror leader heartbeats\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_leader_max_acquire_attempts_before_break\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of failed attempts to acquire lock after missing heartbeats before breaking lock\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_leader_max_missed_heartbeats\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of missed heartbeats for non-lock owner to attempt to acquire lock\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_pool_replayers_refresh_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"interval to refresh peers in rbd-mirror daemon\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirror_sync_point_update_age\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds between each update of the image sync point object number\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd-mirror\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirroring_delete_delay\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"time-delay in seconds for rbd-mirror delete propagation\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirroring_replay_delay\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"time-delay in seconds for rbd-mirror asynchronous replication\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mirroring_resync_after_disconnect\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"automatically start image resync after mirroring is disconnected due to being laggy\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_move_to_trash_on_remove\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"automatically move images to the trash when deleted\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_move_to_trash_on_remove_expire_seconds\",\n        \"type\": \"uint\",\n        \"level\": \"basic\",\n        \"desc\": \"default number of seconds to protect deleted images in the trash\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_mtime_update_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"RBD Image modify timestamp refresh interval. Set to 0 to disable modify timestamp update.\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_non_blocking_aio\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"process AIO ops from a dispatch thread to prevent blocking\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_op_thread_timeout\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"time in seconds for detecting a hung thread\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_op_threads\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of threads to utilize for internal processing\",\n        \"long_desc\": \"\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_bps_burst\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired burst limit of IO bytes\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_bps_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired limit of IO bytes per second\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_iops_burst\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired burst limit of IO operations\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_iops_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired limit of IO operations per second\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_read_bps_burst\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired burst limit of read bytes\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_read_bps_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired limit of read bytes per second\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_read_iops_burst\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired burst limit of read operations\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_read_iops_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired limit of read operations per second\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_schedule_tick_min\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"minimum schedule tick (in milliseconds) for QoS\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_write_bps_burst\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired burst limit of write bytes\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_write_bps_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired limit of write bytes per second\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_write_iops_burst\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired burst limit of write operations\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_qos_write_iops_limit\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"the desired limit of write operations per second\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_readahead_disable_after_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"how many bytes are read in total before readahead is disabled\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"52428800\"\n    },\n    {\n        \"name\": \"rbd_readahead_max_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"set to 0 to disable readahead\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"524288\"\n    },\n    {\n        \"name\": \"rbd_readahead_trigger_requests\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of sequential requests necessary to trigger readahead\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_request_timed_out_seconds\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"number of seconds before maintenance request times out\",\n        \"long_desc\": \"\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_skip_partial_discard\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"when trying to discard a range inside an object, set to true to skip zeroing the range\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_sparse_read_threshold_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"threshold for issuing a sparse-read\",\n        \"long_desc\": \"minimum number of sequential bytes to read against an object before issuing a sparse-read request to the cluster. 0 implies it must be a full object read to issue a sparse-read, 1 implies always use sparse-read, and any value larger than the maximum object size will disable sparse-read for all requests\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"rbd_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"true if LTTng-UST tracepoints should be enabled\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_validate_names\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"validate new image names for RBD compatibility\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rbd_validate_pool\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"validate empty pools for RBD compatibility\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rbd\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"restapi_base_url\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default set by python code\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"restapi_log_level\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"default set by python code\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_acl_grants_max_num\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of ACL grants in a single request\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_admin_entry\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Path prefix to be used for accessing RGW RESTful admin API.\",\n        \"long_desc\": \"\",\n        \"default\": \"admin\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_barbican_url\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"URL to barbican server.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_bucket_default_quota_max_objects\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"Default quota for max objects in a bucket\",\n        \"long_desc\": \"The default quota configuration for max number of objects in a bucket. A negative number means 'unlimited'.\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_bucket_default_quota_max_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default quota for total size in a bucket\",\n        \"long_desc\": \"The default quota configuration for total size of objects in a bucket. A negative number means 'unlimited'.\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_bucket_index_max_aio\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of concurrent RADOS requests when handling bucket shards.\",\n        \"long_desc\": \"\",\n        \"default\": 8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_bucket_quota_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW quota stats cache size\",\n        \"long_desc\": \"Maximum number of entries in the quota stats cache.\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_bucket_quota_soft_threshold\",\n        \"type\": \"float\",\n        \"level\": \"basic\",\n        \"desc\": \"RGW quota soft threshold\",\n        \"long_desc\": \"Threshold from which RGW doesn't rely on cached info for quota decisions. This is done for higher accuracy of the quota mechanism at cost of performance, when getting close to the quota limit. The value configured here is the ratio between the data usage to the max usage as specified by the quota.\",\n        \"default\": 0.95,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_bucket_quota_ttl\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Bucket quota stats cache TTL\",\n        \"long_desc\": \"Length of time for bucket stats to be cached within RGW instance.\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_cache_enabled\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable RGW metadata cache.\",\n        \"long_desc\": \"The metadata cache holds metadata entries that RGW requires for processing requests. Metadata entries can be user info, bucket info, and bucket instance info. If not found in the cache, entries will be fetched from the backing RADOS store.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_cache_lru_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_cache_expiry_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of seconds before entries in the cache are assumed stale and re-fetched. Zero is never.\",\n        \"long_desc\": \"The Rados Gateway stores metadata and objects in an internal cache. This should be kept consistent by the OSD's relaying notify events between multiple watching RGW processes. In the event that this notification protocol fails, bounding the length of time that any data in the cache will be assumed valid will ensure that any RGW instance that falls out of sync will eventually recover. This seems to be an issue mostly for large numbers of RGW instances under heavy use. If you would like to turn off cache expiry, set this value to zero.\",\n        \"default\": 900,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"performance\"\n        ],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_cache_lru_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of items in RGW metadata cache.\",\n        \"long_desc\": \"When full, the RGW metadata cache evicts least recently used entries.\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_cache_enabled\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_content_length_compat\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Multiple content length headers compatibility\",\n        \"long_desc\": \"Try to handle requests with abiguous multiple content length headers (Content-Length, Http-Content-Length).\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_copy_obj_progress\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Send progress report through copy operation\",\n        \"long_desc\": \"If true, RGW will send progress information when copy operation is executed. \",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_copy_obj_progress_every_bytes\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Send copy-object progress info after these many bytes\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"rgw_cors_rules_max_num\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of cors rules in a single request\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_cross_domain_policy\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW handle cross domain policy\",\n        \"long_desc\": \"Returned cross domain policy when accessing the crossdomain.xml resource (Swift compatiility).\",\n        \"default\": \"<allow-access-from domain=\\\"*\\\" secure=\\\"false\\\" />\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_crypt_default_encryption_key\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_crypt_require_ssl\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Requests including encryption key headers must be sent over ssl\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_crypt_s3_kms_encryption_keys\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_crypt_suppress_logs\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Suppress logs that might print client key\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_curl_low_speed_limit\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"It contains the average transfer speed in bytes per second that the transfer should be below during rgw_curl_low_speed_time seconds for libcurl to consider it to be too slow and abort. Set it zero to disable this.\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_curl_low_speed_time\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"It contains the time in number seconds that the transfer speed should be below the rgw_curl_low_speed_limit for the library to consider it too slow and abort. Set it zero to disable this.\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_curl_wait_timeout_ms\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_data\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Alternative location for RGW configuration.\",\n        \"long_desc\": \"If this is set, the different Ceph system configurables (such as the keyring file will be located in the path that is specified here. \",\n        \"default\": \"/var/lib/ceph/radosgw/$cluster-$id\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": [\n            \"no_mon_update\"\n        ]\n    },\n    {\n        \"name\": \"rgw_data_log_changes_size\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"Max size of pending changes in data log\",\n        \"long_desc\": \"RGW will trigger update to the data log if the number of pending entries reached this number.\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_data_log_num_shards\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of data log shards\",\n        \"long_desc\": \"The number of shards the RGW data log entries will reside in. This affects the data sync parallelism as a shard can only be processed by a single RGW at a time.\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_data_log_obj_prefix\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"data_log\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_data_log_window\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Data log time window\",\n        \"long_desc\": \"The data log keeps information about buckets that have objectst that were modified within a specific timeframe. The sync process then knows which buckets are needed to be scanned for data sync.\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_data_notify_interval_msec\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"data changes notification interval to followers\",\n        \"long_desc\": \"\",\n        \"default\": 200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_default_realm_info_oid\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"default.realm\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_default_region_info_oid\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default region info object id\",\n        \"long_desc\": \"Obsolete config option. The rgw_default_zonegroup_info_oid should be used instead.\",\n        \"default\": \"default.region\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_default_zonegroup_info_oid\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_default_zone_info_oid\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Default zone info object id\",\n        \"long_desc\": \"Name of the RADOS object that holds the default zone information.\",\n        \"default\": \"default.zone\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_default_zonegroup_info_oid\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"default.zonegroup\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_defer_to_bucket_acls\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Bucket ACLs override object ACLs\",\n        \"long_desc\": \"If not empty, a string that selects that mode of operation. 'recurse' will use bucket's ACL for the authorizaton. 'full-control' will allow users that users that have full control permission on the bucket have access to the object.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_delete_multi_obj_max_num\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of objects in a single multi-object delete request\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_dns_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"The host name that RGW uses.\",\n        \"long_desc\": \"This is Needed for virtual hosting of buckets to work properly, unless configured via zonegroup configuration.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_dns_s3website_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"The host name that RGW uses for static websites (S3)\",\n        \"long_desc\": \"This is needed for virtual hosting of buckets, unless configured via zonegroup configuration.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_dynamic_resharding\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"Enable dynamic resharding\",\n        \"long_desc\": \"If true, RGW will dynamicall increase the number of shards in buckets that have a high number of objects per shard.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_max_objs_per_shard\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_apis\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"A list of set of RESTful APIs that rgw handles.\",\n        \"long_desc\": \"\",\n        \"default\": \"s3, s3website, swift, swift_auth, admin, sts\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_gc_threads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enables the garbage collection maintenance thread.\",\n        \"long_desc\": \"The garbage collection maintenance thread is responsible for garbage collector maintenance work. The thread itself can be disabled, but in order for garbage collection to work correctly, at least one RGW in each zone needs to have this thread running.  Having the thread enabled on multiple RGW processes within the same zone can spread some of the maintenance work between them.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_quota_threads\",\n            \"rgw_enable_lc_threads\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_lc_threads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enables the lifecycle maintenance thread. This is required on at least one rgw for each zone.\",\n        \"long_desc\": \"The lifecycle maintenance thread is responsible for lifecycle related maintenance work. The thread itself can be disabled, but in order for lifecycle to work correctly, at least one RGW in each zone needs to have this thread running. Havingthe thread enabled on multiple RGW processes within the same zone can spread some of the maintenance work between them.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_gc_threads\",\n            \"rgw_enable_quota_threads\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_ops_log\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable ops log\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_log_nonexistent_bucket\",\n            \"rgw_log_object_name\",\n            \"rgw_ops_log_rados\",\n            \"rgw_ops_log_socket_path\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_quota_threads\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enables the quota maintenance thread.\",\n        \"long_desc\": \"The quota maintenance thread is responsible for quota related maintenance work. The thread itself can be disabled, but in order for quota to work correctly, at least one RGW in each zone needs to have this thread running. Having the thread enabled on multiple RGW processes within the same zone can spread some of the maintenance work between them.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_gc_threads\",\n            \"rgw_enable_lc_threads\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_static_website\",\n        \"type\": \"bool\",\n        \"level\": \"basic\",\n        \"desc\": \"Enable static website APIs\",\n        \"long_desc\": \"This configurable controls whether RGW handles the website control APIs. RGW can server static websites if s3website hostnames are configured, and unrelated to this configurable.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enable_usage_log\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable usage log\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_usage_max_shards\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_enforce_swift_acls\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW enforce swift acls\",\n        \"long_desc\": \"Should RGW enforce special Swift-only ACLs. Swift has a special ACL that gives permission to access all objects in a container.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_exit_timeout_secs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW shutdown timeout\",\n        \"long_desc\": \"Number of seconds to wait for a process before exiting unconditionally.\",\n        \"default\": 120,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_expose_bucket\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Send Bucket HTTP header with the response\",\n        \"long_desc\": \"If true, RGW will send a Bucket HTTP header with the responses. The header will contain the name of the bucket the operation happened on.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_extended_http_attrs\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW support extended HTTP attrs\",\n        \"long_desc\": \"Add new set of attributes that could be set on an object. These extra attributes can be set through HTTP header fields when putting the objects. If set, these attributes will return as HTTP fields when doing GET/HEAD on the object.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_fcgi_socket_backlog\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"FastCGI socket connection backlog\",\n        \"long_desc\": \"Size of FastCGI connection backlog. This reflects the maximum number of new connection requests that RGW can handle concurrently without dropping any. \",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_host\",\n            \"rgw_socket_path\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_frontends\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"RGW frontends configuration\",\n        \"long_desc\": \"A comma delimited list of frontends configuration. Each configuration contains the type of the frontend followed by an optional space delimited set of key=value config parameters.\",\n        \"default\": \"civetweb port=7480\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_gc_max_concurrent_io\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max concurrent RADOS IO operations for garbage collection\",\n        \"long_desc\": \"The maximum number of concurrent IO operations that the RGW garbage collection thread will use when purging old data.\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_gc_max_objs\",\n            \"rgw_gc_obj_min_wait\",\n            \"rgw_gc_processor_max_time\",\n            \"rgw_gc_max_trim_chunk\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_gc_max_objs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of shards for garbage collector data\",\n        \"long_desc\": \"The number of garbage collector data shards, is the number of RADOS objects that RGW will use to store the garbage collection information on.\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_gc_obj_min_wait\",\n            \"rgw_gc_processor_max_time\",\n            \"rgw_gc_processor_period\",\n            \"rgw_gc_max_concurrent_io\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_gc_max_trim_chunk\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of keys to remove from garbage collector log in a single operation\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_gc_max_objs\",\n            \"rgw_gc_obj_min_wait\",\n            \"rgw_gc_processor_max_time\",\n            \"rgw_gc_max_concurrent_io\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_gc_obj_min_wait\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Garabge collection object expiration time\",\n        \"long_desc\": \"The length of time (in seconds) that the RGW collector will wait before purging a deleted object's data. RGW will not remove object immediately, as object could still have readers. A mechanism exists to increase the object's expiration time when it's being read.\",\n        \"default\": 7200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_gc_max_objs\",\n            \"rgw_gc_processor_max_time\",\n            \"rgw_gc_processor_period\",\n            \"rgw_gc_max_concurrent_io\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_gc_processor_max_time\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Length of time GC processor can lease shard\",\n        \"long_desc\": \"Garbage collection thread in RGW process holds a lease on its data shards. These objects contain the information about the objects that need to be removed. RGW takes a lease in order to prevent multiple RGW processes from handling the same objects concurrently. This time signifies that maximum amount of time that RGW is allowed to hold that lease. In the case where RGW goes down uncleanly, this is the amount of time where processing of that data shard will be blocked.\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_gc_max_objs\",\n            \"rgw_gc_obj_min_wait\",\n            \"rgw_gc_processor_period\",\n            \"rgw_gc_max_concurrent_io\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_gc_processor_period\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Garbage collector cycle run time\",\n        \"long_desc\": \"The amount of time between the start of consecutive runs of the garbage collector threads. If garbage collector runs takes more than this period, it will not wait before running again.\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_gc_max_objs\",\n            \"rgw_gc_obj_min_wait\",\n            \"rgw_gc_processor_max_time\",\n            \"rgw_gc_max_concurrent_io\",\n            \"rgw_gc_max_trim_chunk\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_get_obj_max_req_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW object read chunk size\",\n        \"long_desc\": \"The maximum request size of a single object read operation sent to RADOS\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4194304\"\n    },\n    {\n        \"name\": \"rgw_get_obj_window_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW object read window size\",\n        \"long_desc\": \"The window size in bytes for a single object read request\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16777216\"\n    },\n    {\n        \"name\": \"rgw_healthcheck_disabling_path\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Swift health check api can be disabled if a file can be accessed in this path.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_host\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW FastCGI host name (for FastCGI over TCP)\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_port\",\n            \"rgw_fcgi_socket_backlog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ignore_get_invalid_range\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Treat invalid (e.g., negative) range request as full\",\n        \"long_desc\": \"Treat invalid (e.g., negative) range request as request for the full object (AWS compatibility)\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_init_timeout\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"Initialization timeout\",\n        \"long_desc\": \"The time length (in seconds) that RGW will allow for its initialization. RGW process will give up and quit if initialization is not complete after this amount of time.\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_inject_notify_timeout_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"Likelihood of ignoring a notify\",\n        \"long_desc\": \"This is the probability that the RGW cache will ignore a cache notify message. It exists to help with the development and testing of cache consistency and recovery improvements. Please do not set it in a production cluster, as it actively causes failures. Set this to a floating point value between 0 and 1.\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"fault injection\",\n            \"testing\"\n        ],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 0,\n        \"max\": 1,\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_accepted_admin_roles\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"List of roles allowing user to gain admin privileges (Keystone).\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_accepted_roles\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Only users with one of these roles will be served when doing Keystone authentication.\",\n        \"long_desc\": \"\",\n        \"default\": \"Member, admin\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_domain\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone admin user domain (for Keystone v3).\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_password\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"DEPRECATED: Keystone admin password.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_password_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Path to a file containing the Keystone admin password.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_project\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone admin user project (for Keystone v3).\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_tenant\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone admin user tenant.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_token\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"DEPRECATED: The admin token (shared secret) that is used for the Keystone requests.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_token_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Path to a file containing the admin token (shared secret) that is used for the Keystone requests.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_admin_user\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone admin user.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_api_version\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Version of Keystone API to use (2 or 3).\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_barbican_domain\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone barbican user domain.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_barbican_password\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone password for barbican user.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_barbican_project\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone barbican user project (Keystone v3).\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_barbican_tenant\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone barbican user tenant (Keystone v2.0).\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_barbican_user\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone user to access barbican secrets.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_implicit_tenants\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW Keystone implicit tenants creation\",\n        \"long_desc\": \"Implicitly create new users in their own tenant with the same name when authenticating via Keystone.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_revocation_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone cache revocation interval\",\n        \"long_desc\": \"Time (in seconds) that RGW waits between requests to Keystone for getting a list of revoked tokens. A revoked token might still be considered valid by RGW for this amount of time.\",\n        \"default\": 900,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_token_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Keystone token cache size\",\n        \"long_desc\": \"Max number of Keystone tokens that will be cached. Token that is not cached requires RGW to access the Keystone server when authenticating.\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_url\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"The URL to the Keystone server.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_keystone_verify_ssl\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should RGW verify the Keystone server SSL certificate.\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_lc_debug_interval\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_lc_lock_max_time\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_lc_max_objs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of lifecycle data shards\",\n        \"long_desc\": \"Number of RADOS objects to use for storing lifecycle index. This can affect concurrency of lifecycle maintenance, but requires multiple RGW processes running on the zone to be utilized.\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_lc_max_rules\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of lifecycle rules set on one bucket\",\n        \"long_desc\": \"Number of lifecycle rules set on one bucket should be limited.\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_lc_thread_delay\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Delay after processing of bucket listing chunks (i.e., per 1000 entries) in milliseconds\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ldap_binddn\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"LDAP entry RGW will bind with (user match).\",\n        \"long_desc\": \"\",\n        \"default\": \"uid=admin,cn=users,dc=example,dc=com\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ldap_dnattr\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"LDAP attribute containing RGW user names (to form binddns).\",\n        \"long_desc\": \"\",\n        \"default\": \"uid\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ldap_searchdn\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"LDAP search base (basedn).\",\n        \"long_desc\": \"\",\n        \"default\": \"cn=users,cn=accounts,dc=example,dc=com\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ldap_searchfilter\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"LDAP search filter.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ldap_secret\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Path to file containing credentials for rgw_ldap_binddn.\",\n        \"long_desc\": \"\",\n        \"default\": \"/etc/openldap/secret\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ldap_uri\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Space-separated list of LDAP servers in URI format.\",\n        \"long_desc\": \"\",\n        \"default\": \"ldaps://<ldap.your.domain>\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_lifecycle_work_time\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Lifecycle allowed work time\",\n        \"long_desc\": \"Local time window in which the lifecycle maintenance thread can work.\",\n        \"default\": \"00:00-06:00\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_list_bucket_min_readahead\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum number of entries to request from rados for bucket listing\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_list_buckets_max_chunk\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of buckets to retrieve in a single listing operation\",\n        \"long_desc\": \"When RGW fetches lists of user's buckets from the backend, this is the max number of entries it will try to retrieve in a single operation. Note that the backend may choose to return a smaller number of entries.\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_log_http_headers\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"List of HTTP headers to log\",\n        \"long_desc\": \"A comma delimited list of HTTP headers to log when seen, ignores case (e.g., http_x_forwarded_for).\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_log_nonexistent_bucket\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should RGW log operations on bucket that does not exist\",\n        \"long_desc\": \"This config option applies to the ops log. When this option is set, the ops log will log operations that are sent to non existing buckets. These operations inherently fail, and do not correspond to a specific user.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_log_object_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Ops log object name format\",\n        \"long_desc\": \"Defines the format of the RADOS objects names that ops log uses to store ops log data\",\n        \"default\": \"%Y-%m-%d-%H-%i-%n\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_log_object_name_utc\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should ops log object name based on UTC\",\n        \"long_desc\": \"If set, the names of the RADOS objects that hold the ops log data will be based on UTC time zone. If not set, it will use the local time zone.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\",\n            \"rgw_log_object_name\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_max_attr_name_len\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"The maximum length of metadata name. 0 skips the check\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"rgw_max_attr_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"The maximum length of metadata value. 0 skips the check\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"0\"\n    },\n    {\n        \"name\": \"rgw_max_attrs_num_in_req\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"The maximum number of metadata items that can be put via single request\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_max_chunk_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Set RGW max chunk size\",\n        \"long_desc\": \"The chunk size is the size of RADOS I/O requests that RGW sends when accessing data objects. RGW read and write operation will never request more than this amount in a single request. This also defines the rgw object head size, as head operations need to be atomic, and anything larger than this would require more than a single operation.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4194304\"\n    },\n    {\n        \"name\": \"rgw_max_notify_retries\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of attempts to notify peers before giving up.\",\n        \"long_desc\": \"The number of times we will attempt to update a peer's cache in the event of error before giving up. This is unlikely to be an issue unless your cluster is very heavily loaded. Beware that increasing this value may cause some operations to take longer in exceptional cases and thus may, rarely, cause clients to time out.\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"error recovery\"\n        ],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_max_objs_per_shard\",\n        \"type\": \"uint\",\n        \"level\": \"basic\",\n        \"desc\": \"Max objects per shard for dynamic resharding\",\n        \"long_desc\": \"This is the max number of objects per bucket index shard that RGW will allow with dynamic resharding. RGW will trigger an automatic reshard operation on the bucket if it exceeds this number.\",\n        \"default\": 100000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_dynamic_resharding\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_max_put_param_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"The maximum size (in bytes) of data input of certain RESTful requests.\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"1048576\"\n    },\n    {\n        \"name\": \"rgw_max_put_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max size (in bytes) of regular (non multi-part) object upload.\",\n        \"long_desc\": \"Plain object upload is capped at this amount of data. In order to upload larger objects, a special upload mechanism is required. The S3 API provides the multi-part upload, and Swift provides DLO and SLO.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"5368709120\"\n    },\n    {\n        \"name\": \"rgw_max_slo_entries\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of entries in Swift Static Large Object manifest\",\n        \"long_desc\": \"\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_md_log_max_shards\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW number of metadata log shards\",\n        \"long_desc\": \"The number of shards the RGW metadata log entries will reside in. This affects the metadata sync parallelism as a shard can only be processed by a single RGW at a time\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_md_notify_interval_msec\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Length of time to aggregate metadata changes\",\n        \"long_desc\": \"Length of time (in milliseconds) in which the master zone aggregates all the metadata changes that occurred, before sending notifications to all the other zones.\",\n        \"default\": 200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_mime_types_file\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"Path to local mime types file\",\n        \"long_desc\": \"The mime types file is needed in Swift when uploading an object. If object's content type is not specified, RGW will use data from this file to assign a content type to the object.\",\n        \"default\": \"/etc/mime.types\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_mp_lock_max_time\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Multipart upload max completion time\",\n        \"long_desc\": \"Time length to allow completion of a multipart upload operation. This is done to prevent concurrent completions on the same object with the same upload id.\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_multipart_min_part_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum S3 multipart-upload part size\",\n        \"long_desc\": \"When doing a multipart upload, each part (other than the last part) should be at least this size.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"5242880\"\n    },\n    {\n        \"name\": \"rgw_multipart_part_upload_limit\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of parts in multipart upload\",\n        \"long_desc\": \"\",\n        \"default\": 10000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_fhcache_partitions\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 3,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_fhcache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2017,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_lru_lane_hiwat\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 911,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_lru_lanes\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 5,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_max_gc\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_namespace_expire_secs\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 300,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_nfs_write_completion_interval_s\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_num_async_rados_threads\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of concurrent RADOS operations in multisite sync\",\n        \"long_desc\": \"The number of concurrent RADOS IO operations that will be triggered for handling multisite sync operations. This includes control related work, and not the actual sync operations.\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_num_control_oids\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of control objects used for cross-RGW communication.\",\n        \"long_desc\": \"RGW uses certain control objects to send messages between different RGW processes running on the same zone. These messages include metadata cache invalidation info that is being sent when metadata is modified (such as user or bucket information). A higher number of control objects allows better concurrency of these messages, at the cost of more resource utilization.\",\n        \"default\": 8,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_num_rados_handles\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of librados handles that RGW uses.\",\n        \"long_desc\": \"This param affects the number of separate librados handles it uses to connect to the RADOS backend, which directly affects the number of connections RGW will have to each OSD. A higher number affects resource utilization.\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_obj_stripe_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW object stripe size\",\n        \"long_desc\": \"The size of an object stripe for RGW objects. This is the maximum size a backing RADOS object will have. RGW objects that are larger than this will span over multiple objects.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4194304\"\n    },\n    {\n        \"name\": \"rgw_obj_tombstone_cache_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of entries to keep in tombstone cache\",\n        \"long_desc\": \"The tombstone cache is used when doing a multi-zone data sync. RGW keeps there information about removed objects which is needed in order to prevent re-syncing of objects that were already removed.\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_objexp_chunk_size\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 100,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_objexp_gc_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift objects expirer garbage collector interval\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_objexp_hints_num_shards\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of object expirer data shards\",\n        \"long_desc\": \"The number of shards the (Swift) object expirer will store its data on.\",\n        \"default\": 127,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_olh_pending_timeout_sec\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"Max time for pending OLH change to complete\",\n        \"long_desc\": \"OLH is a versioned object's logical head. Operations on it are journaled and as pending before completion. If an operation doesn't complete with this amount of seconds, we remove the operation from the journal.\",\n        \"default\": 3600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_op_thread_suicide_timeout\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_op_thread_timeout\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"Timeout for async rados coroutine operations.\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_op_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"true if LTTng-UST tracepoints should be enabled\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_opa_token\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"The Bearer token OPA uses to authenticate client requests.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_opa_url\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"URL to OPA server.\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_opa_verify_ssl\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should RGW verify the OPA server SSL certificate.\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ops_log_data_backlog\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Ops log socket backlog\",\n        \"long_desc\": \"Maximum amount of data backlog that RGW can keep when ops log is configured to send info through unix domain socket. When data backlog is higher than this, ops log entries will be lost. In order to avoid ops log information loss, the listener needs to clear data (by reading it) quickly enough.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\",\n            \"rgw_ops_log_socket_path\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"5242880\"\n    },\n    {\n        \"name\": \"rgw_ops_log_rados\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Use RADOS for ops log\",\n        \"long_desc\": \"If set, RGW will store ops log information in RADOS.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_ops_log_socket_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Unix domain socket path for ops log.\",\n        \"long_desc\": \"Path to unix domain socket that RGW will listen for connection on. When connected, RGW will send ops log data through it.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\",\n            \"rgw_ops_log_data_backlog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_override_bucket_index_max_shards\",\n        \"type\": \"uint\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_period_latest_epoch_info_oid\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \".latest_epoch\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_period_push_interval\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period push interval\",\n        \"long_desc\": \"Number of seconds to wait before retrying 'period push' operation.\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_period_push_interval_max\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period push maximum interval\",\n        \"long_desc\": \"The max number of seconds to wait before retrying 'period push' after exponential backoff.\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_period_root_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Period root pool\",\n        \"long_desc\": \"The period root pool, is the pool where the RGW period configuration located.\",\n        \"default\": \".rgw.root\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zonegroup_root_pool\",\n            \"rgw_zone_root_pool\",\n            \"rgw_realm_root_pool\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_port\",\n        \"type\": \"str\",\n        \"level\": \"basic\",\n        \"desc\": \"RGW FastCGI port number (for FastCGI over TCP)\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_host\",\n            \"rgw_fcgi_socket_backlog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_print_continue\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW support of 100-continue\",\n        \"long_desc\": \"Should RGW explicitly send 100 (continue) responses. This is mainly relevant when using FastCGI, as some FastCGI modules do not fully support this feature.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_print_prohibited_content_length\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW RFC-7230 compatibility\",\n        \"long_desc\": \"Specifies whether RGW violates RFC 7230 and sends Content-Length with 204 or 304 statuses.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_put_obj_max_window_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"The maximum RADOS write window size (in bytes).\",\n        \"long_desc\": \"The window size may be dynamically adjusted, but will not surpass this value.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_put_obj_min_window_size\",\n            \"rgw_max_chunk_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"67108864\"\n    },\n    {\n        \"name\": \"rgw_put_obj_min_window_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"The minimum RADOS write window size (in bytes).\",\n        \"long_desc\": \"The window size determines the total concurrent RADOS writes of a single rgw object. When writing an object RGW will send multiple chunks to RADOS. The total size of the writes does not exceed the window size. The window size can be automatically in order to better utilize the pipe.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_put_obj_max_window_size\",\n            \"rgw_max_chunk_size\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"16777216\"\n    },\n    {\n        \"name\": \"rgw_rados_tracing\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"true if LTTng-UST tracepoints should be enabled\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_realm\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_realm_root_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Realm root pool\",\n        \"long_desc\": \"The realm root pool, is the pool where the RGW realm configuration located.\",\n        \"default\": \".rgw.root\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zonegroup_root_pool\",\n            \"rgw_zone_root_pool\",\n            \"rgw_period_root_pool\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_region\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Region name\",\n        \"long_desc\": \"Obsolete config option. The rgw_zonegroup option should be used instead.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zonegroup\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_region_root_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Region root pool\",\n        \"long_desc\": \"Obsolete config option. The rgw_zonegroup_root_pool should be used instead.\",\n        \"default\": \".rgw.root\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zonegroup_root_pool\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_relaxed_region_enforcement\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Disable region constraint enforcement\",\n        \"long_desc\": \"Enable requests such as bucket creation to succeed irrespective of region restrictions (Jewel compat).\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_relaxed_s3_bucket_names\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW enable relaxed S3 bucket names\",\n        \"long_desc\": \"RGW enable relaxed S3 bucket name rules for US region buckets.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_remote_addr_param\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"HTTP header that holds the remote address in incoming requests.\",\n        \"long_desc\": \"RGW will use this header to extract requests origin. When RGW runs behind a reverse proxy, the remote address header will point at the proxy's address and not at the originator's address. Therefore it is sometimes possible to have the proxy add the originator's address in a separate HTTP header, which will allow RGW to log it correctly.\",\n        \"default\": \"REMOTE_ADDR\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_ops_log\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_request_uri\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_reshard_batch_size\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of reshard entries to batch together before sending the operations to the CLS back-end\",\n        \"long_desc\": \"\",\n        \"default\": 64,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"performance\"\n        ],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 8,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_reshard_bucket_lock_duration\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of seconds the timeout on the reshard locks (bucket reshard lock and reshard log lock) are set to. As a reshard proceeds these locks can be renewed/extended. If too short, reshards cannot complete and will fail, causing a future reshard attempt. If too long a hung or crashed reshard attempt will keep the bucket locked for an extended period, not allowing RGW to detect the failed reshard attempt and recover.\",\n        \"long_desc\": \"\",\n        \"default\": 360,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"performance\"\n        ],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 30,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_reshard_max_aio\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum number of outstanding asynchronous I/O operations to allow at a time during resharding\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"performance\"\n        ],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 16,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_reshard_num_logs\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\",\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_reshard_thread_interval\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of seconds between processing of reshard log entries\",\n        \"long_desc\": \"\",\n        \"default\": 600,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": 600,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_resolve_cname\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Support vanity domain names via CNAME\",\n        \"long_desc\": \"If true, RGW will query DNS when detecting that it's serving a request that was sent to a host in another domain. If a CNAME record is configured for that domain it will use it instead. This gives user to have the ability of creating a unique domain of their own to point at data in their bucket.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_rest_getusage_op_compat\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"REST GetUsage request backward compatibility\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_run_sync_thread\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should run sync thread\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_s3_auth_order\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Authentication strategy order to use for s3 authentication\",\n        \"long_desc\": \"Order of authentication strategies to try for s3 authentication, the allowed options are a comma separated list of engines external, local. The default order is to try all the externally configured engines before attempting local rados based authentication\",\n        \"default\": \"sts, external, local\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_s3_auth_use_keystone\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should S3 authentication use Keystone.\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_s3_auth_use_ldap\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should S3 authentication use LDAP.\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_s3_auth_use_rados\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should S3 authentication use credentials stored in RADOS backend.\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_s3_auth_use_sts\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should S3 authentication use STS.\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_s3_success_create_obj_status\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"HTTP return code override for object creation\",\n        \"long_desc\": \"If not zero, this is the HTTP return code that will be returned on a successful S3 object creation.\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_safe_max_objects_per_shard\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Safe number of objects per shard\",\n        \"long_desc\": \"This is the max number of objects per bucket index shard that RGW considers safe. RGW will warn if it identifies a bucket where its per-shard count is higher than a percentage of this number.\",\n        \"default\": 102400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_shard_warning_threshold\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_script_uri\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_service_provider_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Service provider name which is contained in http response headers\",\n        \"long_desc\": \"As S3 or other cloud storage providers do, http response headers should contain the name of the provider. This name will be placed in http header 'Server'.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_shard_warning_threshold\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"Warn about max objects per shard\",\n        \"long_desc\": \"Warn if number of objects per shard in a specific bucket passed this percentage of the safe number.\",\n        \"default\": 90,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_safe_max_objects_per_shard\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_socket_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"RGW FastCGI socket path (for FastCGI over Unix domain sockets).\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_fcgi_socket_backlog\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sts_entry\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"STS URL prefix\",\n        \"long_desc\": \"URL path prefix for internal STS requests.\",\n        \"default\": \"sts\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sts_key\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"STS Key\",\n        \"long_desc\": \"Key used for encrypting/ decrypting session token.\",\n        \"default\": \"sts\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sts_max_session_duration\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Session token max duration\",\n        \"long_desc\": \"Max duration in seconds for which the session token is valid.\",\n        \"default\": 43200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_account_in_url\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift account encoded in URL\",\n        \"long_desc\": \"Whether the swift account is encoded in the uri path (AUTH_<account>).\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_swift_tenant_name\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_auth_entry\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift auth URL prefix\",\n        \"long_desc\": \"URL path prefix for internal swift auth requests.\",\n        \"default\": \"auth\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_swift_url\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_auth_url\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift auth URL\",\n        \"long_desc\": \"Default url to which RGW connects and verifies tokens for v1 auth (if not using internal swift auth).\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_custom_header\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable swift custom header\",\n        \"long_desc\": \"If not empty, specifies a name of HTTP header that can include custom data. When uploading an object, if this header is passed RGW will store this header info and it will be available when listing the bucket.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_enforce_content_length\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Send content length when listing containers (Swift)\",\n        \"long_desc\": \"Whether content length header is needed when listing containers. When this is set to false, RGW will send extra info for each entry in the response.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_need_stats\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable stats on bucket listing in Swift\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_tenant_name\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift tenant name\",\n        \"long_desc\": \"Tenant name that is used when constructing the swift path.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_swift_account_in_url\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_token_expiration\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Expiration time (in seconds) for token generated through RGW Swift auth.\",\n        \"long_desc\": \"\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_url\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift-auth storage URL\",\n        \"long_desc\": \"Used in conjunction with rgw internal swift authentication. This affects the X-Storage-Url response header value.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_swift_auth_entry\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_url_prefix\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Swift URL prefix\",\n        \"long_desc\": \"The URL path prefix for swift requests.\",\n        \"default\": \"swift\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_swift_versioning_enabled\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Enable Swift versioning\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_data_inject_err_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_lease_period\",\n        \"type\": \"int\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 120,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_log_trim_concurrent_buckets\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum number of buckets to trim in parallel\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_sync_log_trim_interval\",\n            \"rgw_sync_log_trim_max_buckets\",\n            \"rgw_sync_log_trim_min_cold_buckets\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_log_trim_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Sync log trim interval\",\n        \"long_desc\": \"Time in seconds between attempts to trim sync logs.\",\n        \"default\": 1200,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_log_trim_max_buckets\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Maximum number of buckets to trim per interval\",\n        \"long_desc\": \"The maximum number of buckets to consider for bucket index log trimming each trim interval, regardless of the number of bucket index shards. Priority is given to buckets with the most sync activity over the last trim interval.\",\n        \"default\": 16,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_sync_log_trim_interval\",\n            \"rgw_sync_log_trim_min_cold_buckets\",\n            \"rgw_sync_log_trim_concurrent_buckets\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_log_trim_min_cold_buckets\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Minimum number of cold buckets to trim per interval\",\n        \"long_desc\": \"Of the `rgw_sync_log_trim_max_buckets` selected for bucket index log trimming each trim interval, at least this many of them must be 'cold' buckets. These buckets are selected in order from the list of all bucket instances, to guarantee that all buckets will be visited eventually.\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_sync_log_trim_interval\",\n            \"rgw_sync_log_trim_max_buckets\",\n            \"rgw_sync_log_trim_concurrent_buckets\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_meta_inject_err_probability\",\n        \"type\": \"float\",\n        \"level\": \"dev\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_trace_history_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"Sync trace history size\",\n        \"long_desc\": \"Maximum number of complete sync trace entries to keep.\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"rgw_sync_trace_per_node_log_size\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Sync trace per-node log size\",\n        \"long_desc\": \"The number of log entries to keep per sync-trace node.\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_sync_trace_servicemap_update_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Sync-trace service-map update interval\",\n        \"long_desc\": \"Number of seconds between service-map updates of sync-trace events.\",\n        \"default\": 10,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_thread_pool_size\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"RGW requests handling thread pool size.\",\n        \"long_desc\": \"This parameter determines the number of concurrent requests RGW can process when using either the civetweb, or the fastcgi frontends. The higher this number is, RGW will be able to deal with more concurrent requests at the cost of more resource utilization.\",\n        \"default\": 512,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_torrent_comment\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Torrent field comment\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_torrent_createby\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"torrent field created by\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_torrent_encoding\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"torrent field encoding\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_torrent_flag\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"When true, uploaded objects will calculate and store a SHA256 hash of object data so the object can be retrieved as a torrent file\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_torrent_origin\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Torrent origin\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_torrent_sha_unit\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"524288\"\n    },\n    {\n        \"name\": \"rgw_torrent_tracker\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Torrent field announce and announce list\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_trust_forwarded_https\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Trust Forwarded and X-Forwarded-Proto headers\",\n        \"long_desc\": \"When a proxy in front of radosgw is used for ssl termination, radosgw does not know whether incoming http connections are secure. Enable this option to trust the Forwarded and X-Forwarded-Proto headers sent by the proxy when determining whether the connection is secure. This is required for some features, such as server side encryption.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_crypt_require_ssl\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_usage_log_flush_threshold\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of entries in usage log before flushing\",\n        \"long_desc\": \"This is the max number of entries that will be held in the usage log, before it will be flushed to the backend. Note that the usage log is periodically flushed, even if number of entries does not reach this threshold. A usage log entry corresponds to one or more operations on a single bucket.i\",\n        \"default\": 1024,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_usage_log\",\n            \"rgw_usage_log_tick_interval\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_usage_log_tick_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of seconds between usage log flush cycles\",\n        \"long_desc\": \"The number of seconds between consecutive usage log flushes. The usage log will also flush itself to the backend if the number of pending entries reaches a certain threshold.\",\n        \"default\": 30,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_usage_log\",\n            \"rgw_usage_log_flush_threshold\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_usage_max_shards\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of shards for usage log.\",\n        \"long_desc\": \"The number of RADOS objects that RGW will use in order to store the usage log data.\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_usage_log\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_usage_max_user_shards\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of shards for single user in usage log\",\n        \"long_desc\": \"The number of shards that a single user will span over in the usage log.\",\n        \"default\": 1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_enable_usage_log\"\n        ],\n        \"min\": 1,\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_use_opa_authz\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should OPA be used to authorize client requests.\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_default_quota_max_objects\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"User quota max objects\",\n        \"long_desc\": \"The default quota configuration for total number of objects for a single user. A negative number means 'unlimited'.\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_default_quota_max_size\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"User quota max size\",\n        \"long_desc\": \"The default quota configuration for total size of objects for a single user. A negative number means 'unlimited'.\",\n        \"default\": -1,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_max_buckets\",\n        \"type\": \"int\",\n        \"level\": \"basic\",\n        \"desc\": \"Max number of buckets per user\",\n        \"long_desc\": \"A user can create this many buckets. Zero means unlimmited, negative number means user cannot create any buckets (although user will retain buckets already created.\",\n        \"default\": 1000,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_quota_bucket_sync_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"User quota bucket sync interval\",\n        \"long_desc\": \"Time period for accumulating modified buckets before syncing these stats.\",\n        \"default\": 180,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_quota_sync_idle_users\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should sync idle users quota\",\n        \"long_desc\": \"Whether stats for idle users be fully synced.\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_quota_sync_interval\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"User quota sync interval\",\n        \"long_desc\": \"Time period for accumulating modified buckets before syncing entire user stats.\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_user_quota_sync_wait_time\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"User quota full-sync wait time\",\n        \"long_desc\": \"Minimum time between two full stats sync for non-idle users.\",\n        \"default\": 86400,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_verify_ssl\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"Should RGW verify SSL when connecing to a remote HTTP server\",\n        \"long_desc\": \"RGW can send requests to other RGW servers (e.g., in multi-site sync work). This configurable selects whether RGW should verify the certificate for the remote peer and host.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_keystone_verify_ssl\"\n        ],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_website_routing_rules_max_num\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"Max number of website routing rules in a single request\",\n        \"long_desc\": \"\",\n        \"default\": 50,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_zone\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Zone name\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zonegroup\",\n            \"rgw_realm\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_zone_root_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Zone root pool name\",\n        \"long_desc\": \"The zone root pool, is the pool where the RGW zone configuration located.\",\n        \"default\": \".rgw.root\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zonegroup_root_pool\",\n            \"rgw_realm_root_pool\",\n            \"rgw_period_root_pool\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_zonegroup\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Zonegroup name\",\n        \"long_desc\": \"\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zone\",\n            \"rgw_realm\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rgw_zonegroup_root_pool\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"Zonegroup root pool\",\n        \"long_desc\": \"The zonegroup root pool, is the pool where the RGW zonegroup configuration located.\",\n        \"default\": \".rgw.root\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"rgw\"\n        ],\n        \"see_also\": [\n            \"rgw_zone_root_pool\",\n            \"rgw_realm_root_pool\",\n            \"rgw_period_root_pool\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_block_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"rocksdb_bloom_bits_per_key\",\n        \"type\": \"uint\",\n        \"level\": \"advanced\",\n        \"desc\": \"Number of bits per key to use for RocksDB's bloom filters.\",\n        \"long_desc\": \"RocksDB bloom filters can be used to quickly answer the question of whether or not a key may exist or definitely does not exist in a given RocksDB SST file without having to read all keys into memory.  Using a higher bit value decreases the likelihood of false positives at the expense of additional disk space and memory consumption when the filter is loaded into RAM.  The current default value of 20 was found to provide significant performance gains when getattr calls are made (such as during new object creation in bluestore) without significant memory overhead or cache pollution when combined with rocksdb partitioned index filters.  See: https://github.com/facebook/rocksdb/wiki/Partitioned-Index-Filters for more information.\",\n        \"default\": 20,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_cache_index_and_filter_blocks\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Whether to cache indices and filters in block cache\",\n        \"long_desc\": \"By default RocksDB will load an SST file's index and bloom filters into memory when it is opened and remove them from memory when an SST file is closed.  Thus, memory consumption by indices and bloom filters is directly tied to the number of concurrent SST files allowed to be kept open.  This option instead stores cached indicies and filters in the block cache where they directly compete with other cached data.  By default we set this option to true to better account for and bound rocksdb memory usage and keep filters in memory even when an SST file is closed.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_cache_index_and_filter_blocks_with_high_priority\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Whether to cache indices and filters in the block cache with high priority\",\n        \"long_desc\": \"A downside of setting rocksdb_cache_index_and_filter_blocks to true is that regular data can push indices and filters out of memory.  Setting this option to true means they are cached with higher priority than other data and should typically stay in the block cache.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_cache_row_ratio\",\n        \"type\": \"float\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 0,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_cache_shard_bits\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 4,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_cache_size\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"536870912\"\n    },\n    {\n        \"name\": \"rocksdb_cache_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"binned_lru\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_collect_compaction_stats\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_collect_extended_stats\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_collect_memory_stats\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_enable_rmrange\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_index_type\",\n        \"type\": \"str\",\n        \"level\": \"dev\",\n        \"desc\": \"Type of index for SST files: binary_search, hash_search, two_level\",\n        \"long_desc\": \"This option controls the table index type.  binary_search is a space efficient index block that is optimized for block-search-based index. hash_search may improve prefix lookup performance at the expense of higher disk and memory usage and potentially slower compactions.  two_level is an experimental index type that uses two binary search indexes and works in conjunction with partition filters.  See: http://rocksdb.org/blog/2017/05/12/partitioned-index-filter.html\",\n        \"default\": \"binary_search\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_log_to_ceph_log\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_metadata_block_size\",\n        \"type\": \"size\",\n        \"level\": \"dev\",\n        \"desc\": \"The block size for index partitions. (0 = rocksdb default)\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"rocksdb_partition_filters\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"(experimental) partition SST index/filters into smaller blocks\",\n        \"long_desc\": \"This is an experimental option for rocksdb that works in conjunction with two_level indices to avoid having to keep the entire filter/index in cache when cache_index_and_filter_blocks is true.  The idea is to keep a much smaller top-level index in heap/cache and then opportunistically cache the lower level indices.  See: https://github.com/facebook/rocksdb/wiki/Partitioned-Index-Filters\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_perf\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"rocksdb_pin_l0_filter_and_index_blocks_in_cache\",\n        \"type\": \"bool\",\n        \"level\": \"dev\",\n        \"desc\": \"Whether to pin Level 0 indices and bloom filters in the block cache\",\n        \"long_desc\": \"A downside of setting rocksdb_cache_index_and_filter_blocks to true is that regular data can push indices and filters out of memory.  Setting this option to true means that level 0 SST files will always have their indices and filters pinned in the block cache.\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"run_dir\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"path for the 'run' directory for storing pid and socket files\",\n        \"long_desc\": \"\",\n        \"default\": \"/var/run/ceph\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [\n            \"common\"\n        ],\n        \"see_also\": [\n            \"admin_socket\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"setgroup\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"gid or group name to switch to on startup\",\n        \"long_desc\": \"This is normally specified by the systemd unit file.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [\n            \"setuser\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"setuser\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"uid or user name to switch to on startup\",\n        \"long_desc\": \"This is normally specified by the systemd unit file.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [\n            \"setgroup\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"setuser_match_path\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"if set, setuser/setgroup is condition on this path matching ownership\",\n        \"long_desc\": \"If setuser or setgroup are specified, and this option is non-empty, then the uid/gid of the daemon will only be changed if the file or directory specified by this option has a matching uid and/or gid.  This exists primarily to allow switching to user ceph for OSDs to be conditional on whether the osd data contents have also been chowned after an upgrade.  This is normally specified by the systemd unit file.\",\n        \"default\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [\n            \"service\"\n        ],\n        \"services\": [\n            \"mon\",\n            \"mgr\",\n            \"osd\",\n            \"mds\"\n        ],\n        \"see_also\": [\n            \"setuser\",\n            \"setgroup\"\n        ],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    },\n    {\n        \"name\": \"target_max_misplaced_ratio\",\n        \"type\": \"float\",\n        \"level\": \"basic\",\n        \"desc\": \"Max ratio of misplaced objects to target when throttling data rebalancing activity\",\n        \"long_desc\": \"\",\n        \"default\": 0.05,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"threadpool_default_timeout\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 60,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"threadpool_empty_queue_max_wait\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"throttler_perf_counter\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": true,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_max_conns_per_portal\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 32,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_max_send_inline\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"512\"\n    },\n    {\n        \"name\": \"xio_mp_max_1k\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8192\"\n    },\n    {\n        \"name\": \"xio_mp_max_256\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"8192\"\n    },\n    {\n        \"name\": \"xio_mp_max_64\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"65536\"\n    },\n    {\n        \"name\": \"xio_mp_max_hint\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"xio_mp_max_page\",\n        \"type\": \"size\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": [],\n        \"default\": \"4096\"\n    },\n    {\n        \"name\": \"xio_mp_min\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_portal_threads\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 2,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_queue_depth\",\n        \"type\": \"int\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": 128,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_trace_mempool\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_trace_msgcnt\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_trace_xcon\",\n        \"type\": \"bool\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": false,\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": true,\n        \"flags\": []\n    },\n    {\n        \"name\": \"xio_transport_type\",\n        \"type\": \"str\",\n        \"level\": \"advanced\",\n        \"desc\": \"\",\n        \"long_desc\": \"\",\n        \"default\": \"rdma\",\n        \"daemon_default\": \"\",\n        \"tags\": [],\n        \"services\": [],\n        \"see_also\": [],\n        \"enum_values\": [],\n        \"min\": \"\",\n        \"max\": \"\",\n        \"can_update_at_runtime\": false,\n        \"flags\": []\n    }\n]"
						}
					]
				},
				{
					"name": "health full",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/health/full",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"health",
								"full"
							]
						}
					},
					"response": [
						{
							"name": "health full",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/health/full",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"health",
										"full"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:18:59 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "8916"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"health\": {\n        \"checks\": [],\n        \"status\": \"HEALTH_OK\"\n    },\n    \"mon_status\": {\n        \"name\": \"a\",\n        \"rank\": 0,\n        \"state\": \"leader\",\n        \"election_epoch\": 8,\n        \"quorum\": [\n            0,\n            1,\n            2\n        ],\n        \"quorum_age\": 1229,\n        \"features\": {\n            \"required_con\": \"2449958747315912708\",\n            \"required_mon\": [\n                \"kraken\",\n                \"luminous\",\n                \"mimic\",\n                \"osdmap-prune\",\n                \"nautilus\"\n            ],\n            \"quorum_con\": \"4611087854031142911\",\n            \"quorum_mon\": [\n                \"kraken\",\n                \"luminous\",\n                \"mimic\",\n                \"osdmap-prune\",\n                \"nautilus\"\n            ]\n        },\n        \"outside_quorum\": [],\n        \"extra_probe_peers\": [],\n        \"sync_provider\": [],\n        \"monmap\": {\n            \"epoch\": 1,\n            \"fsid\": \"9689695c-3039-4e2d-8b19-242461a98898\",\n            \"modified\": \"2019-01-08 09:58:22.295065\",\n            \"created\": \"2019-01-08 09:58:22.295065\",\n            \"features\": {\n                \"persistent\": [\n                    \"kraken\",\n                    \"luminous\",\n                    \"mimic\",\n                    \"osdmap-prune\",\n                    \"nautilus\"\n                ],\n                \"optional\": []\n            },\n            \"mons\": [\n                {\n                    \"rank\": 0,\n                    \"name\": \"a\",\n                    \"addr\": \"10.42.0.1:40931/0\",\n                    \"public_addr\": \"10.42.0.1:40931/0\"\n                },\n                {\n                    \"rank\": 1,\n                    \"name\": \"b\",\n                    \"addr\": \"10.42.0.1:40932/0\",\n                    \"public_addr\": \"10.42.0.1:40932/0\"\n                },\n                {\n                    \"rank\": 2,\n                    \"name\": \"c\",\n                    \"addr\": \"10.42.0.1:40933/0\",\n                    \"public_addr\": \"10.42.0.1:40933/0\"\n                }\n            ]\n        },\n        \"feature_map\": {\n            \"mon\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ],\n            \"mds\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ],\n            \"osd\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ],\n            \"mgr\": [\n                {\n                    \"features\": \"0x3ffddff8ffa4ffff\",\n                    \"release\": \"luminous\",\n                    \"num\": 1\n                }\n            ]\n        }\n    },\n    \"fs_map\": {\n        \"epoch\": 7,\n        \"default_fscid\": 1,\n        \"compat\": {\n            \"compat\": {},\n            \"ro_compat\": {},\n            \"incompat\": {\n                \"feature_1\": \"base v0.20\",\n                \"feature_2\": \"client writeable ranges\",\n                \"feature_3\": \"default file layouts on dirs\",\n                \"feature_4\": \"dir inode in separate object\",\n                \"feature_5\": \"mds uses versioned encoding\",\n                \"feature_6\": \"dirfrag is stored in omap\",\n                \"feature_8\": \"no anchor table\",\n                \"feature_9\": \"file layout v2\",\n                \"feature_10\": \"snaprealm v2\"\n            }\n        },\n        \"feature_flags\": {\n            \"enable_multiple\": false,\n            \"ever_enabled_multiple\": false\n        },\n        \"standbys\": [\n            {\n                \"gid\": 4173,\n                \"name\": \"c\",\n                \"rank\": -1,\n                \"incarnation\": 0,\n                \"state_seq\": 2,\n                \"addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 1046750154,\n                            \"addr\": \"10.42.0.1:6815\"\n                        }\n                    ]\n                },\n                \"standby_for_rank\": -1,\n                \"standby_for_fscid\": -1,\n                \"standby_for_name\": \"\",\n                \"standby_replay\": false,\n                \"export_targets\": [],\n                \"features\": 4611087854031142911,\n                \"epoch\": 4,\n                \"state\": \"up:standby\",\n                \"addr\": \"10.42.0.1:6815/1046750154\"\n            },\n            {\n                \"gid\": 4190,\n                \"name\": \"a\",\n                \"rank\": -1,\n                \"incarnation\": 0,\n                \"state_seq\": 1,\n                \"addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 3052302910,\n                            \"addr\": \"10.42.0.1:6813\"\n                        }\n                    ]\n                },\n                \"standby_for_rank\": -1,\n                \"standby_for_fscid\": -1,\n                \"standby_for_name\": \"\",\n                \"standby_replay\": false,\n                \"export_targets\": [],\n                \"features\": 4611087854031142911,\n                \"epoch\": 2,\n                \"state\": \"up:standby\",\n                \"addr\": \"10.42.0.1:6813/3052302910\"\n            }\n        ],\n        \"filesystems\": [\n            {\n                \"mdsmap\": {\n                    \"epoch\": 6,\n                    \"flags\": 18,\n                    \"ever_allowed_features\": 0,\n                    \"explicitly_allowed_features\": 0,\n                    \"tableserver\": 0,\n                    \"root\": 0,\n                    \"session_timeout\": 60,\n                    \"session_autoclose\": 300,\n                    \"max_file_size\": 1099511627776,\n                    \"last_failure\": 0,\n                    \"last_failure_osd_epoch\": 0,\n                    \"compat\": {\n                        \"compat\": {},\n                        \"ro_compat\": {},\n                        \"incompat\": {\n                            \"feature_1\": \"base v0.20\",\n                            \"feature_2\": \"client writeable ranges\",\n                            \"feature_3\": \"default file layouts on dirs\",\n                            \"feature_4\": \"dir inode in separate object\",\n                            \"feature_5\": \"mds uses versioned encoding\",\n                            \"feature_6\": \"dirfrag is stored in omap\",\n                            \"feature_8\": \"no anchor table\",\n                            \"feature_9\": \"file layout v2\",\n                            \"feature_10\": \"snaprealm v2\"\n                        }\n                    },\n                    \"max_mds\": 1,\n                    \"in\": [\n                        0\n                    ],\n                    \"up\": {\n                        \"mds_0\": 4199\n                    },\n                    \"failed\": [],\n                    \"damaged\": [],\n                    \"stopped\": [],\n                    \"info\": {\n                        \"gid_4199\": {\n                            \"gid\": 4199,\n                            \"name\": \"b\",\n                            \"rank\": 0,\n                            \"incarnation\": 5,\n                            \"state_seq\": 3,\n                            \"addrs\": {\n                                \"addrvec\": [\n                                    {\n                                        \"type\": \"legacy\",\n                                        \"nonce\": 3943553598,\n                                        \"addr\": \"10.42.0.1:6814\"\n                                    }\n                                ]\n                            },\n                            \"standby_for_rank\": -1,\n                            \"standby_for_fscid\": -1,\n                            \"standby_for_name\": \"\",\n                            \"standby_replay\": false,\n                            \"export_targets\": [],\n                            \"features\": 4611087854031142911,\n                            \"state\": \"up:active\",\n                            \"addr\": \"10.42.0.1:6814/3943553598\"\n                        }\n                    },\n                    \"data_pools\": [\n                        2\n                    ],\n                    \"metadata_pool\": 1,\n                    \"enabled\": true,\n                    \"fs_name\": \"a\",\n                    \"balancer\": \"\",\n                    \"standby_count_wanted\": 1,\n                    \"created\": \"2019-01-08 09:59:09.734054\",\n                    \"modified\": \"2019-01-08 09:59:11.061797\",\n                    \"min_compat_client\": \"-1 (unspecified)\"\n                },\n                \"id\": 1\n            }\n        ]\n    },\n    \"osd_map\": {\n        \"epoch\": 40,\n        \"flags\": \"sortbitwise,recovery_deletes,purged_snapdirs\",\n        \"flags_num\": 1605632,\n        \"flags_set\": [\n            \"purged_snapdirs\",\n            \"recovery_deletes\",\n            \"sortbitwise\"\n        ],\n        \"crush_version\": 8,\n        \"full_ratio\": 0.9900000095367432,\n        \"backfillfull_ratio\": 0.9900000095367432,\n        \"nearfull_ratio\": 0.9900000095367432,\n        \"cluster_snapshot\": \"\",\n        \"pool_max\": 9,\n        \"max_osd\": 3,\n        \"require_min_compat_client\": \"jewel\",\n        \"min_compat_client\": \"jewel\",\n        \"require_osd_release\": \"nautilus\",\n        \"pools\": [\n            {\n                \"pool\": 1,\n                \"pool_name\": \"cephfs.a.meta\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"cephfs\": {\n                        \"metadata\": \"a\"\n                    }\n                },\n                \"create_time\": \"2019-01-08 09:59:08.509726\",\n                \"last_change\": \"15\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            },\n            {\n                \"pool\": 2,\n                \"pool_name\": \"cephfs.a.data\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"cephfs\": {\n                        \"data\": \"a\"\n                    }\n                },\n                \"create_time\": \"2019-01-08 09:59:09.169541\",\n                \"last_change\": \"16\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            },\n            {\n                \"pool\": 3,\n                \"pool_name\": \".rgw.root\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"rgw\": {}\n                },\n                \"create_time\": \"2019-01-08 09:59:11.058803\",\n                \"last_change\": \"17\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            },\n            {\n                \"pool\": 4,\n                \"pool_name\": \"default.rgw.control\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"rgw\": {}\n                },\n                \"create_time\": \"2019-01-08 09:59:12.762467\",\n                \"last_change\": \"19\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            },\n            {\n                \"pool\": 5,\n                \"pool_name\": \"default.rgw.meta\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"rgw\": {}\n                },\n                \"create_time\": \"2019-01-08 09:59:14.894627\",\n                \"last_change\": \"21\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            },\n            {\n                \"pool\": 6,\n                \"pool_name\": \"default.rgw.log\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"rgw\": {}\n                },\n                \"create_time\": \"2019-01-08 09:59:16.810709\",\n                \"last_change\": \"23\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            },\n            {\n                \"pool\": 7,\n                \"pool_name\": \"default.rgw.buckets.index\",\n                \"flags\": 1,\n                \"flags_names\": \"hashpspool\",\n                \"type\": 1,\n                \"size\": 3,\n                \"min_size\": 1,\n                \"crush_rule\": 0,\n                \"object_hash\": 2,\n                \"pg_autoscale_mode\": \"warn\",\n                \"pg_num\": 8,\n                \"pg_placement_num\": 8,\n                \"pg_placement_num_target\": 8,\n                \"pg_num_target\": 8,\n                \"pg_num_pending\": 8,\n                \"pg_num_dec_last_epoch_started\": 0,\n                \"pg_num_dec_last_epoch_clean\": 0,\n                \"auid\": 0,\n                \"snap_mode\": \"selfmanaged\",\n                \"snap_seq\": 0,\n                \"snap_epoch\": 0,\n                \"pool_snaps\": [],\n                \"quota_max_bytes\": 0,\n                \"quota_max_objects\": 0,\n                \"tiers\": [],\n                \"tier_of\": -1,\n                \"read_tier\": -1,\n                \"write_tier\": -1,\n                \"cache_mode\": \"none\",\n                \"target_max_bytes\": 0,\n                \"target_max_objects\": 0,\n                \"cache_target_dirty_ratio_micro\": 400000,\n                \"cache_target_dirty_high_ratio_micro\": 600000,\n                \"cache_target_full_ratio_micro\": 800000,\n                \"cache_min_flush_age\": 0,\n                \"cache_min_evict_age\": 0,\n                \"erasure_code_profile\": \"\",\n                \"hit_set_params\": {\n                    \"type\": \"none\"\n                },\n                \"hit_set_period\": 0,\n                \"hit_set_count\": 0,\n                \"use_gmt_hitset\": true,\n                \"min_read_recency_for_promote\": 0,\n                \"min_write_recency_for_promote\": 0,\n                \"hit_set_grade_decay_rate\": 0,\n                \"hit_set_search_last_n\": 0,\n                \"grade_table\": [],\n                \"stripe_width\": 0,\n                \"expected_num_objects\": 0,\n                \"fast_read\": false,\n                \"options\": {},\n                \"application_metadata\": {\n                    \"rgw\": {}\n                },\n                \"create_time\": \"2019-01-08 10:04:24.199696\",\n                \"last_change\": \"26\",\n                \"last_force_op_resend\": \"0\",\n                \"last_force_op_resend_prenautilus\": \"0\",\n                \"last_force_op_resend_preluminous\": \"0\",\n                \"removed_snaps\": \"[]\"\n            }\n        ],\n        \"osds\": [\n            {\n                \"osd\": 0,\n                \"up\": 1,\n                \"in\": 1,\n                \"weight\": 1,\n                \"primary_affinity\": 1,\n                \"last_clean_begin\": 0,\n                \"last_clean_end\": 0,\n                \"up_from\": 5,\n                \"up_thru\": 32,\n                \"down_at\": 0,\n                \"lost_at\": 0,\n                \"public_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20053,\n                            \"addr\": \"10.42.0.1:6801\"\n                        }\n                    ]\n                },\n                \"cluster_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20053,\n                            \"addr\": \"10.42.0.1:6802\"\n                        }\n                    ]\n                },\n                \"heartbeat_back_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20053,\n                            \"addr\": \"10.42.0.1:6804\"\n                        }\n                    ]\n                },\n                \"heartbeat_front_addr\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20053,\n                            \"addr\": \"10.42.0.1:6803\"\n                        }\n                    ]\n                },\n                \"state\": [\n                    \"exists\",\n                    \"up\"\n                ],\n                \"uuid\": \"7b5b350c-a54c-422a-bad6-e633706098f4\",\n                \"public_addr\": \"10.42.0.1:6801/20053\",\n                \"cluster_addr\": \"10.42.0.1:6802/20053\"\n            },\n            {\n                \"osd\": 1,\n                \"up\": 1,\n                \"in\": 1,\n                \"weight\": 1,\n                \"primary_affinity\": 1,\n                \"last_clean_begin\": 0,\n                \"last_clean_end\": 0,\n                \"up_from\": 8,\n                \"up_thru\": 32,\n                \"down_at\": 0,\n                \"lost_at\": 0,\n                \"public_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20362,\n                            \"addr\": \"10.42.0.1:6805\"\n                        }\n                    ]\n                },\n                \"cluster_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20362,\n                            \"addr\": \"10.42.0.1:6806\"\n                        }\n                    ]\n                },\n                \"heartbeat_back_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20362,\n                            \"addr\": \"10.42.0.1:6808\"\n                        }\n                    ]\n                },\n                \"heartbeat_front_addr\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20362,\n                            \"addr\": \"10.42.0.1:6807\"\n                        }\n                    ]\n                },\n                \"state\": [\n                    \"exists\",\n                    \"up\"\n                ],\n                \"uuid\": \"a802eca8-74af-4675-9484-281922bda5f7\",\n                \"public_addr\": \"10.42.0.1:6805/20362\",\n                \"cluster_addr\": \"10.42.0.1:6806/20362\"\n            },\n            {\n                \"osd\": 2,\n                \"up\": 1,\n                \"in\": 1,\n                \"weight\": 1,\n                \"primary_affinity\": 1,\n                \"last_clean_begin\": 0,\n                \"last_clean_end\": 0,\n                \"up_from\": 11,\n                \"up_thru\": 32,\n                \"down_at\": 0,\n                \"lost_at\": 0,\n                \"public_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20671,\n                            \"addr\": \"10.42.0.1:6809\"\n                        }\n                    ]\n                },\n                \"cluster_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20671,\n                            \"addr\": \"10.42.0.1:6810\"\n                        }\n                    ]\n                },\n                \"heartbeat_back_addrs\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20671,\n                            \"addr\": \"10.42.0.1:6812\"\n                        }\n                    ]\n                },\n                \"heartbeat_front_addr\": {\n                    \"addrvec\": [\n                        {\n                            \"type\": \"legacy\",\n                            \"nonce\": 20671,\n                            \"addr\": \"10.42.0.1:6811\"\n                        }\n                    ]\n                },\n                \"state\": [\n                    \"exists\",\n                    \"up\"\n                ],\n                \"uuid\": \"e40da83e-bd3f-4bb5-a4e4-15c04b5763ab\",\n                \"public_addr\": \"10.42.0.1:6809/20671\",\n                \"cluster_addr\": \"10.42.0.1:6810/20671\"\n            }\n        ],\n        \"osd_xinfo\": [\n            {\n                \"osd\": 0,\n                \"laggy_probability\": 0,\n                \"laggy_interval\": 0,\n                \"features\": 4611087854031142911,\n                \"old_weight\": 0,\n                \"down_stamp\": \"0.000000\"\n            },\n            {\n                \"osd\": 1,\n                \"laggy_probability\": 0,\n                \"laggy_interval\": 0,\n                \"features\": 4611087854031142911,\n                \"old_weight\": 0,\n                \"down_stamp\": \"0.000000\"\n            },\n            {\n                \"osd\": 2,\n                \"laggy_probability\": 0,\n                \"laggy_interval\": 0,\n                \"features\": 4611087854031142911,\n                \"old_weight\": 0,\n                \"down_stamp\": \"0.000000\"\n            }\n        ],\n        \"pg_upmap\": [],\n        \"pg_upmap_items\": [],\n        \"primary_temp\": [],\n        \"blacklist\": {},\n        \"erasure_code_profiles\": {\n            \"default\": {\n                \"crush-failure-domain\": \"osd\",\n                \"k\": \"2\",\n                \"m\": \"1\",\n                \"plugin\": \"jerasure\",\n                \"technique\": \"reed_sol_van\"\n            }\n        },\n        \"removed_snaps_queue\": [],\n        \"new_removed_snaps\": [],\n        \"new_purged_snaps\": [],\n        \"fsid\": \"9689695c-3039-4e2d-8b19-242461a98898\",\n        \"created\": \"2019-01-08 09:58:28.559356\",\n        \"modified\": \"2019-01-08 10:08:43.994908\",\n        \"last_up_change\": \"2019-01-08 09:59:01.620790\",\n        \"last_in_change\": \"2019-01-08 09:59:01.620790\",\n        \"tree\": {\n            \"nodes\": [\n                {\n                    \"id\": -1,\n                    \"name\": \"default\",\n                    \"type\": \"root\",\n                    \"type_id\": 10,\n                    \"children\": [\n                        -3\n                    ]\n                },\n                {\n                    \"id\": -3,\n                    \"name\": \"ceph-dev\",\n                    \"type\": \"host\",\n                    \"type_id\": 1,\n                    \"pool_weights\": {},\n                    \"children\": [\n                        2,\n                        1,\n                        0\n                    ]\n                },\n                {\n                    \"id\": 0,\n                    \"device_class\": \"hdd\",\n                    \"type\": \"osd\",\n                    \"type_id\": 0,\n                    \"crush_weight\": 0.009796142578125,\n                    \"depth\": 2,\n                    \"pool_weights\": {},\n                    \"exists\": 1,\n                    \"status\": \"up\",\n                    \"reweight\": 1,\n                    \"primary_affinity\": 1,\n                    \"name\": \"osd.0\"\n                },\n                {\n                    \"id\": 1,\n                    \"device_class\": \"hdd\",\n                    \"type\": \"osd\",\n                    \"type_id\": 0,\n                    \"crush_weight\": 0.009796142578125,\n                    \"depth\": 2,\n                    \"pool_weights\": {},\n                    \"exists\": 1,\n                    \"status\": \"up\",\n                    \"reweight\": 1,\n                    \"primary_affinity\": 1,\n                    \"name\": \"osd.1\"\n                },\n                {\n                    \"id\": 2,\n                    \"device_class\": \"hdd\",\n                    \"type\": \"osd\",\n                    \"type_id\": 0,\n                    \"crush_weight\": 0.009796142578125,\n                    \"depth\": 2,\n                    \"pool_weights\": {},\n                    \"exists\": 1,\n                    \"status\": \"up\",\n                    \"reweight\": 1,\n                    \"primary_affinity\": 1,\n                    \"name\": \"osd.2\"\n                }\n            ],\n            \"stray\": []\n        },\n        \"crush\": {\n            \"devices\": [\n                {\n                    \"id\": 0,\n                    \"name\": \"osd.0\",\n                    \"class\": \"hdd\"\n                },\n                {\n                    \"id\": 1,\n                    \"name\": \"osd.1\",\n                    \"class\": \"hdd\"\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"osd.2\",\n                    \"class\": \"hdd\"\n                }\n            ],\n            \"types\": [\n                {\n                    \"type_id\": 0,\n                    \"name\": \"osd\"\n                },\n                {\n                    \"type_id\": 1,\n                    \"name\": \"host\"\n                },\n                {\n                    \"type_id\": 2,\n                    \"name\": \"chassis\"\n                },\n                {\n                    \"type_id\": 3,\n                    \"name\": \"rack\"\n                },\n                {\n                    \"type_id\": 4,\n                    \"name\": \"row\"\n                },\n                {\n                    \"type_id\": 5,\n                    \"name\": \"pdu\"\n                },\n                {\n                    \"type_id\": 6,\n                    \"name\": \"pod\"\n                },\n                {\n                    \"type_id\": 7,\n                    \"name\": \"room\"\n                },\n                {\n                    \"type_id\": 8,\n                    \"name\": \"datacenter\"\n                },\n                {\n                    \"type_id\": 9,\n                    \"name\": \"region\"\n                },\n                {\n                    \"type_id\": 10,\n                    \"name\": \"root\"\n                }\n            ],\n            \"buckets\": [\n                {\n                    \"id\": -1,\n                    \"name\": \"default\",\n                    \"type_id\": 10,\n                    \"type_name\": \"root\",\n                    \"weight\": 1926,\n                    \"alg\": \"straw2\",\n                    \"hash\": \"rjenkins1\",\n                    \"items\": [\n                        {\n                            \"id\": -3,\n                            \"weight\": 1926,\n                            \"pos\": 0\n                        }\n                    ]\n                },\n                {\n                    \"id\": -2,\n                    \"name\": \"default~hdd\",\n                    \"type_id\": 10,\n                    \"type_name\": \"root\",\n                    \"weight\": 1926,\n                    \"alg\": \"straw2\",\n                    \"hash\": \"rjenkins1\",\n                    \"items\": [\n                        {\n                            \"id\": -4,\n                            \"weight\": 1926,\n                            \"pos\": 0\n                        }\n                    ]\n                },\n                {\n                    \"id\": -3,\n                    \"name\": \"ceph-dev\",\n                    \"type_id\": 1,\n                    \"type_name\": \"host\",\n                    \"weight\": 1926,\n                    \"alg\": \"straw2\",\n                    \"hash\": \"rjenkins1\",\n                    \"items\": [\n                        {\n                            \"id\": 0,\n                            \"weight\": 642,\n                            \"pos\": 0\n                        },\n                        {\n                            \"id\": 1,\n                            \"weight\": 642,\n                            \"pos\": 1\n                        },\n                        {\n                            \"id\": 2,\n                            \"weight\": 642,\n                            \"pos\": 2\n                        }\n                    ]\n                },\n                {\n                    \"id\": -4,\n                    \"name\": \"ceph-dev~hdd\",\n                    \"type_id\": 1,\n                    \"type_name\": \"host\",\n                    \"weight\": 1926,\n                    \"alg\": \"straw2\",\n                    \"hash\": \"rjenkins1\",\n                    \"items\": [\n                        {\n                            \"id\": 0,\n                            \"weight\": 642,\n                            \"pos\": 0\n                        },\n                        {\n                            \"id\": 1,\n                            \"weight\": 642,\n                            \"pos\": 1\n                        },\n                        {\n                            \"id\": 2,\n                            \"weight\": 642,\n                            \"pos\": 2\n                        }\n                    ]\n                }\n            ],\n            \"rules\": [\n                {\n                    \"rule_id\": 0,\n                    \"rule_name\": \"replicated_rule\",\n                    \"ruleset\": 0,\n                    \"type\": 1,\n                    \"min_size\": 1,\n                    \"max_size\": 10,\n                    \"steps\": [\n                        {\n                            \"op\": \"take\",\n                            \"item\": -1,\n                            \"item_name\": \"default\"\n                        },\n                        {\n                            \"op\": \"choose_firstn\",\n                            \"num\": 0,\n                            \"type\": \"osd\"\n                        },\n                        {\n                            \"op\": \"emit\"\n                        }\n                    ]\n                },\n                {\n                    \"rule_id\": 1,\n                    \"rule_name\": \"erasure-code\",\n                    \"ruleset\": 1,\n                    \"type\": 3,\n                    \"min_size\": 3,\n                    \"max_size\": 3,\n                    \"steps\": [\n                        {\n                            \"op\": \"set_chooseleaf_tries\",\n                            \"num\": 5\n                        },\n                        {\n                            \"op\": \"set_choose_tries\",\n                            \"num\": 100\n                        },\n                        {\n                            \"op\": \"take\",\n                            \"item\": -1,\n                            \"item_name\": \"default\"\n                        },\n                        {\n                            \"op\": \"choose_indep\",\n                            \"num\": 0,\n                            \"type\": \"osd\"\n                        },\n                        {\n                            \"op\": \"emit\"\n                        }\n                    ]\n                }\n            ],\n            \"tunables\": {\n                \"choose_local_tries\": 0,\n                \"choose_local_fallback_tries\": 0,\n                \"choose_total_tries\": 50,\n                \"chooseleaf_descend_once\": 1,\n                \"chooseleaf_vary_r\": 1,\n                \"chooseleaf_stable\": 1,\n                \"straw_calc_version\": 1,\n                \"allowed_bucket_algs\": 54,\n                \"profile\": \"jewel\",\n                \"optimal_tunables\": 1,\n                \"legacy_tunables\": 0,\n                \"minimum_required_version\": \"jewel\",\n                \"require_feature_tunables\": 1,\n                \"require_feature_tunables2\": 1,\n                \"has_v2_rules\": 1,\n                \"require_feature_tunables3\": 1,\n                \"has_v3_rules\": 0,\n                \"has_v4_buckets\": 1,\n                \"require_feature_tunables5\": 1,\n                \"has_v5_rules\": 0\n            },\n            \"choose_args\": {}\n        },\n        \"crush_map_text\": {},\n        \"osd_metadata\": {\n            \"0\": {\n                \"hostname\": \"ceph-dev\",\n                \"arch\": \"x86_64\",\n                \"back_addr\": \"10.42.0.1:6802/20053\",\n                \"back_iface\": \"wlan0\",\n                \"bluefs\": \"1\",\n                \"bluefs_db_access_mode\": \"file\",\n                \"bluefs_db_block_size\": \"4096\",\n                \"bluefs_db_driver\": \"KernelDevice\",\n                \"bluefs_db_path\": \"/ceph/build/dev/osd0/block.db\",\n                \"bluefs_db_rotational\": \"1\",\n                \"bluefs_db_size\": \"67108864\",\n                \"bluefs_db_support_discard\": \"0\",\n                \"bluefs_db_type\": \"hdd\",\n                \"bluefs_single_shared_device\": \"0\",\n                \"bluefs_wal_access_mode\": \"file\",\n                \"bluefs_wal_block_size\": \"4096\",\n                \"bluefs_wal_driver\": \"KernelDevice\",\n                \"bluefs_wal_path\": \"/ceph/build/dev/osd0/block.wal\",\n                \"bluefs_wal_rotational\": \"1\",\n                \"bluefs_wal_size\": \"1048576000\",\n                \"bluefs_wal_support_discard\": \"0\",\n                \"bluefs_wal_type\": \"hdd\",\n                \"bluestore_bdev_access_mode\": \"file\",\n                \"bluestore_bdev_block_size\": \"4096\",\n                \"bluestore_bdev_driver\": \"KernelDevice\",\n                \"bluestore_bdev_path\": \"/ceph/build/dev/osd0/block\",\n                \"bluestore_bdev_rotational\": \"1\",\n                \"bluestore_bdev_size\": \"10737418240\",\n                \"bluestore_bdev_support_discard\": \"0\",\n                \"bluestore_bdev_type\": \"hdd\",\n                \"ceph_release\": \"nautilus\",\n                \"ceph_version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n                \"ceph_version_short\": \"14.0.1-2176-g41d266b9b9\",\n                \"cpu\": \"Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz\",\n                \"default_device_class\": \"hdd\",\n                \"device_ids\": \"\",\n                \"devices\": \"\",\n                \"distro\": \"opensuse-tumbleweed\",\n                \"distro_description\": \"openSUSE Tumbleweed\",\n                \"distro_version\": \"20181224\",\n                \"front_addr\": \"10.42.0.1:6801/20053\",\n                \"front_iface\": \"wlan0\",\n                \"hb_back_addr\": \"10.42.0.1:6804/20053\",\n                \"hb_front_addr\": \"10.42.0.1:6803/20053\",\n                \"journal_rotational\": \"1\",\n                \"kernel_description\": \"#1 SMP Mon Dec 3 16:46:15 UTC 2018 (b91289f)\",\n                \"kernel_version\": \"4.12.14-lp150.12.28-default\",\n                \"mem_swap_kb\": \"0\",\n                \"mem_total_kb\": \"11982896\",\n                \"os\": \"Linux\",\n                \"osd_data\": \"/ceph/build/dev/osd0\",\n                \"osd_objectstore\": \"bluestore\",\n                \"rotational\": \"1\"\n            },\n            \"1\": {\n                \"hostname\": \"ceph-dev\",\n                \"arch\": \"x86_64\",\n                \"back_addr\": \"10.42.0.1:6806/20362\",\n                \"back_iface\": \"wlan0\",\n                \"bluefs\": \"1\",\n                \"bluefs_db_access_mode\": \"file\",\n                \"bluefs_db_block_size\": \"4096\",\n                \"bluefs_db_driver\": \"KernelDevice\",\n                \"bluefs_db_path\": \"/ceph/build/dev/osd1/block.db\",\n                \"bluefs_db_rotational\": \"1\",\n                \"bluefs_db_size\": \"67108864\",\n                \"bluefs_db_support_discard\": \"0\",\n                \"bluefs_db_type\": \"hdd\",\n                \"bluefs_single_shared_device\": \"0\",\n                \"bluefs_wal_access_mode\": \"file\",\n                \"bluefs_wal_block_size\": \"4096\",\n                \"bluefs_wal_driver\": \"KernelDevice\",\n                \"bluefs_wal_path\": \"/ceph/build/dev/osd1/block.wal\",\n                \"bluefs_wal_rotational\": \"1\",\n                \"bluefs_wal_size\": \"1048576000\",\n                \"bluefs_wal_support_discard\": \"0\",\n                \"bluefs_wal_type\": \"hdd\",\n                \"bluestore_bdev_access_mode\": \"file\",\n                \"bluestore_bdev_block_size\": \"4096\",\n                \"bluestore_bdev_driver\": \"KernelDevice\",\n                \"bluestore_bdev_path\": \"/ceph/build/dev/osd1/block\",\n                \"bluestore_bdev_rotational\": \"1\",\n                \"bluestore_bdev_size\": \"10737418240\",\n                \"bluestore_bdev_support_discard\": \"0\",\n                \"bluestore_bdev_type\": \"hdd\",\n                \"ceph_release\": \"nautilus\",\n                \"ceph_version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n                \"ceph_version_short\": \"14.0.1-2176-g41d266b9b9\",\n                \"cpu\": \"Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz\",\n                \"default_device_class\": \"hdd\",\n                \"device_ids\": \"\",\n                \"devices\": \"\",\n                \"distro\": \"opensuse-tumbleweed\",\n                \"distro_description\": \"openSUSE Tumbleweed\",\n                \"distro_version\": \"20181224\",\n                \"front_addr\": \"10.42.0.1:6805/20362\",\n                \"front_iface\": \"wlan0\",\n                \"hb_back_addr\": \"10.42.0.1:6808/20362\",\n                \"hb_front_addr\": \"10.42.0.1:6807/20362\",\n                \"journal_rotational\": \"1\",\n                \"kernel_description\": \"#1 SMP Mon Dec 3 16:46:15 UTC 2018 (b91289f)\",\n                \"kernel_version\": \"4.12.14-lp150.12.28-default\",\n                \"mem_swap_kb\": \"0\",\n                \"mem_total_kb\": \"11982896\",\n                \"os\": \"Linux\",\n                \"osd_data\": \"/ceph/build/dev/osd1\",\n                \"osd_objectstore\": \"bluestore\",\n                \"rotational\": \"1\"\n            },\n            \"2\": {\n                \"hostname\": \"ceph-dev\",\n                \"arch\": \"x86_64\",\n                \"back_addr\": \"10.42.0.1:6810/20671\",\n                \"back_iface\": \"wlan0\",\n                \"bluefs\": \"1\",\n                \"bluefs_db_access_mode\": \"file\",\n                \"bluefs_db_block_size\": \"4096\",\n                \"bluefs_db_driver\": \"KernelDevice\",\n                \"bluefs_db_path\": \"/ceph/build/dev/osd2/block.db\",\n                \"bluefs_db_rotational\": \"1\",\n                \"bluefs_db_size\": \"67108864\",\n                \"bluefs_db_support_discard\": \"0\",\n                \"bluefs_db_type\": \"hdd\",\n                \"bluefs_single_shared_device\": \"0\",\n                \"bluefs_wal_access_mode\": \"file\",\n                \"bluefs_wal_block_size\": \"4096\",\n                \"bluefs_wal_driver\": \"KernelDevice\",\n                \"bluefs_wal_path\": \"/ceph/build/dev/osd2/block.wal\",\n                \"bluefs_wal_rotational\": \"1\",\n                \"bluefs_wal_size\": \"1048576000\",\n                \"bluefs_wal_support_discard\": \"0\",\n                \"bluefs_wal_type\": \"hdd\",\n                \"bluestore_bdev_access_mode\": \"file\",\n                \"bluestore_bdev_block_size\": \"4096\",\n                \"bluestore_bdev_driver\": \"KernelDevice\",\n                \"bluestore_bdev_path\": \"/ceph/build/dev/osd2/block\",\n                \"bluestore_bdev_rotational\": \"1\",\n                \"bluestore_bdev_size\": \"10737418240\",\n                \"bluestore_bdev_support_discard\": \"0\",\n                \"bluestore_bdev_type\": \"hdd\",\n                \"ceph_release\": \"nautilus\",\n                \"ceph_version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n                \"ceph_version_short\": \"14.0.1-2176-g41d266b9b9\",\n                \"cpu\": \"Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz\",\n                \"default_device_class\": \"hdd\",\n                \"device_ids\": \"\",\n                \"devices\": \"\",\n                \"distro\": \"opensuse-tumbleweed\",\n                \"distro_description\": \"openSUSE Tumbleweed\",\n                \"distro_version\": \"20181224\",\n                \"front_addr\": \"10.42.0.1:6809/20671\",\n                \"front_iface\": \"wlan0\",\n                \"hb_back_addr\": \"10.42.0.1:6812/20671\",\n                \"hb_front_addr\": \"10.42.0.1:6811/20671\",\n                \"journal_rotational\": \"1\",\n                \"kernel_description\": \"#1 SMP Mon Dec 3 16:46:15 UTC 2018 (b91289f)\",\n                \"kernel_version\": \"4.12.14-lp150.12.28-default\",\n                \"mem_swap_kb\": \"0\",\n                \"mem_total_kb\": \"11982896\",\n                \"os\": \"Linux\",\n                \"osd_data\": \"/ceph/build/dev/osd2\",\n                \"osd_objectstore\": \"bluestore\",\n                \"rotational\": \"1\"\n            }\n        }\n    },\n    \"scrub_status\": \"Inactive\",\n    \"pg_info\": {\n        \"statuses\": {\n            \"active+clean\": 56\n        },\n        \"pgs_per_osd\": 56\n    },\n    \"mgr_map\": {\n        \"epoch\": 5,\n        \"active_gid\": 4110,\n        \"active_name\": \"x\",\n        \"active_addrs\": {\n            \"addrvec\": [\n                {\n                    \"type\": \"legacy\",\n                    \"nonce\": 19673,\n                    \"addr\": \"10.42.0.1:6800\"\n                }\n            ]\n        },\n        \"available\": true,\n        \"standbys\": [],\n        \"modules\": [\n            \"dashboard\",\n            \"iostat\",\n            \"restful\"\n        ],\n        \"available_modules\": [\n            {\n                \"name\": \"ansible\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"balancer\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"active\": {\n                        \"name\": \"active\",\n                        \"type\": \"bool\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"False\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"automatically balance PGs across cluster\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"begin_time\": {\n                        \"name\": \"begin_time\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"0000\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"beginning time of day to automatically balance\",\n                        \"long_desc\": \"This is a time of day in the format HHMM.\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"crush_compat_max_iterations\": {\n                        \"name\": \"crush_compat_max_iterations\",\n                        \"type\": \"uint\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"25\",\n                        \"min\": \"1\",\n                        \"max\": \"250\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"maximum number of iterations to attempt optimization\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"crush_compat_metrics\": {\n                        \"name\": \"crush_compat_metrics\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"pgs,objects,bytes\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"metrics with which to calculate OSD utilization\",\n                        \"long_desc\": \"Value is a list of one or more of \\\"pgs\\\", \\\"objects\\\", or \\\"bytes\\\", and indicates which metrics to use to balance utilization.\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"crush_compat_step\": {\n                        \"name\": \"crush_compat_step\",\n                        \"type\": \"float\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"0.5\",\n                        \"min\": \".001\",\n                        \"max\": \".999\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"aggressiveness of optimization\",\n                        \"long_desc\": \".99 is very aggressive, .01 is less aggressive\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"end_time\": {\n                        \"name\": \"end_time\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"2400\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"ending time of day to automatically balance\",\n                        \"long_desc\": \"This is a time of day in the format HHMM.\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"min_score\": {\n                        \"name\": \"min_score\",\n                        \"type\": \"float\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"0\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"minimum score, below which no optimization is attempted\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"mode\": {\n                        \"name\": \"mode\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"none\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [\n                            \"crush-compat\",\n                            \"none\",\n                            \"upmap\"\n                        ],\n                        \"desc\": \"Balancer mode\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"sleep_interval\": {\n                        \"name\": \"sleep_interval\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"60\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"how frequently to wake up and attempt optimization\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"upmap_max_deviation\": {\n                        \"name\": \"upmap_max_deviation\",\n                        \"type\": \"float\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"0.01\",\n                        \"min\": \"0\",\n                        \"max\": \"1\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"deviation below which no optimization is attempted\",\n                        \"long_desc\": \"If the ratio between the fullest and least-full OSD is below this value then we stop trying to optimize placement.\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"upmap_max_iterations\": {\n                        \"name\": \"upmap_max_iterations\",\n                        \"type\": \"uint\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"10\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"maximum upmap optimization iterations\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"crash\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"dashboard\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"AUDIT_API_ENABLED\": {\n                        \"name\": \"AUDIT_API_ENABLED\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"False\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"AUDIT_API_LOG_PAYLOAD\": {\n                        \"name\": \"AUDIT_API_LOG_PAYLOAD\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"True\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"ENABLE_BROWSABLE_API\": {\n                        \"name\": \"ENABLE_BROWSABLE_API\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"True\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"GRAFANA_API_PASSWORD\": {\n                        \"name\": \"GRAFANA_API_PASSWORD\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"admin\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"GRAFANA_API_URL\": {\n                        \"name\": \"GRAFANA_API_URL\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"GRAFANA_API_USERNAME\": {\n                        \"name\": \"GRAFANA_API_USERNAME\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"admin\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"REST_REQUESTS_TIMEOUT\": {\n                        \"name\": \"REST_REQUESTS_TIMEOUT\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"45\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_ACCESS_KEY\": {\n                        \"name\": \"RGW_API_ACCESS_KEY\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_ADMIN_RESOURCE\": {\n                        \"name\": \"RGW_API_ADMIN_RESOURCE\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"admin\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_HOST\": {\n                        \"name\": \"RGW_API_HOST\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_PORT\": {\n                        \"name\": \"RGW_API_PORT\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"80\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_SCHEME\": {\n                        \"name\": \"RGW_API_SCHEME\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"http\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_SECRET_KEY\": {\n                        \"name\": \"RGW_API_SECRET_KEY\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_SSL_VERIFY\": {\n                        \"name\": \"RGW_API_SSL_VERIFY\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"True\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"RGW_API_USER_ID\": {\n                        \"name\": \"RGW_API_USER_ID\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"crt_file\": {\n                        \"name\": \"crt_file\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"jwt_token_ttl\": {\n                        \"name\": \"jwt_token_ttl\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"key_file\": {\n                        \"name\": \"key_file\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"password\": {\n                        \"name\": \"password\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"server_addr\": {\n                        \"name\": \"server_addr\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"server_port\": {\n                        \"name\": \"server_port\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"ssl\": {\n                        \"name\": \"ssl\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"url_prefix\": {\n                        \"name\": \"url_prefix\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"username\": {\n                        \"name\": \"username\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"deepsea\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"salt_api_eauth\": {\n                        \"name\": \"salt_api_eauth\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"sharedsecret\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"salt_api_password\": {\n                        \"name\": \"salt_api_password\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"salt_api_url\": {\n                        \"name\": \"salt_api_url\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"salt_api_username\": {\n                        \"name\": \"salt_api_username\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"devicehealth\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"enable_monitoring\": {\n                        \"name\": \"enable_monitoring\",\n                        \"type\": \"bool\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"False\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"monitor device health metrics\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"mark_out_threshold\": {\n                        \"name\": \"mark_out_threshold\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"2419200\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"automatically mark OSD if it may fail before this long\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"pool_name\": {\n                        \"name\": \"pool_name\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"device_health_metrics\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"name of pool in which to store device health metrics\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"retention_period\": {\n                        \"name\": \"retention_period\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"15552000\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"how long to retain device health metrics\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"scrape_frequency\": {\n                        \"name\": \"scrape_frequency\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"86400\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"how frequently to scrape device health metrics\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"self_heal\": {\n                        \"name\": \"self_heal\",\n                        \"type\": \"bool\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"True\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"preemptively heal cluster around devices that may fail\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"sleep_interval\": {\n                        \"name\": \"sleep_interval\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"600\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"how frequently to wake up and check device health\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"warn_threshold\": {\n                        \"name\": \"warn_threshold\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"7257600\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"raise health warning if OSD may fail before this long\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"diskprediction_cloud\",\n                \"can_run\": false,\n                \"error_string\": \"cannot import name 'maketrans'\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"diskprediction_local\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"predict_interval\": {\n                        \"name\": \"predict_interval\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"86400\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"sleep_interval\": {\n                        \"name\": \"sleep_interval\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"600\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"hello\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"emphatic\": {\n                        \"name\": \"emphatic\",\n                        \"type\": \"bool\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"True\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"place\": {\n                        \"name\": \"place\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"world\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"influx\",\n                \"can_run\": false,\n                \"error_string\": \"influxdb python module not found\",\n                \"module_options\": {\n                    \"batch_size\": {\n                        \"name\": \"batch_size\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"5000\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"database\": {\n                        \"name\": \"database\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"ceph\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"hostname\": {\n                        \"name\": \"hostname\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"interval\": {\n                        \"name\": \"interval\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"30\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"password\": {\n                        \"name\": \"password\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"port\": {\n                        \"name\": \"port\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"8086\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"ssl\": {\n                        \"name\": \"ssl\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"false\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"threads\": {\n                        \"name\": \"threads\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"5\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"username\": {\n                        \"name\": \"username\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"verify_ssl\": {\n                        \"name\": \"verify_ssl\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"true\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"insights\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"iostat\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"localpool\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"failure_domain\": {\n                        \"name\": \"failure_domain\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"host\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"failure domain for any created local pool\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"min_size\": {\n                        \"name\": \"min_size\",\n                        \"type\": \"int\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"default min_size for any created local pool\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"num_rep\": {\n                        \"name\": \"num_rep\",\n                        \"type\": \"int\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"3\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"default replica count for any created local pool\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"pg_num\": {\n                        \"name\": \"pg_num\",\n                        \"type\": \"int\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"128\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"default pg_num for any created local pool\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"prefix\": {\n                        \"name\": \"prefix\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"name prefix for any created local pool\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"subtree\": {\n                        \"name\": \"subtree\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 1,\n                        \"default_value\": \"rack\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"CRUSH level for which to create a local pool\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"orchestrator_cli\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"orchestrator\": {\n                        \"name\": \"orchestrator\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"osd_perf_query\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"pg_autoscaler\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"sleep_interval\": {\n                        \"name\": \"sleep_interval\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"60\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"progress\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"prometheus\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"rbd_stats_pools\": {\n                        \"name\": \"rbd_stats_pools\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"rbd_stats_pools_refresh_interval\": {\n                        \"name\": \"rbd_stats_pools_refresh_interval\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"scrape_interval\": {\n                        \"name\": \"scrape_interval\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"server_addr\": {\n                        \"name\": \"server_addr\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"server_port\": {\n                        \"name\": \"server_port\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"restful\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"key_file\": {\n                        \"name\": \"key_file\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"server_addr\": {\n                        \"name\": \"server_addr\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"server_port\": {\n                        \"name\": \"server_port\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"rook\",\n                \"can_run\": false,\n                \"error_string\": \"`kubernetes` python module not found\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"selftest\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"testkey\": {\n                        \"name\": \"testkey\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"testlkey\": {\n                        \"name\": \"testlkey\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"testnewline\": {\n                        \"name\": \"testnewline\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"smart\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"status\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"telegraf\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"address\": {\n                        \"name\": \"address\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"unixgram:///tmp/telegraf.sock\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"interval\": {\n                        \"name\": \"interval\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"15\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"telemetry\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"contact\": {\n                        \"name\": \"contact\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"description\": {\n                        \"name\": \"description\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"enabled\": {\n                        \"name\": \"enabled\",\n                        \"type\": \"bool\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"True\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"interval\": {\n                        \"name\": \"interval\",\n                        \"type\": \"int\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"72\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"leaderboard\": {\n                        \"name\": \"leaderboard\",\n                        \"type\": \"bool\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"False\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"organization\": {\n                        \"name\": \"organization\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"proxy\": {\n                        \"name\": \"proxy\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"url\": {\n                        \"name\": \"url\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"https://telemetry.ceph.com/report\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            },\n            {\n                \"name\": \"test_orchestrator\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"volumes\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {}\n            },\n            {\n                \"name\": \"zabbix\",\n                \"can_run\": true,\n                \"error_string\": \"\",\n                \"module_options\": {\n                    \"identifier\": {\n                        \"name\": \"identifier\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"interval\": {\n                        \"name\": \"interval\",\n                        \"type\": \"secs\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"60\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"zabbix_host\": {\n                        \"name\": \"zabbix_host\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"None\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"zabbix_port\": {\n                        \"name\": \"zabbix_port\",\n                        \"type\": \"int\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"10051\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    },\n                    \"zabbix_sender\": {\n                        \"name\": \"zabbix_sender\",\n                        \"type\": \"str\",\n                        \"level\": \"advanced\",\n                        \"flags\": 0,\n                        \"default_value\": \"/usr/bin/zabbix_sender\",\n                        \"min\": \"\",\n                        \"max\": \"\",\n                        \"enum_allowed\": [],\n                        \"desc\": \"\",\n                        \"long_desc\": \"\",\n                        \"tags\": [],\n                        \"see_also\": []\n                    }\n                }\n            }\n        ],\n        \"services\": {\n            \"dashboard\": \"https://localhost:41931/\",\n            \"restful\": \"https://ceph-dev:42931/\"\n        },\n        \"always_on_modules\": {\n            \"nautilus\": [\n                \"balancer\",\n                \"crash\",\n                \"devicehealth\",\n                \"progress\",\n                \"status\",\n                \"volumes\"\n            ]\n        },\n        \"active_change\": \"2019-01-08 09:58:33.636896\"\n    },\n    \"pools\": [\n        {\n            \"pool\": 1,\n            \"pool_name\": \"cephfs.a.meta\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"cephfs\": {\n                    \"metadata\": \"a\"\n                }\n            },\n            \"create_time\": \"2019-01-08 09:59:08.509726\",\n            \"last_change\": \"15\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 2286,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            2286\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 22,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            22\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 1536,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            1536\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 1572864,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            1572864\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0.000054907210142118856,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0.000054907210142118856\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 22,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            22\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 45,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            45\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 13312,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            13312\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 6858,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            6858\n                        ]\n                    ]\n                }\n            }\n        },\n        {\n            \"pool\": 2,\n            \"pool_name\": \"cephfs.a.data\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"cephfs\": {\n                    \"data\": \"a\"\n                }\n            },\n            \"create_time\": \"2019-01-08 09:59:09.169541\",\n            \"last_change\": \"16\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                }\n            }\n        },\n        {\n            \"pool\": 3,\n            \"pool_name\": \".rgw.root\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"rgw\": {}\n            },\n            \"create_time\": \"2019-01-08 09:59:11.058803\",\n            \"last_change\": \"17\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 1173,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            1173\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 4,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            4\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 768,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            768\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 786432,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            786432\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0.000027454358132672496,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0.000027454358132672496\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 4,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            4\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 76,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            76\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 77824,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            77824\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 4,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            4\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 4096,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            4096\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 3519,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            3519\n                        ]\n                    ]\n                }\n            }\n        },\n        {\n            \"pool\": 4,\n            \"pool_name\": \"default.rgw.control\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"rgw\": {}\n            },\n            \"create_time\": \"2019-01-08 09:59:12.762467\",\n            \"last_change\": \"19\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 8,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            8\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 8,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            8\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                }\n            }\n        },\n        {\n            \"pool\": 5,\n            \"pool_name\": \"default.rgw.meta\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"rgw\": {}\n            },\n            \"create_time\": \"2019-01-08 09:59:14.894627\",\n            \"last_change\": \"21\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 3337,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            3337\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 20,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            20\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 3456,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            3456\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 3538944,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            3538944\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0.0001235327508766204,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0.0001235327508766204\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 20,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            20\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 35,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            35\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 31744,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            31744\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 65,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            65\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 28672,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            28672\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 10011,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            10011\n                        ]\n                    ]\n                }\n            }\n        },\n        {\n            \"pool\": 6,\n            \"pool_name\": \"default.rgw.log\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"rgw\": {}\n            },\n            \"create_time\": \"2019-01-08 09:59:16.810709\",\n            \"last_change\": \"23\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 175,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            175\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 175,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            175\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 954,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            954\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 797696,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            797696\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 636,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            636\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                }\n            }\n        },\n        {\n            \"pool\": 7,\n            \"pool_name\": \"default.rgw.buckets.index\",\n            \"flags\": 1,\n            \"flags_names\": \"hashpspool\",\n            \"type\": 1,\n            \"size\": 3,\n            \"min_size\": 1,\n            \"crush_rule\": 0,\n            \"object_hash\": 2,\n            \"pg_autoscale_mode\": \"warn\",\n            \"pg_num\": 8,\n            \"pg_placement_num\": 8,\n            \"pg_placement_num_target\": 8,\n            \"pg_num_target\": 8,\n            \"pg_num_pending\": 8,\n            \"pg_num_dec_last_epoch_started\": 0,\n            \"pg_num_dec_last_epoch_clean\": 0,\n            \"auid\": 0,\n            \"snap_mode\": \"selfmanaged\",\n            \"snap_seq\": 0,\n            \"snap_epoch\": 0,\n            \"pool_snaps\": [],\n            \"quota_max_bytes\": 0,\n            \"quota_max_objects\": 0,\n            \"tiers\": [],\n            \"tier_of\": -1,\n            \"read_tier\": -1,\n            \"write_tier\": -1,\n            \"cache_mode\": \"none\",\n            \"target_max_bytes\": 0,\n            \"target_max_objects\": 0,\n            \"cache_target_dirty_ratio_micro\": 400000,\n            \"cache_target_dirty_high_ratio_micro\": 600000,\n            \"cache_target_full_ratio_micro\": 800000,\n            \"cache_min_flush_age\": 0,\n            \"cache_min_evict_age\": 0,\n            \"erasure_code_profile\": \"\",\n            \"hit_set_params\": {\n                \"type\": \"none\"\n            },\n            \"hit_set_period\": 0,\n            \"hit_set_count\": 0,\n            \"use_gmt_hitset\": true,\n            \"min_read_recency_for_promote\": 0,\n            \"min_write_recency_for_promote\": 0,\n            \"hit_set_grade_decay_rate\": 0,\n            \"hit_set_search_last_n\": 0,\n            \"grade_table\": [],\n            \"stripe_width\": 0,\n            \"expected_num_objects\": 0,\n            \"fast_read\": false,\n            \"options\": {},\n            \"application_metadata\": {\n                \"rgw\": {}\n            },\n            \"create_time\": \"2019-01-08 10:04:24.199696\",\n            \"last_change\": \"26\",\n            \"last_force_op_resend\": \"0\",\n            \"last_force_op_resend_prenautilus\": \"0\",\n            \"last_force_op_resend_preluminous\": \"0\",\n            \"removed_snaps\": \"[]\",\n            \"pg_status\": {\n                \"active+clean\": 8\n            },\n            \"stats\": {\n                \"stored\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"kb_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"percent_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"max_avail\": {\n                    \"latest\": 9548094464,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            9548094464\n                        ]\n                    ]\n                },\n                \"quota_objects\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"quota_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"dirty\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"rd\": {\n                    \"latest\": 12,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            12\n                        ]\n                    ]\n                },\n                \"rd_bytes\": {\n                    \"latest\": 12288,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            12288\n                        ]\n                    ]\n                },\n                \"wr\": {\n                    \"latest\": 2,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            2\n                        ]\n                    ]\n                },\n                \"wr_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_bytes_used\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"compress_under_bytes\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                },\n                \"stored_raw\": {\n                    \"latest\": 0,\n                    \"rate\": 0,\n                    \"series\": [\n                        [\n                            1546942739.2251508,\n                            0\n                        ]\n                    ]\n                }\n            }\n        }\n    ],\n    \"df\": {\n        \"stats\": {\n            \"total_bytes\": 32413556736,\n            \"total_avail_bytes\": 28968419328,\n            \"total_used_bytes\": 223911936,\n            \"total_used_raw_bytes\": 3445137408,\n            \"total_used_raw_ratio\": 0.1062869280576706,\n            \"total_objects\": 229\n        },\n        \"pools\": [\n            {\n                \"name\": \"cephfs.a.meta\",\n                \"id\": 1,\n                \"stats\": {\n                    \"stored\": 2286,\n                    \"objects\": 22,\n                    \"kb_used\": 1536,\n                    \"bytes_used\": 1572864,\n                    \"percent_used\": 0.000054907210142118856,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 22,\n                    \"rd\": 0,\n                    \"rd_bytes\": 0,\n                    \"wr\": 45,\n                    \"wr_bytes\": 13312,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 6858\n                }\n            },\n            {\n                \"name\": \"cephfs.a.data\",\n                \"id\": 2,\n                \"stats\": {\n                    \"stored\": 0,\n                    \"objects\": 0,\n                    \"kb_used\": 0,\n                    \"bytes_used\": 0,\n                    \"percent_used\": 0,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 0,\n                    \"rd\": 0,\n                    \"rd_bytes\": 0,\n                    \"wr\": 0,\n                    \"wr_bytes\": 0,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 0\n                }\n            },\n            {\n                \"name\": \".rgw.root\",\n                \"id\": 3,\n                \"stats\": {\n                    \"stored\": 1173,\n                    \"objects\": 4,\n                    \"kb_used\": 768,\n                    \"bytes_used\": 786432,\n                    \"percent_used\": 0.000027454358132672496,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 4,\n                    \"rd\": 76,\n                    \"rd_bytes\": 77824,\n                    \"wr\": 4,\n                    \"wr_bytes\": 4096,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 3519\n                }\n            },\n            {\n                \"name\": \"default.rgw.control\",\n                \"id\": 4,\n                \"stats\": {\n                    \"stored\": 0,\n                    \"objects\": 8,\n                    \"kb_used\": 0,\n                    \"bytes_used\": 0,\n                    \"percent_used\": 0,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 8,\n                    \"rd\": 0,\n                    \"rd_bytes\": 0,\n                    \"wr\": 0,\n                    \"wr_bytes\": 0,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 0\n                }\n            },\n            {\n                \"name\": \"default.rgw.meta\",\n                \"id\": 5,\n                \"stats\": {\n                    \"stored\": 3337,\n                    \"objects\": 20,\n                    \"kb_used\": 3456,\n                    \"bytes_used\": 3538944,\n                    \"percent_used\": 0.0001235327508766204,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 20,\n                    \"rd\": 35,\n                    \"rd_bytes\": 31744,\n                    \"wr\": 65,\n                    \"wr_bytes\": 28672,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 10011\n                }\n            },\n            {\n                \"name\": \"default.rgw.log\",\n                \"id\": 6,\n                \"stats\": {\n                    \"stored\": 0,\n                    \"objects\": 175,\n                    \"kb_used\": 0,\n                    \"bytes_used\": 0,\n                    \"percent_used\": 0,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 175,\n                    \"rd\": 954,\n                    \"rd_bytes\": 797696,\n                    \"wr\": 636,\n                    \"wr_bytes\": 0,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 0\n                }\n            },\n            {\n                \"name\": \"default.rgw.buckets.index\",\n                \"id\": 7,\n                \"stats\": {\n                    \"stored\": 0,\n                    \"objects\": 0,\n                    \"kb_used\": 0,\n                    \"bytes_used\": 0,\n                    \"percent_used\": 0,\n                    \"max_avail\": 9548094464,\n                    \"quota_objects\": 0,\n                    \"quota_bytes\": 0,\n                    \"dirty\": 0,\n                    \"rd\": 12,\n                    \"rd_bytes\": 12288,\n                    \"wr\": 2,\n                    \"wr_bytes\": 0,\n                    \"compress_bytes_used\": 0,\n                    \"compress_under_bytes\": 0,\n                    \"stored_raw\": 0\n                }\n            }\n        ]\n    },\n    \"client_perf\": {\n        \"read_bytes_sec\": 0,\n        \"read_op_per_sec\": 0,\n        \"write_bytes_sec\": 0,\n        \"write_op_per_sec\": 0,\n        \"recovering_bytes_per_sec\": 0\n    },\n    \"hosts\": 1,\n    \"rgw\": 1,\n    \"iscsi_daemons\": 0\n}"
						}
					]
				}
			]
		},
		{
			"name": "rgw",
			"item": [
				{
					"name": "rgw status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/status",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"status"
							]
						}
					},
					"response": [
						{
							"name": "rgw status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/status",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:19:45 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "54"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"available\": true,\n    \"message\": null\n}"
						}
					]
				},
				{
					"name": "rgw daemons info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/daemon",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"daemon"
							]
						}
					},
					"response": [
						{
							"name": "rgw daemons info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/daemon",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"daemon"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:19:57 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "146"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"rgw\",\n        \"version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n        \"server_hostname\": \"ceph-dev\"\n    }\n]"
						}
					]
				},
				{
					"name": "rgw daemon detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/daemon/rgw",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"daemon",
								"rgw"
							]
						}
					},
					"response": [
						{
							"name": "rgw daemon detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/daemon/rgw",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"daemon",
										"rgw"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:20:08 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "531"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"rgw_metadata\": {\n        \"hostname\": \"ceph-dev\",\n        \"arch\": \"x86_64\",\n        \"ceph_release\": \"nautilus\",\n        \"ceph_version\": \"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\",\n        \"ceph_version_short\": \"14.0.1-2176-g41d266b9b9\",\n        \"cpu\": \"Intel(R) Core(TM) i5-5200U CPU @ 2.20GHz\",\n        \"distro\": \"opensuse-tumbleweed\",\n        \"distro_description\": \"openSUSE Tumbleweed\",\n        \"distro_version\": \"20181224\",\n        \"frontend_config#0\": \"civetweb port=8000\",\n        \"frontend_type#0\": \"civetweb\",\n        \"kernel_description\": \"#1 SMP Mon Dec 3 16:46:15 UTC 2018 (b91289f)\",\n        \"kernel_version\": \"4.12.14-lp150.12.28-default\",\n        \"mem_swap_kb\": \"0\",\n        \"mem_total_kb\": \"11982896\",\n        \"num_handles\": \"1\",\n        \"os\": \"Linux\",\n        \"pid\": \"21429\",\n        \"zone_id\": \"0c97de91-276e-4ed6-9fe6-9b526850ece3\",\n        \"zone_name\": \"default\",\n        \"zonegroup_id\": \"77e5c405-b24b-4b74-9d78-c0a5fd6d13ae\",\n        \"zonegroup_name\": \"default\"\n    },\n    \"rgw_id\": \"rgw\",\n    \"rgw_status\": {\n        \"current_sync\": \"[]\"\n    }\n}"
						}
					]
				},
				{
					"name": "rgw user list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "rgw user list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:20:17 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "85"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "[\n    \"56789abcdef0123456789abcdef0123456789abcdef0123456789abcdef01234\",\n    \"testx$9876543210abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\n    \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\n    \"test\",\n    \"testid\",\n    \"tt\",\n    \"dev\"\n]"
						}
					]
				},
				{
					"name": "rgw user detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/user/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"user",
								"test"
							]
						}
					},
					"response": [
						{
							"name": "rgw user detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/user/test",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"user",
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:20:39 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "214"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"tenant\": \"\",\n    \"user_id\": \"test\",\n    \"display_name\": \"Tester-Subuser\",\n    \"email\": \"\",\n    \"suspended\": 0,\n    \"max_buckets\": 1000,\n    \"system\": false,\n    \"op_mask\": \"read, write, delete\",\n    \"subusers\": [\n        {\n            \"id\": \"test:tester\",\n            \"permissions\": \"full-control\"\n        }\n    ],\n    \"keys\": [],\n    \"swift_keys\": [\n        {\n            \"user\": \"test:tester\",\n            \"secret_key\": \"testing\"\n        }\n    ],\n    \"caps\": [],\n    \"uid\": \"test\"\n}"
						}
					]
				},
				{
					"name": "rgw user quota",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/user/dev/quota",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"user",
								"dev",
								"quota"
							]
						}
					},
					"response": [
						{
							"name": "rgw user quota",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/user/dev/quota",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"user",
										"dev",
										"quota"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:20:49 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "110"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"bucket_quota\": {\n        \"enabled\": false,\n        \"check_on_raw\": false,\n        \"max_size\": -1,\n        \"max_size_kb\": 0,\n        \"max_objects\": -1\n    },\n    \"user_quota\": {\n        \"enabled\": false,\n        \"check_on_raw\": false,\n        \"max_size\": -1,\n        \"max_size_kb\": 0,\n        \"max_objects\": -1\n    }\n}"
						}
					]
				},
				{
					"name": "rgw user delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/user/tt",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"user",
								"tt"
							]
						}
					},
					"response": [
						{
							"name": "rgw user delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/user/tt",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"user",
										"tt"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:55:31 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "rgw user create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/user?uid=tt&display_name=tof9we&suspended=false&email=&max_buckets=1000&generate_key=true&access_key=&secret_key=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"user"
							],
							"query": [
								{
									"key": "uid",
									"value": "tt"
								},
								{
									"key": "display_name",
									"value": "tof9we"
								},
								{
									"key": "suspended",
									"value": "false"
								},
								{
									"key": "email",
									"value": ""
								},
								{
									"key": "max_buckets",
									"value": "1000"
								},
								{
									"key": "generate_key",
									"value": "true"
								},
								{
									"key": "access_key",
									"value": ""
								},
								{
									"key": "secret_key",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "rgw user create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/user?uid=tt&display_name=tof9we&suspended=false&email=&max_buckets=1000&generate_key=true&access_key=&secret_key=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"user"
									],
									"query": [
										{
											"key": "uid",
											"value": "tt"
										},
										{
											"key": "display_name",
											"value": "tof9we"
										},
										{
											"key": "suspended",
											"value": "false"
										},
										{
											"key": "email",
											"value": ""
										},
										{
											"key": "max_buckets",
											"value": "1000"
										},
										{
											"key": "generate_key",
											"value": "true"
										},
										{
											"key": "access_key",
											"value": ""
										},
										{
											"key": "secret_key",
											"value": ""
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "246",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:56:09 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"tenant\": \"\", \"user_id\": \"tt\", \"display_name\": \"tof9we\", \"email\": \"\", \"suspended\": 0, \"max_buckets\": 1000, \"system\": false, \"op_mask\": \"read, write, delete\", \"subusers\": [], \"keys\": [{\"user\": \"tt\", \"access_key\": \"3UM94V046X39099FHJ2C\", \"secret_key\": \"8oCnOR0lyR5nwM68Zc8ZO0O0PDZPFesdYdDPDfbt\"}], \"swift_keys\": [], \"caps\": [], \"uid\": \"tt\"}"
						}
					]
				},
				{
					"name": "rgw bucket list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/bucket",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"bucket"
							]
						}
					},
					"response": [
						{
							"name": "rgw bucket list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/bucket",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"bucket"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "28",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:58:34 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\"test\"]"
						}
					]
				},
				{
					"name": "rgw bucket detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/bucket/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"bucket",
								"test"
							]
						}
					},
					"response": [
						{
							"name": "rgw bucket detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/bucket/test",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"bucket",
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "329",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:58:52 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"bucket\": \"test\", \"tenant\": \"\", \"zonegroup\": \"0899224d-0753-4435-945c-a8df6ad6d349\", \"placement_rule\": \"default-placement\", \"explicit_placement\": {\"data_pool\": \"\", \"data_extra_pool\": \"\", \"index_pool\": \"\"}, \"id\": \"80a83936-c218-443a-9682-df71985048af.34241.1\", \"marker\": \"80a83936-c218-443a-9682-df71985048af.34241.1\", \"index_type\": \"Normal\", \"owner\": \"dev\", \"ver\": \"0#1\", \"master_ver\": \"0#0\", \"mtime\": \"2019-01-08 08:58:17.878844\", \"max_marker\": \"0#\", \"usage\": {}, \"bucket_quota\": {\"enabled\": false, \"check_on_raw\": false, \"max_size\": -1, \"max_size_kb\": 0, \"max_objects\": -1}, \"bid\": \"test\"}"
						}
					]
				},
				{
					"name": "rgw bucket create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/bucket?bucket=test0&uid=tt",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"bucket"
							],
							"query": [
								{
									"key": "bucket",
									"value": "test0"
								},
								{
									"key": "uid",
									"value": "tt"
								}
							]
						}
					},
					"response": [
						{
							"name": "rgw bucket create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/bucket?bucket=test0&uid=tt",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"bucket"
									],
									"query": [
										{
											"key": "bucket",
											"value": "test0"
										},
										{
											"key": "uid",
											"value": "tt"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:59:20 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "rgw bucket change owner",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/bucket/test0?bucket_id=80a83936-c218-443a-9682-df71985048af.34241.2&uid=test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"bucket",
								"test0"
							],
							"query": [
								{
									"key": "bucket_id",
									"value": "80a83936-c218-443a-9682-df71985048af.34241.2"
								},
								{
									"key": "uid",
									"value": "test"
								}
							]
						}
					},
					"response": [
						{
							"name": "rgw bucket change owner",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/bucket/test0?bucket_id=80a83936-c218-443a-9682-df71985048af.34241.2&uid=test",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"bucket",
										"test0"
									],
									"query": [
										{
											"key": "bucket_id",
											"value": "80a83936-c218-443a-9682-df71985048af.34241.2"
										},
										{
											"key": "uid",
											"value": "test"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "22",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:00:39 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				},
				{
					"name": "rgw bucket delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rgw/bucket/test?purge_objects=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rgw",
								"bucket",
								"test"
							],
							"query": [
								{
									"key": "purge_objects",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "rgw bucket delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rgw/bucket/test?purge_objects=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rgw",
										"bucket",
										"test"
									],
									"query": [
										{
											"key": "purge_objects",
											"value": "true"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:01:23 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "cephfs",
			"item": [
				{
					"name": "cephfs info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/cephfs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"cephfs"
							]
						}
					},
					"response": [
						{
							"name": "cephfs info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/cephfs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"cephfs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "682",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:47:02 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"mdsmap\": {\"epoch\": 6, \"flags\": 18, \"ever_allowed_features\": 0, \"explicitly_allowed_features\": 0, \"tableserver\": 0, \"root\": 0, \"session_timeout\": 60, \"session_autoclose\": 300, \"max_file_size\": 1099511627776, \"last_failure\": 0, \"last_failure_osd_epoch\": 0, \"compat\": {\"compat\": {}, \"ro_compat\": {}, \"incompat\": {\"feature_1\": \"base v0.20\", \"feature_2\": \"client writeable ranges\", \"feature_3\": \"default file layouts on dirs\", \"feature_4\": \"dir inode in separate object\", \"feature_5\": \"mds uses versioned encoding\", \"feature_6\": \"dirfrag is stored in omap\", \"feature_8\": \"no anchor table\", \"feature_9\": \"file layout v2\", \"feature_10\": \"snaprealm v2\"}}, \"max_mds\": 1, \"in\": [0], \"up\": {\"mds_0\": 34163}, \"failed\": [], \"damaged\": [], \"stopped\": [], \"info\": {\"gid_34163\": {\"gid\": 34163, \"name\": \"a\", \"rank\": 0, \"incarnation\": 5, \"state_seq\": 4, \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"nonce\": 2648213537, \"addr\": \"10.42.0.1:6813\"}]}, \"standby_for_rank\": -1, \"standby_for_fscid\": -1, \"standby_for_name\": \"\", \"standby_replay\": false, \"export_targets\": [], \"features\": 4611087854031142911, \"state\": \"up:active\", \"addr\": \"10.42.0.1:6813/2648213537\"}}, \"data_pools\": [2], \"metadata_pool\": 1, \"enabled\": true, \"fs_name\": \"a\", \"balancer\": \"\", \"standby_count_wanted\": 1, \"created\": \"2019-01-08 07:53:05.350960\", \"modified\": \"2019-01-08 07:53:06.694651\", \"min_compat_client\": \"-1 (unspecified)\"}, \"id\": 1}]"
						}
					]
				},
				{
					"name": "cephfs detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/cephfs/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"cephfs",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "cephfs detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/cephfs/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"cephfs",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "282",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:47:39 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"cephfs\": {\"id\": 1, \"name\": \"a\", \"client_count\": 0, \"ranks\": [{\"rank\": 0, \"state\": \"active\", \"mds\": \"a\", \"activity\": 0.0, \"dns\": 10, \"inos\": 13}], \"pools\": [{\"pool\": \"cephfs.a.meta\", \"type\": \"metadata\", \"used\": 1572864, \"avail\": 9546390528}, {\"pool\": \"cephfs.a.data\", \"type\": \"data\", \"used\": 0, \"avail\": 9546390528}]}, \"standbys\": [{\"name\": \"c\"}, {\"name\": \"b\"}], \"versions\": {\"ceph version 14.0.1-2176-g41d266b9b9 (41d266b9b957e35f90c4844823d540791a948d1c) nautilus (dev)\": [\"a\", \"c\", \"b\"]}}"
						}
					]
				},
				{
					"name": "cephfs client info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/cephfs/1/clients",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"cephfs",
								"1",
								"clients"
							]
						}
					},
					"response": [
						{
							"name": "cephfs client info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/cephfs/1/clients",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"cephfs",
										"1",
										"clients"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "43",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:48:00 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"status\": 0, \"data\": []}"
						}
					]
				},
				{
					"name": "cephfs counter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/cephfs/1/mds_counters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"cephfs",
								"1",
								"mds_counters"
							]
						}
					},
					"response": [
						{
							"name": "cephfs counter",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/cephfs/1/mds_counters",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"cephfs",
										"1",
										"mds_counters"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "345",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:48:31 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"a\": {\"mds_server.handle_client_request\": [[1546937212, 0], [1546937217, 0], [1546937222, 0], [1546937227, 0], [1546937232, 0], [1546937237, 0], [1546937242, 0], [1546937247, 0], [1546937252, 0], [1546937257, 0], [1546937262, 0], [1546937267, 0], [1546937272, 0], [1546937277, 0], [1546937282, 0], [1546937287, 0], [1546937292, 0], [1546937297, 0], [1546937302, 0], [1546937307, 0]], \"mds_log.ev\": [[1546937212, 1], [1546937217, 1], [1546937222, 1], [1546937227, 1], [1546937232, 1], [1546937237, 1], [1546937242, 1], [1546937247, 1], [1546937252, 1], [1546937257, 1], [1546937262, 1], [1546937267, 1], [1546937272, 1], [1546937277, 1], [1546937282, 1], [1546937287, 1], [1546937292, 1], [1546937297, 1], [1546937302, 1], [1546937307, 1]], \"mds_cache.num_strays\": [[1546937212, 0], [1546937217, 0], [1546937222, 0], [1546937227, 0], [1546937232, 0], [1546937237, 0], [1546937242, 0], [1546937247, 0], [1546937252, 0], [1546937257, 0], [1546937262, 0], [1546937267, 0], [1546937272, 0], [1546937277, 0], [1546937282, 0], [1546937287, 0], [1546937292, 0], [1546937297, 0], [1546937302, 0], [1546937307, 0]], \"mds.exported\": [], \"mds.exported_inodes\": [[1546937212, 0], [1546937217, 0], [1546937222, 0], [1546937227, 0], [1546937232, 0], [1546937237, 0], [1546937242, 0], [1546937247, 0], [1546937252, 0], [1546937257, 0], [1546937262, 0], [1546937267, 0], [1546937272, 0], [1546937277, 0], [1546937282, 0], [1546937287, 0], [1546937292, 0], [1546937297, 0], [1546937302, 0], [1546937307, 0]], \"mds.imported\": [], \"mds.imported_inodes\": [[1546937212, 0], [1546937217, 0], [1546937222, 0], [1546937227, 0], [1546937232, 0], [1546937237, 0], [1546937242, 0], [1546937247, 0], [1546937252, 0], [1546937257, 0], [1546937262, 0], [1546937267, 0], [1546937272, 0], [1546937277, 0], [1546937282, 0], [1546937287, 0], [1546937292, 0], [1546937297, 0], [1546937302, 0], [1546937307, 0]], \"mds.inodes\": [[1546937212, 10], [1546937217, 10], [1546937222, 10], [1546937227, 10], [1546937232, 10], [1546937237, 10], [1546937242, 10], [1546937247, 10], [1546937252, 10], [1546937257, 10], [1546937262, 10], [1546937267, 10], [1546937272, 10], [1546937277, 10], [1546937282, 10], [1546937287, 10], [1546937292, 10], [1546937297, 10], [1546937302, 10], [1546937307, 10]], \"mds.caps\": [[1546937212, 0], [1546937217, 0], [1546937222, 0], [1546937227, 0], [1546937232, 0], [1546937237, 0], [1546937242, 0], [1546937247, 0], [1546937252, 0], [1546937257, 0], [1546937262, 0], [1546937267, 0], [1546937272, 0], [1546937277, 0], [1546937282, 0], [1546937287, 0], [1546937292, 0], [1546937297, 0], [1546937302, 0], [1546937307, 0]], \"mds.subtrees\": [[1546937212, 2], [1546937217, 2], [1546937222, 2], [1546937227, 2], [1546937232, 2], [1546937237, 2], [1546937242, 2], [1546937247, 2], [1546937252, 2], [1546937257, 2], [1546937262, 2], [1546937267, 2], [1546937272, 2], [1546937277, 2], [1546937282, 2], [1546937287, 2], [1546937292, 2], [1546937297, 2], [1546937302, 2], [1546937307, 2]]}}"
						}
					]
				}
			]
		},
		{
			"name": "performance",
			"item": [
				{
					"name": "mgr",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/perf_counters/mgr/x",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"perf_counters",
								"mgr",
								"x"
							]
						}
					},
					"response": [
						{
							"name": "mgr",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/perf_counters/mgr/x",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"perf_counters",
										"mgr",
										"x"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:25:23 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "202"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"service\": {\n        \"type\": \"mgr\",\n        \"id\": \"x\"\n    },\n    \"counters\": [\n        {\n            \"name\": \"objecter-0x555e395570c0.op_active\",\n            \"description\": \"Operations active\",\n            \"value\": 0,\n            \"unit\": \"\"\n        },\n        {\n            \"name\": \"objecter-0x555e395570c0.op_r\",\n            \"description\": \"Read operations\",\n            \"value\": 0,\n            \"unit\": \"/s\"\n        },\n        {\n            \"name\": \"objecter-0x555e395570c0.op_rmw\",\n            \"description\": \"Read-modify-write operations\",\n            \"value\": 0,\n            \"unit\": \"/s\"\n        },\n        {\n            \"name\": \"objecter-0x555e395570c0.op_w\",\n            \"description\": \"Write operations\",\n            \"value\": 0,\n            \"unit\": \"/s\"\n        },\n        {\n            \"name\": \"objecter.op_active\",\n            \"description\": \"Operations active\",\n            \"value\": 0,\n            \"unit\": \"\"\n        },\n        {\n            \"name\": \"objecter.op_r\",\n            \"description\": \"Read operations\",\n            \"value\": 0,\n            \"unit\": \"/s\"\n        },\n        {\n            \"name\": \"objecter.op_rmw\",\n            \"description\": \"Read-modify-write operations\",\n            \"value\": 0,\n            \"unit\": \"/s\"\n        },\n        {\n            \"name\": \"objecter.op_w\",\n            \"description\": \"Write operations\",\n            \"value\": 0,\n            \"unit\": \"/s\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "mon",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/perf_counters/mon/a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"perf_counters",
								"mon",
								"a"
							]
						}
					},
					"response": [
						{
							"name": "host mon.a performance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/perf_counters/mon/a",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"perf_counters",
										"mon",
										"a"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "981",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:03:57 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"service\": {\"type\": \"mon\", \"id\": \"a\"}, \"counters\": [{\"name\": \"mon.election_call\", \"description\": \"Elections started\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mon.election_lose\", \"description\": \"Elections lost\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mon.election_win\", \"description\": \"Elections won\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mon.num_elections\", \"description\": \"Elections participated in\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mon.num_sessions\", \"description\": \"Open sessions\", \"value\": 8, \"unit\": \"\"}, {\"name\": \"mon.session_add\", \"description\": \"Created sessions\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mon.session_rm\", \"description\": \"Removed sessions\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mon.session_trim\", \"description\": \"Trimmed sessions\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.accept_timeout\", \"description\": \"Accept timeouts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.begin\", \"description\": \"Started and handled begins\", \"value\": 0.4, \"unit\": \"/s\"}, {\"name\": \"paxos.begin_bytes\", \"description\": \"Data in transaction on begin\", \"value\": 3183.2, \"unit\": \"B/s\"}, {\"name\": \"paxos.begin_keys\", \"description\": \"Keys in transaction on begin\", \"value\": 1.2, \"unit\": \"/s\"}, {\"name\": \"paxos.begin_latency\", \"description\": \"Latency of begin operation\", \"value\": 799998.0, \"unit\": \"/s\"}, {\"name\": \"paxos.collect\", \"description\": \"Peon collects\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.collect_bytes\", \"description\": \"Data in transaction on peon collect\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"paxos.collect_keys\", \"description\": \"Keys in transaction on peon collect\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.collect_latency\", \"description\": \"Peon collect latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.collect_timeout\", \"description\": \"Collect timeouts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.collect_uncommitted\", \"description\": \"Uncommitted values in started and handled collects\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.commit\", \"description\": \"Commits\", \"value\": 0.4, \"unit\": \"/s\"}, {\"name\": \"paxos.commit_bytes\", \"description\": \"Data in transaction on commit\", \"value\": 3134.8, \"unit\": \"B/s\"}, {\"name\": \"paxos.commit_keys\", \"description\": \"Keys in transaction on commit\", \"value\": 1.6, \"unit\": \"/s\"}, {\"name\": \"paxos.commit_latency\", \"description\": \"Commit latency\", \"value\": 436242.4, \"unit\": \"/s\"}, {\"name\": \"paxos.lease_ack_timeout\", \"description\": \"Lease acknowledgement timeouts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.lease_timeout\", \"description\": \"Lease timeouts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.new_pn\", \"description\": \"New proposal number queries\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.new_pn_latency\", \"description\": \"New proposal number getting latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.refresh\", \"description\": \"Refreshes\", \"value\": 0.4, \"unit\": \"/s\"}, {\"name\": \"paxos.refresh_latency\", \"description\": \"Refresh latency\", \"value\": 3199991.4, \"unit\": \"/s\"}, {\"name\": \"paxos.restart\", \"description\": \"Restarts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.share_state\", \"description\": \"Sharings of state\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.share_state_bytes\", \"description\": \"Data in shared state\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"paxos.share_state_keys\", \"description\": \"Keys in shared state\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.start_leader\", \"description\": \"Starts in leader role\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.start_peon\", \"description\": \"Starts in peon role\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.store_state\", \"description\": \"Store a shared state on disk\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.store_state_bytes\", \"description\": \"Data in transaction in stored state\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"paxos.store_state_keys\", \"description\": \"Keys in transaction in stored state\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"paxos.store_state_latency\", \"description\": \"Storing state latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.compact\", \"description\": \"Compactions\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.compact_queue_len\", \"description\": \"Length of compaction queue\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"rocksdb.compact_queue_merge\", \"description\": \"Mergings of ranges in compaction queue\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.compact_range\", \"description\": \"Compactions by range\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.get\", \"description\": \"Gets\", \"value\": 15.2, \"unit\": \"/s\"}, {\"name\": \"rocksdb.get_latency\", \"description\": \"Get latency\", \"value\": 451621.2, \"unit\": \"/s\"}, {\"name\": \"rocksdb.rocksdb_write_delay_time\", \"description\": \"Rocksdb write delay time\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.rocksdb_write_memtable_time\", \"description\": \"Rocksdb write memtable time\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.rocksdb_write_pre_and_post_time\", \"description\": \"total time spent on writing a record, excluding write process\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.rocksdb_write_wal_time\", \"description\": \"Rocksdb write wal time\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.submit_latency\", \"description\": \"Submit Latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.submit_sync_latency\", \"description\": \"Submit Sync Latency\", \"value\": 1123167.6, \"unit\": \"/s\"}, {\"name\": \"rocksdb.submit_transaction\", \"description\": \"Submit transactions\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rocksdb.submit_transaction_sync\", \"description\": \"Submit transactions sync\", \"value\": 0.8, \"unit\": \"/s\"}]}"
						}
					]
				},
				{
					"name": "osd",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/perf_counters/osd/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"perf_counters",
								"osd",
								"0"
							]
						}
					},
					"response": [
						{
							"name": "host osd.0 performance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/perf_counters/osd/0",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"perf_counters",
										"osd",
										"0"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "1061",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:04:38 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"service\": {\"type\": \"osd\", \"id\": \"0\"}, \"counters\": [{\"name\": \"bluefs.bytes_written_slow\", \"description\": \"Bytes written to WAL/SSTs at slow device\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"bluefs.bytes_written_sst\", \"description\": \"Bytes written to SSTs\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"bluefs.bytes_written_wal\", \"description\": \"Bytes written to WAL\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluefs.db_total_bytes\", \"description\": \"Total bytes (main db device)\", \"value\": 67100672, \"unit\": \"\"}, {\"name\": \"bluefs.db_used_bytes\", \"description\": \"Used bytes (main db device)\", \"value\": 8380416, \"unit\": \"\"}, {\"name\": \"bluefs.log_bytes\", \"description\": \"Size of the metadata log\", \"value\": 4005888, \"unit\": \"\"}, {\"name\": \"bluefs.logged_bytes\", \"description\": \"Bytes written to the metadata log\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"bluefs.num_files\", \"description\": \"File count\", \"value\": 10, \"unit\": \"\"}, {\"name\": \"bluefs.slow_total_bytes\", \"description\": \"Total bytes (slow device)\", \"value\": 1073741824, \"unit\": \"\"}, {\"name\": \"bluefs.slow_used_bytes\", \"description\": \"Used bytes (slow device)\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"bluefs.wal_total_bytes\", \"description\": \"Total bytes (wal device)\", \"value\": 1048571904, \"unit\": \"\"}, {\"name\": \"bluefs.wal_used_bytes\", \"description\": \"Used bytes (wal device)\", \"value\": 11530240, \"unit\": \"\"}, {\"name\": \"bluestore.commit_lat\", \"description\": \"Average commit latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.kv_final_lat\", \"description\": \"Average kv_finalize thread latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.kv_flush_lat\", \"description\": \"Average kv_thread flush latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.kv_sync_lat\", \"description\": \"Average kv_sync thread latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.read_lat\", \"description\": \"Average read latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.state_aio_wait_lat\", \"description\": \"Average aio_wait state latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.submit_lat\", \"description\": \"Average submit latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"bluestore.throttle_lat\", \"description\": \"Average submit throttle latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_active\", \"description\": \"Operations active\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"objecter.op_r\", \"description\": \"Read operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_rmw\", \"description\": \"Read-modify-write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_w\", \"description\": \"Write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.numpg\", \"description\": \"Placement groups\", \"value\": 48, \"unit\": \"\"}, {\"name\": \"osd.numpg_removing\", \"description\": \"Placement groups queued for local deletion\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"osd.op\", \"description\": \"Client operations\", \"value\": 0.6, \"unit\": \"/s\"}, {\"name\": \"osd.op_in_bytes\", \"description\": \"Client operations total write size\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"osd.op_latency\", \"description\": \"Latency of client operations (including queue time)\", \"value\": 1621339.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_out_bytes\", \"description\": \"Client operations total read size\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"osd.op_prepare_latency\", \"description\": \"Latency of client operations (excluding queue time and wait for finished)\", \"value\": 664260.4, \"unit\": \"/s\"}, {\"name\": \"osd.op_process_latency\", \"description\": \"Latency of client operations (excluding queue time)\", \"value\": 551571.4, \"unit\": \"/s\"}, {\"name\": \"osd.op_r\", \"description\": \"Client read operations\", \"value\": 0.6, \"unit\": \"/s\"}, {\"name\": \"osd.op_r_latency\", \"description\": \"Latency of read operation (including queue time)\", \"value\": 1621339.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_r_latency_out_bytes_histogram\", \"description\": \"Histogram of operation latency (including queue time) + data read\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"osd.op_r_out_bytes\", \"description\": \"Client data read\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"osd.op_r_prepare_latency\", \"description\": \"Latency of read operations (excluding queue time and wait for finished)\", \"value\": 664260.4, \"unit\": \"/s\"}, {\"name\": \"osd.op_r_process_latency\", \"description\": \"Latency of read operation (excluding queue time)\", \"value\": 551571.4, \"unit\": \"/s\"}, {\"name\": \"osd.op_rw\", \"description\": \"Client read-modify-write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_rw_in_bytes\", \"description\": \"Client read-modify-write operations write in\", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"osd.op_rw_latency\", \"description\": \"Latency of read-modify-write operation (including queue time)\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_rw_latency_in_bytes_histogram\", \"description\": \"Histogram of rw operation latency (including queue time) + data written\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"osd.op_rw_latency_out_bytes_histogram\", \"description\": \"Histogram of rw operation latency (including queue time) + data read\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"osd.op_rw_out_bytes\", \"description\": \"Client read-modify-write operations read out \", \"value\": 0.0, \"unit\": \"B/s\"}, {\"name\": \"osd.op_rw_prepare_latency\", \"description\": \"Latency of read-modify-write operations (excluding queue time and wait for finished)\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_rw_process_latency\", \"description\": \"Latency of read-modify-write operation (excluding queue time)\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_w\", \"description\": \"Client write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_w_in_bytes\", \"description\": \"Client data written\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_w_latency\", \"description\": \"Latency of write operation (including queue time)\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_w_latency_in_bytes_histogram\", \"description\": \"Histogram of operation latency (including queue time) + data written\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"osd.op_w_prepare_latency\", \"description\": \"Latency of write operations (excluding queue time and wait for finished)\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_w_process_latency\", \"description\": \"Latency of write operation (excluding queue time)\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.op_wip\", \"description\": \"Replication operations currently being processed (primary)\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"osd.recovery_bytes\", \"description\": \"recovery bytes\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.recovery_ops\", \"description\": \"Started recovery operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"osd.stat_bytes\", \"description\": \"OSD size\", \"value\": 10804518912, \"unit\": \"\"}, {\"name\": \"osd.stat_bytes_used\", \"description\": \"Used space\", \"value\": 1145954304, \"unit\": \"\"}]}"
						}
					]
				},
				{
					"name": "mds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/perf_counters/mds/a",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"perf_counters",
								"mds",
								"a"
							]
						}
					},
					"response": [
						{
							"name": "cephfs mds.a performance ",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/perf_counters/mds/a",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"perf_counters",
										"mds",
										"a"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "1582",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:02:19 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"service\": {\"type\": \"mds\", \"id\": \"a\"}, \"counters\": [{\"name\": \"mds.caps\", \"description\": \"Capabilities\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds.dir_commit\", \"description\": \"Directory commit\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.dir_fetch\", \"description\": \"Directory fetch\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.dir_merge\", \"description\": \"Directory merge\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.dir_split\", \"description\": \"Directory split\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.exported_inodes\", \"description\": \"Exported inodes\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.forward\", \"description\": \"Forwarding request\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.imported_inodes\", \"description\": \"Imported inodes\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.inode_max\", \"description\": \"Max inodes, cache size\", \"value\": 2147483647, \"unit\": \"\"}, {\"name\": \"mds.inodes\", \"description\": \"Inodes\", \"value\": 10, \"unit\": \"\"}, {\"name\": \"mds.inodes_expired\", \"description\": \"Inodes expired\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds.inodes_pinned\", \"description\": \"Inodes pinned\", \"value\": 10, \"unit\": \"\"}, {\"name\": \"mds.inodes_with_caps\", \"description\": \"Inodes with capabilities\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds.load_cent\", \"description\": \"Load per cent\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds.openino_dir_fetch\", \"description\": \"OpenIno incomplete directory fetchings\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.reply_latency\", \"description\": \"Reply latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.request\", \"description\": \"Requests\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds.subtrees\", \"description\": \"Subtrees\", \"value\": 2, \"unit\": \"\"}, {\"name\": \"mds_cache.ireq_enqueue_scrub\", \"description\": \"Internal Request type enqueue scrub\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.ireq_exportdir\", \"description\": \"Internal Request type export dir\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.ireq_flush\", \"description\": \"Internal Request type flush\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.ireq_fragmentdir\", \"description\": \"Internal Request type fragmentdir\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.ireq_fragstats\", \"description\": \"Internal Request type frag stats\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.ireq_inodestats\", \"description\": \"Internal Request type inode stats\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.num_recovering_enqueued\", \"description\": \"Files waiting for recovery\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_cache.num_recovering_prioritized\", \"description\": \"Files waiting for recovery with elevated priority\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_cache.num_recovering_processing\", \"description\": \"Files currently being recovered\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_cache.num_strays\", \"description\": \"Stray dentries\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_cache.num_strays_delayed\", \"description\": \"Stray dentries delayed\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_cache.num_strays_enqueuing\", \"description\": \"Stray dentries enqueuing for purge\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_cache.recovery_completed\", \"description\": \"File recoveries completed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.recovery_started\", \"description\": \"File recoveries started\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.strays_created\", \"description\": \"Stray dentries created\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.strays_enqueued\", \"description\": \"Stray dentries enqueued for purge\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.strays_migrated\", \"description\": \"Stray dentries migrated\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_cache.strays_reintegrated\", \"description\": \"Stray dentries reintegrated\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.ev\", \"description\": \"Events\", \"value\": 1, \"unit\": \"\"}, {\"name\": \"mds_log.evadd\", \"description\": \"Events submitted\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.evex\", \"description\": \"Total expired events\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.evexd\", \"description\": \"Current expired events\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_log.evexg\", \"description\": \"Expiring events\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_log.evtrm\", \"description\": \"Trimmed events\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.jlat\", \"description\": \"Journaler flush latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.replayed\", \"description\": \"Events replayed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.seg\", \"description\": \"Segments\", \"value\": 1, \"unit\": \"\"}, {\"name\": \"mds_log.segadd\", \"description\": \"Segments added\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.segex\", \"description\": \"Total expired segments\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_log.segexd\", \"description\": \"Current expired segments\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_log.segexg\", \"description\": \"Expiring segments\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_log.segtrm\", \"description\": \"Trimmed segments\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.cap\", \"description\": \"Capabilities\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_mem.cap+\", \"description\": \"Capabilities added\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.cap-\", \"description\": \"Capabilities removed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.dir\", \"description\": \"Directories\", \"value\": 12, \"unit\": \"\"}, {\"name\": \"mds_mem.dir+\", \"description\": \"Directories opened\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.dir-\", \"description\": \"Directories closed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.dn\", \"description\": \"Dentries\", \"value\": 10, \"unit\": \"\"}, {\"name\": \"mds_mem.dn+\", \"description\": \"Dentries opened\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.dn-\", \"description\": \"Dentries closed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.heap\", \"description\": \"Heap size\", \"value\": 305972, \"unit\": \"\"}, {\"name\": \"mds_mem.ino\", \"description\": \"Inodes\", \"value\": 13, \"unit\": \"\"}, {\"name\": \"mds_mem.ino+\", \"description\": \"Inodes opened\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_mem.ino-\", \"description\": \"Inodes closed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.cap_revoke_eviction\", \"description\": \"Cap Revoke Client Eviction\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.handle_client_request\", \"description\": \"Client requests\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.handle_client_session\", \"description\": \"Client session messages\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.handle_slave_request\", \"description\": \"Slave requests\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_create_latency\", \"description\": \"Request type create latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_getattr_latency\", \"description\": \"Request type get attribute latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_getfilelock_latency\", \"description\": \"Request type get file lock latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_link_latency\", \"description\": \"Request type link latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lookup_latency\", \"description\": \"Request type lookup latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lookuphash_latency\", \"description\": \"Request type lookup hash of inode latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lookupino_latency\", \"description\": \"Request type lookup inode latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lookupname_latency\", \"description\": \"Request type lookup name latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lookupparent_latency\", \"description\": \"Request type lookup parent latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lookupsnap_latency\", \"description\": \"Request type lookup snapshot latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_lssnap_latency\", \"description\": \"Request type list snapshot latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_mkdir_latency\", \"description\": \"Request type make directory latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_mknod_latency\", \"description\": \"Request type make node latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_mksnap_latency\", \"description\": \"Request type make snapshot latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_open_latency\", \"description\": \"Request type open latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_readdir_latency\", \"description\": \"Request type read directory latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_rename_latency\", \"description\": \"Request type rename latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_renamesnap_latency\", \"description\": \"Request type rename snapshot latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_rmdir_latency\", \"description\": \"Request type remove directory latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_rmsnap_latency\", \"description\": \"Request type remove snapshot latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_rmxattr_latency\", \"description\": \"Request type remove extended attribute latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_setattr_latency\", \"description\": \"Request type set attribute latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_setdirlayout_latency\", \"description\": \"Request type set directory layout latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_setfilelock_latency\", \"description\": \"Request type set file lock latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_setlayout_latency\", \"description\": \"Request type set file layout latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_setxattr_latency\", \"description\": \"Request type set extended attribute latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_symlink_latency\", \"description\": \"Request type symbolic link latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_server.req_unlink_latency\", \"description\": \"Request type unlink latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_sessions.average_load\", \"description\": \"Average Load\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_sessions.avg_session_uptime\", \"description\": \"Average session uptime\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_sessions.session_add\", \"description\": \"Sessions added\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_sessions.session_count\", \"description\": \"Session count\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_sessions.session_remove\", \"description\": \"Sessions removed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"mds_sessions.sessions_open\", \"description\": \"Sessions currently open\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_sessions.sessions_stale\", \"description\": \"Sessions currently stale\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"mds_sessions.total_load\", \"description\": \"Total Load\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"objecter.op_active\", \"description\": \"Operations active\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"objecter.op_r\", \"description\": \"Read operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_rmw\", \"description\": \"Read-modify-write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_w\", \"description\": \"Write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"purge_queue.pq_executed\", \"description\": \"Purge queue tasks executed\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"purge_queue.pq_executing\", \"description\": \"Purge queue tasks in flight\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"purge_queue.pq_executing_ops\", \"description\": \"Purge queue ops in flight\", \"value\": 0, \"unit\": \"\"}]}"
						}
					]
				},
				{
					"name": "rgw",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/perf_counters/rgw/rgw",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"perf_counters",
								"rgw",
								"rgw"
							]
						}
					},
					"response": [
						{
							"name": "rgw.rgw performance",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/perf_counters/rgw/rgw",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"perf_counters",
										"rgw",
										"rgw"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "391",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:00:58 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"service\": {\"type\": \"rgw\", \"id\": \"rgw\"}, \"counters\": [{\"name\": \"objecter-0x558237c9a080.op_active\", \"description\": \"Operations active\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"objecter-0x558237c9a080.op_r\", \"description\": \"Read operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter-0x558237c9a080.op_rmw\", \"description\": \"Read-modify-write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter-0x558237c9a080.op_w\", \"description\": \"Write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_active\", \"description\": \"Operations active\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"objecter.op_r\", \"description\": \"Read operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_rmw\", \"description\": \"Read-modify-write operations\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"objecter.op_w\", \"description\": \"Write operations\", \"value\": 1.6, \"unit\": \"/s\"}, {\"name\": \"rgw.cache_hit\", \"description\": \"Cache hits\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.cache_miss\", \"description\": \"Cache miss\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.failed_req\", \"description\": \"Aborted requests\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.get\", \"description\": \"Gets\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.get_b\", \"description\": \"Size of gets\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.get_initial_lat\", \"description\": \"Get latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.keystone_token_cache_hit\", \"description\": \"Keystone token cache hits\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.keystone_token_cache_miss\", \"description\": \"Keystone token cache miss\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.put\", \"description\": \"Puts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.put_b\", \"description\": \"Size of puts\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.put_initial_lat\", \"description\": \"Put latency\", \"value\": 0.0, \"unit\": \"/s\"}, {\"name\": \"rgw.qactive\", \"description\": \"Active requests queue\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"rgw.qlen\", \"description\": \"Queue length\", \"value\": 0, \"unit\": \"\"}, {\"name\": \"rgw.req\", \"description\": \"Requests\", \"value\": 0.0, \"unit\": \"/s\"}]}"
						}
					]
				}
			]
		},
		{
			"name": "log",
			"item": [
				{
					"name": "logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/logs/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"logs",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "logs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/logs/all",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"logs",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "1001",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:13:06 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"clog\": [{\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 08:00:00.000564\", \"seq\": 193, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"overall HEALTH_OK\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:05.707158\", \"seq\": 130, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"daemon mds.a is now active in filesystem a as rank 0\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:05.351016\", \"seq\": 126, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"daemon mds.a assigned to filesystem a as rank 0\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:57.032943\", \"seq\": 100, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"osd.2 10.42.0.1:6809/12126 boot\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:48.337734\", \"seq\": 78, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"osd.1 10.42.0.1:6805/11817 boot\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:39.431569\", \"seq\": 62, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"osd.0 10.42.0.1:6801/11508 boot\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:27.699400\", \"seq\": 31, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"Manager daemon x is now available\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:27.648045\", \"seq\": 27, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"Activating manager daemon x\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:23.601443\", \"seq\": 22, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"overall HEALTH_OK\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:52:23.581619\", \"seq\": 17, \"channel\": \"cluster\", \"priority\": \"[INF]\", \"message\": \"mon.a is new leader, mons a,b,c in quorum (ranks 0,1,2)\"}], \"audit_log\": [{\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:58:36.395402\", \"seq\": 174, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd='[{\\\"prefix\\\":\\\"config-key set\\\",\\\"key\\\":\\\"mgr/dashboard/jwt_token_black_list\\\",\\\"val\\\":\\\"{\\\\\\\"d6c8199f-4bb8-4e5a-8062-204cf217862d\\\\\\\": 1546963039}\\\"}]': finished\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:58:36.366041\", \"seq\": 173, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd=[{\\\"prefix\\\":\\\"config-key set\\\",\\\"key\\\":\\\"mgr/dashboard/jwt_token_black_list\\\",\\\"val\\\":\\\"{\\\\\\\"d6c8199f-4bb8-4e5a-8062-204cf217862d\\\\\\\": 1546963039}\\\"}]: dispatch\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:57:15.497172\", \"seq\": 160, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd='[{\\\"prefix\\\":\\\"config-key set\\\",\\\"key\\\":\\\"mgr/dashboard/jwt_secret\\\",\\\"val\\\":\\\"ex4AbzUiaOct2TmN1UYXqw==\\\"}]': finished\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:57:15.477571\", \"seq\": 159, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd=[{\\\"prefix\\\":\\\"config-key set\\\",\\\"key\\\":\\\"mgr/dashboard/jwt_secret\\\",\\\"val\\\":\\\"ex4AbzUiaOct2TmN1UYXqw==\\\"}]: dispatch\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:20.851187\", \"seq\": 158, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd='[{\\\"prefix\\\":\\\"config set\\\",\\\"who\\\":\\\"mgr\\\",\\\"name\\\":\\\"mgr/dashboard/RGW_API_SECRET_KEY\\\",\\\"value\\\":\\\"pcOToUROuEMXDLisfLgmcPRPAtLkkawV1dOVctVW\\\"}]': finished\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:20.819711\", \"seq\": 157, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd=[{\\\"prefix\\\":\\\"config set\\\",\\\"who\\\":\\\"mgr\\\",\\\"name\\\":\\\"mgr/dashboard/RGW_API_SECRET_KEY\\\",\\\"value\\\":\\\"pcOToUROuEMXDLisfLgmcPRPAtLkkawV1dOVctVW\\\"}]: dispatch\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:19.776744\", \"seq\": 156, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd='[{\\\"prefix\\\":\\\"config set\\\",\\\"who\\\":\\\"mgr\\\",\\\"name\\\":\\\"mgr/dashboard/RGW_API_ACCESS_KEY\\\",\\\"value\\\":\\\"X5WVAOJFW718AZWZNEDQ\\\"}]': finished\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:19.752397\", \"seq\": 155, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd=[{\\\"prefix\\\":\\\"config set\\\",\\\"who\\\":\\\"mgr\\\",\\\"name\\\":\\\"mgr/dashboard/RGW_API_ACCESS_KEY\\\",\\\"value\\\":\\\"X5WVAOJFW718AZWZNEDQ\\\"}]: dispatch\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:18.562320\", \"seq\": 154, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd='[{\\\"prefix\\\":\\\"config set\\\",\\\"who\\\":\\\"mgr\\\",\\\"name\\\":\\\"mgr/dashboard/RGW_API_USER_ID\\\",\\\"value\\\":\\\"dev\\\"}]': finished\"}, {\"name\": \"mon.a\", \"rank\": \"mon.0\", \"addrs\": {\"addrvec\": [{\"type\": \"legacy\", \"addr\": \"10.42.0.1:40413\", \"nonce\": 0}]}, \"stamp\": \"2019-01-08 07:53:18.528773\", \"seq\": 153, \"channel\": \"audit\", \"priority\": \"[INF]\", \"message\": \"from='mgr.34100 10.42.0.1:43650/11128' entity='mgr.x' cmd=[{\\\"prefix\\\":\\\"config set\\\",\\\"who\\\":\\\"mgr\\\",\\\"name\\\":\\\"mgr/dashboard/RGW_API_USER_ID\\\",\\\"value\\\":\\\"dev\\\"}]: dispatch\"}]}"
						}
					]
				}
			]
		},
		{
			"name": "pool",
			"item": [
				{
					"name": "pools info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/pool",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"pool"
							]
						}
					},
					"response": [
						{
							"name": "pools info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/pool",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"pool"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:35:03 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "854"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"pool\": 1,\n        \"pool_name\": \"cephfs.a.meta\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"cephfs\"\n        ],\n        \"create_time\": \"2019-01-08 09:59:08.509726\",\n        \"last_change\": \"15\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    },\n    {\n        \"pool\": 2,\n        \"pool_name\": \"cephfs.a.data\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"cephfs\"\n        ],\n        \"create_time\": \"2019-01-08 09:59:09.169541\",\n        \"last_change\": \"16\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    },\n    {\n        \"pool\": 3,\n        \"pool_name\": \".rgw.root\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"rgw\"\n        ],\n        \"create_time\": \"2019-01-08 09:59:11.058803\",\n        \"last_change\": \"17\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    },\n    {\n        \"pool\": 4,\n        \"pool_name\": \"default.rgw.control\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"rgw\"\n        ],\n        \"create_time\": \"2019-01-08 09:59:12.762467\",\n        \"last_change\": \"19\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    },\n    {\n        \"pool\": 5,\n        \"pool_name\": \"default.rgw.meta\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"rgw\"\n        ],\n        \"create_time\": \"2019-01-08 09:59:14.894627\",\n        \"last_change\": \"21\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    },\n    {\n        \"pool\": 6,\n        \"pool_name\": \"default.rgw.log\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"rgw\"\n        ],\n        \"create_time\": \"2019-01-08 09:59:16.810709\",\n        \"last_change\": \"23\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    },\n    {\n        \"pool\": 7,\n        \"pool_name\": \"default.rgw.buckets.index\",\n        \"flags\": 1,\n        \"flags_names\": \"hashpspool\",\n        \"type\": \"replicated\",\n        \"size\": 3,\n        \"min_size\": 1,\n        \"crush_rule\": \"replicated_rule\",\n        \"object_hash\": 2,\n        \"pg_autoscale_mode\": \"warn\",\n        \"pg_num\": 8,\n        \"pg_placement_num\": 8,\n        \"pg_placement_num_target\": 8,\n        \"pg_num_target\": 8,\n        \"pg_num_pending\": 8,\n        \"pg_num_dec_last_epoch_started\": 0,\n        \"pg_num_dec_last_epoch_clean\": 0,\n        \"auid\": 0,\n        \"snap_mode\": \"selfmanaged\",\n        \"snap_seq\": 0,\n        \"snap_epoch\": 0,\n        \"pool_snaps\": [],\n        \"quota_max_bytes\": 0,\n        \"quota_max_objects\": 0,\n        \"tiers\": [],\n        \"tier_of\": -1,\n        \"read_tier\": -1,\n        \"write_tier\": -1,\n        \"cache_mode\": \"none\",\n        \"target_max_bytes\": 0,\n        \"target_max_objects\": 0,\n        \"cache_target_dirty_ratio_micro\": 400000,\n        \"cache_target_dirty_high_ratio_micro\": 600000,\n        \"cache_target_full_ratio_micro\": 800000,\n        \"cache_min_flush_age\": 0,\n        \"cache_min_evict_age\": 0,\n        \"erasure_code_profile\": \"\",\n        \"hit_set_params\": {\n            \"type\": \"none\"\n        },\n        \"hit_set_period\": 0,\n        \"hit_set_count\": 0,\n        \"use_gmt_hitset\": true,\n        \"min_read_recency_for_promote\": 0,\n        \"min_write_recency_for_promote\": 0,\n        \"hit_set_grade_decay_rate\": 0,\n        \"hit_set_search_last_n\": 0,\n        \"grade_table\": [],\n        \"stripe_width\": 0,\n        \"expected_num_objects\": 0,\n        \"fast_read\": false,\n        \"options\": {},\n        \"application_metadata\": [\n            \"rgw\"\n        ],\n        \"create_time\": \"2019-01-08 10:04:24.199696\",\n        \"last_change\": \"26\",\n        \"last_force_op_resend\": \"0\",\n        \"last_force_op_resend_prenautilus\": \"0\",\n        \"last_force_op_resend_preluminous\": \"0\",\n        \"removed_snaps\": \"[]\"\n    }\n]"
						}
					]
				},
				{
					"name": "pool detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/pool/cephfs.a.data",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"pool",
								"cephfs.a.data"
							]
						}
					},
					"response": [
						{
							"name": "pool detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/pool/cephfs.a.data",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"pool",
										"cephfs.a.data"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:35:14 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "601"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"pool\": 2,\n    \"pool_name\": \"cephfs.a.data\",\n    \"flags\": 1,\n    \"flags_names\": \"hashpspool\",\n    \"type\": \"replicated\",\n    \"size\": 3,\n    \"min_size\": 1,\n    \"crush_rule\": \"replicated_rule\",\n    \"object_hash\": 2,\n    \"pg_autoscale_mode\": \"warn\",\n    \"pg_num\": 8,\n    \"pg_placement_num\": 8,\n    \"pg_placement_num_target\": 8,\n    \"pg_num_target\": 8,\n    \"pg_num_pending\": 8,\n    \"pg_num_dec_last_epoch_started\": 0,\n    \"pg_num_dec_last_epoch_clean\": 0,\n    \"auid\": 0,\n    \"snap_mode\": \"selfmanaged\",\n    \"snap_seq\": 0,\n    \"snap_epoch\": 0,\n    \"pool_snaps\": [],\n    \"quota_max_bytes\": 0,\n    \"quota_max_objects\": 0,\n    \"tiers\": [],\n    \"tier_of\": -1,\n    \"read_tier\": -1,\n    \"write_tier\": -1,\n    \"cache_mode\": \"none\",\n    \"target_max_bytes\": 0,\n    \"target_max_objects\": 0,\n    \"cache_target_dirty_ratio_micro\": 400000,\n    \"cache_target_dirty_high_ratio_micro\": 600000,\n    \"cache_target_full_ratio_micro\": 800000,\n    \"cache_min_flush_age\": 0,\n    \"cache_min_evict_age\": 0,\n    \"erasure_code_profile\": \"\",\n    \"hit_set_params\": {\n        \"type\": \"none\"\n    },\n    \"hit_set_period\": 0,\n    \"hit_set_count\": 0,\n    \"use_gmt_hitset\": true,\n    \"min_read_recency_for_promote\": 0,\n    \"min_write_recency_for_promote\": 0,\n    \"hit_set_grade_decay_rate\": 0,\n    \"hit_set_search_last_n\": 0,\n    \"grade_table\": [],\n    \"stripe_width\": 0,\n    \"expected_num_objects\": 0,\n    \"fast_read\": false,\n    \"options\": {},\n    \"application_metadata\": [\n        \"cephfs\"\n    ],\n    \"create_time\": \"2019-01-08 09:59:09.169541\",\n    \"last_change\": \"16\",\n    \"last_force_op_resend\": \"0\",\n    \"last_force_op_resend_prenautilus\": \"0\",\n    \"last_force_op_resend_preluminous\": \"0\",\n    \"removed_snaps\": \"[]\"\n}"
						}
					]
				},
				{
					"name": "pool create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"pool\":\"test\",\"pool_type\":\"erasure\",\"pg_num\":128,\"erasure_code_profile\":\"default\"}"
						},
						"url": {
							"raw": "http://localhost:4200/api/pool",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"pool"
							]
						}
					},
					"response": [
						{
							"name": "pool create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"pool\":\"test\",\"pool_type\":\"erasure\",\"pg_num\":128,\"erasure_code_profile\":\"default\"}"
								},
								"url": {
									"raw": "http://localhost:4200/api/pool",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"pool"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:35:32 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "24"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "pool update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"pg_num\":128,\"compression_mode\":\"aggressive\",\"application_metadata\":[\"rbd\"]}"
						},
						"url": {
							"raw": "http://localhost:4200/api/pool/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"pool",
								"test"
							]
						}
					},
					"response": [
						{
							"name": "pool update",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"pg_num\":128,\"compression_mode\":\"aggressive\",\"application_metadata\":[\"rbd\"]}"
								},
								"url": {
									"raw": "http://localhost:4200/api/pool/test",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"pool",
										"test"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:35:42 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "65"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"pool/edit\",\n    \"metadata\": {\n        \"pool_name\": \"test\"\n    }\n}"
						}
					]
				},
				{
					"name": "pool delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/pool/test",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"pool",
								"test"
							]
						}
					},
					"response": [
						{
							"name": "pool delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/pool/test",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"pool",
										"test"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1"
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 10:35:56 GMT"
								},
								{
									"key": "vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "block",
			"item": [
				{
					"name": "image create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"features\":[\"deep-flatten\",\"layering\",\"exclusive-lock\",\"object-map\",\"fast-diff\"],\"pool_name\":\"test\",\"name\":\"test-block\",\"size\":536870912,\"obj_size\":4194304,\"stripe_unit\":null,\"stripe_count\":null,\"data_pool\":null}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image"
							]
						}
					},
					"response": [
						{
							"name": "image create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"features\":[\"deep-flatten\",\"layering\",\"exclusive-lock\",\"object-map\",\"fast-diff\"],\"pool_name\":\"test\",\"name\":\"test-block\",\"size\":536870912,\"obj_size\":4194304,\"stripe_unit\":null,\"stripe_count\":null,\"data_pool\":null}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:25:19 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "images info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image"
							]
						}
					},
					"response": [
						{
							"name": "images info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "304",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:26:23 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"status\": 0, \"value\": [{\"size\": 536870912, \"obj_size\": 4194304, \"num_objs\": 128, \"order\": 22, \"block_name_prefix\": \"rbd_data.10dac67df212\", \"name\": \"test-block\", \"id\": \"10dac67df212\", \"pool_name\": \"test\", \"features\": 61, \"features_name\": [\"deep-flatten\", \"exclusive-lock\", \"fast-diff\", \"layering\", \"object-map\"], \"timestamp\": \"2019-01-08T08:25:19Z\", \"stripe_count\": 1, \"stripe_unit\": 4194304, \"data_pool\": null, \"parent\": null, \"snapshots\": [], \"total_disk_usage\": 0, \"disk_usage\": 0}], \"pool_name\": \"test\"}]"
						}
					]
				},
				{
					"name": "image trash info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/trash/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"trash",
								""
							]
						}
					},
					"response": [
						{
							"name": "image trash info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/trash/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"trash",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "64",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:26:44 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"status\": 0, \"value\": [], \"pool_name\": \"test\"}]"
						}
					]
				},
				{
					"name": "image rollback from snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap3/rollback",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block",
								"snap",
								"test-block-snap3",
								"rollback"
							]
						}
					},
					"response": [
						{
							"name": "image rollback from snapshot",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap3/rollback",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block",
										"snap",
										"test-block-snap3",
										"rollback"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:37:52 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "image flatten",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block-snap3-clone1/flatten",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block-snap3-clone1",
								"flatten"
							]
						}
					},
					"response": [
						{
							"name": "image flatten",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block-snap3-clone1/flatten",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block-snap3-clone1",
										"flatten"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:40:06 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "image delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block-snap3-clone1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block-snap3-clone1"
							]
						}
					},
					"response": [
						{
							"name": "image delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block-snap3-clone1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block-snap3-clone1"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:41:10 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "image move to trash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"delay\":0}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block-snap3-clone0/move_trash",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block-snap3-clone0",
								"move_trash"
							]
						}
					},
					"response": [
						{
							"name": "image moveto trash",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"delay\":0}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block-snap3-clone0/move_trash",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block-snap3-clone0",
										"move_trash"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:42:13 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "image trash restore",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"new_image_name\":\"test-block-snap3-clone0\"}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/trash/test/10da8b718cb9/restore",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"trash",
								"test",
								"10da8b718cb9",
								"restore"
							]
						}
					},
					"response": [
						{
							"name": "image trash restore",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"new_image_name\":\"test-block-snap3-clone0\"}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/trash/test/10da8b718cb9/restore",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"trash",
										"test",
										"10da8b718cb9",
										"restore"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:43:08 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			]
		},
		{
			"name": "snapshot",
			"item": [
				{
					"name": "image snapshot rename",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"new_snap_name\":\"test-block-snap3\"}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block",
								"snap",
								"test-block-snap2"
							]
						}
					},
					"response": [
						{
							"name": "image snapshot rename",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"new_snap_name\":\"test-block-snap3\"}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block",
										"snap",
										"test-block-snap2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:31:57 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "image snapshot protect",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"is_protected\":true}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block",
								"snap",
								"test-block-snap3"
							]
						}
					},
					"response": []
				},
				{
					"name": "image snapshot create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"snapshot_name\":\"test-block-snap1\"}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block/snap",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block",
								"snap"
							]
						}
					},
					"response": [
						{
							"name": "image snapshot create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"snapshot_name\":\"test-block-snap1\"}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block/snap",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block",
										"snap"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:30:47 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "image from snapshot clone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"features\":[\"deep-flatten\",\"layering\",\"exclusive-lock\",\"object-map\",\"fast-diff\"],\"child_pool_name\":\"test\",\"child_image_name\":\"test-block-snap3-clone1\",\"obj_size\":4194304,\"stripe_unit\":4194304,\"stripe_count\":1,\"data_pool\":null}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap3/clone",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block",
								"snap",
								"test-block-snap3",
								"clone"
							]
						}
					},
					"response": [
						{
							"name": "image from snapshot clone",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"features\":[\"deep-flatten\",\"layering\",\"exclusive-lock\",\"object-map\",\"fast-diff\"],\"child_pool_name\":\"test\",\"child_image_name\":\"test-block-snap3-clone1\",\"obj_size\":4194304,\"stripe_unit\":4194304,\"stripe_count\":1,\"data_pool\":null}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block/snap/test-block-snap3/clone",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block",
										"snap",
										"test-block-snap3",
										"clone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:34:56 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "image from snapshot copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"features\":[\"deep-flatten\",\"layering\",\"exclusive-lock\",\"object-map\",\"fast-diff\"],\"snapshot_name\":\"test-block-snap3\",\"dest_pool_name\":\"test\",\"dest_image_name\":\"test-block-snap3-copy1\",\"obj_size\":4194304,\"stripe_unit\":4194304,\"stripe_count\":1,\"data_pool\":null}"
						},
						"url": {
							"raw": "http://localhost:4200/api/block/image/test/test-block/copy",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"block",
								"image",
								"test",
								"test-block",
								"copy"
							]
						}
					},
					"response": [
						{
							"name": "image from snapshot copy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"features\":[\"deep-flatten\",\"layering\",\"exclusive-lock\",\"object-map\",\"fast-diff\"],\"snapshot_name\":\"test-block-snap3\",\"dest_pool_name\":\"test\",\"dest_image_name\":\"test-block-snap3-copy1\",\"obj_size\":4194304,\"stripe_unit\":4194304,\"stripe_count\":1,\"data_pool\":null}"
								},
								"url": {
									"raw": "http://localhost:4200/api/block/image/test/test-block/copy",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"block",
										"image",
										"test",
										"test-block",
										"copy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "24",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:36:42 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			]
		},
		{
			"name": "rbd",
			"item": [
				{
					"name": "rbd mirror info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/rbdmirror",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"rbdmirror"
							]
						}
					},
					"response": [
						{
							"name": "rbd mirror info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/rbdmirror",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"rbdmirror"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "99",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:45:34 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"status\": 0, \"content_data\": {\"daemons\": [], \"pools\": [], \"image_error\": [], \"image_syncing\": [], \"image_ready\": []}}"
						}
					]
				}
			]
		},
		{
			"name": "iscsi",
			"item": [
				{
					"name": "iSCSI info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/tcmuiscsi",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"tcmuiscsi"
							]
						}
					},
					"response": [
						{
							"name": "iSCSI info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/tcmuiscsi",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"tcmuiscsi"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "44",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 08:46:13 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"daemons\": [], \"images\": []}"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "user list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "user list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "149",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:03:09 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"username\": \"admin\", \"roles\": [\"administrator\"], \"name\": null, \"email\": null, \"lastUpdate\": 1546933949}, {\"username\": \"test\", \"roles\": [\"read-only\"], \"name\": \"ttodk\", \"email\": \"hap@gmail.com\", \"lastUpdate\": 1546938183}]"
						}
					]
				},
				{
					"name": "user create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"test1\",\"password\":\"test1\",\"name\":\"ttodk1\",\"email\":\"hap@gmail1.com\",\"roles\":[\"read-only\"]}"
						},
						"url": {
							"raw": "http://localhost:4200/api/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "user create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"username\":\"test1\",\"password\":\"test1\",\"name\":\"ttodk1\",\"email\":\"hap@gmail1.com\",\"roles\":[\"read-only\"]}"
								},
								"url": {
									"raw": "http://localhost:4200/api/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "115",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:03:51 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"username\": \"test1\", \"roles\": [\"read-only\"], \"name\": \"ttodk1\", \"email\": \"hap@gmail1.com\", \"lastUpdate\": 1546938231}"
						}
					]
				},
				{
					"name": "user update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"test1\",\"password\":\"\",\"name\":\"tt\",\"email\":\"hap@gm.com\",\"roles\":[\"pool-manager\"]}"
						},
						"url": {
							"raw": "http://localhost:4200/api/user/test1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"user",
								"test1"
							]
						}
					},
					"response": [
						{
							"name": "user update",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"username\":\"test1\",\"password\":\"\",\"name\":\"tt\",\"email\":\"hap@gm.com\",\"roles\":[\"pool-manager\"]}"
								},
								"url": {
									"raw": "http://localhost:4200/api/user/test1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"user",
										"test1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "113",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:04:41 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"username\": \"test1\", \"roles\": [\"pool-manager\"], \"name\": \"tt\", \"email\": \"hap@gm.com\", \"lastUpdate\": 1546938281}"
						}
					]
				},
				{
					"name": "user role datail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"role"
							]
						}
					},
					"response": [
						{
							"name": "user role datail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/role",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"role"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "428",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:05:21 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[{\"name\": \"administrator\", \"description\": \"Administrator\", \"scopes_permissions\": {\"cephfs\": [\"create\", \"delete\", \"read\", \"update\"], \"config-opt\": [\"create\", \"delete\", \"read\", \"update\"], \"dashboard-settings\": [\"create\", \"delete\", \"read\", \"update\"], \"grafana\": [\"create\", \"delete\", \"read\", \"update\"], \"hosts\": [\"create\", \"delete\", \"read\", \"update\"], \"iscsi\": [\"create\", \"delete\", \"read\", \"update\"], \"log\": [\"create\", \"delete\", \"read\", \"update\"], \"manager\": [\"create\", \"delete\", \"read\", \"update\"], \"monitor\": [\"create\", \"delete\", \"read\", \"update\"], \"osd\": [\"create\", \"delete\", \"read\", \"update\"], \"pool\": [\"create\", \"delete\", \"read\", \"update\"], \"rbd-image\": [\"create\", \"delete\", \"read\", \"update\"], \"rbd-mirroring\": [\"create\", \"delete\", \"read\", \"update\"], \"rgw\": [\"create\", \"delete\", \"read\", \"update\"], \"user\": [\"create\", \"delete\", \"read\", \"update\"]}, \"system\": true}, {\"name\": \"block-manager\", \"description\": \"Block Manager\", \"scopes_permissions\": {\"rbd-image\": [\"read\", \"create\", \"update\", \"delete\"], \"pool\": [\"read\"], \"iscsi\": [\"read\", \"create\", \"update\", \"delete\"], \"rbd-mirroring\": [\"read\", \"create\", \"update\", \"delete\"]}, \"system\": true}, {\"name\": \"cephfs-manager\", \"description\": \"CephFS Manager\", \"scopes_permissions\": {\"cephfs\": [\"read\", \"create\", \"update\", \"delete\"], \"config-opt\": [\"read\"]}, \"system\": true}, {\"name\": \"cluster-manager\", \"description\": \"Cluster Manager\", \"scopes_permissions\": {\"hosts\": [\"read\", \"create\", \"update\", \"delete\"], \"osd\": [\"read\", \"create\", \"update\", \"delete\"], \"monitor\": [\"read\", \"create\", \"update\", \"delete\"], \"manager\": [\"read\", \"create\", \"update\", \"delete\"], \"config-opt\": [\"read\", \"create\", \"update\", \"delete\"], \"log\": [\"read\", \"create\", \"update\", \"delete\"]}, \"system\": true}, {\"name\": \"pool-manager\", \"description\": \"Pool Manager\", \"scopes_permissions\": {\"pool\": [\"read\", \"create\", \"update\", \"delete\"], \"config-opt\": [\"read\"]}, \"system\": true}, {\"name\": \"read-only\", \"description\": \"Read-Only\", \"scopes_permissions\": {\"cephfs\": [\"read\"], \"config-opt\": [\"read\"], \"grafana\": [\"read\"], \"hosts\": [\"read\"], \"iscsi\": [\"read\"], \"log\": [\"read\"], \"manager\": [\"read\"], \"monitor\": [\"read\"], \"osd\": [\"read\"], \"pool\": [\"read\"], \"rbd-image\": [\"read\"], \"rbd-mirroring\": [\"read\"], \"rgw\": [\"read\"], \"user\": [\"read\"]}, \"system\": true}, {\"name\": \"rgw-manager\", \"description\": \"RGW Manager\", \"scopes_permissions\": {\"rgw\": [\"read\", \"create\", \"update\", \"delete\"], \"config-opt\": [\"read\"]}, \"system\": true}]"
						}
					]
				},
				{
					"name": "user detail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/user/test1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"user",
								"test1"
							]
						}
					},
					"response": [
						{
							"name": "user detail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/user/test1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"user",
										"test1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "113",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:06:30 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"username\": \"test1\", \"roles\": [\"pool-manager\"], \"name\": \"tt\", \"email\": \"hap@gm.com\", \"lastUpdate\": 1546938281}"
						}
					]
				},
				{
					"name": "user delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/user/test1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"user",
								"test1"
							]
						}
					},
					"response": [
						{
							"name": "user delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/user/test",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"user",
										"test"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:07:14 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "user role create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"test-role\",\"description\":\"\",\"scopes_permissions\":{\"config-opt\":[\"read\",\"update\",\"delete\"],\"hosts\":[\"read\",\"create\",\"delete\"]}}"
						},
						"url": {
							"raw": "http://localhost:4200/api/role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"role"
							]
						}
					},
					"response": [
						{
							"name": "user role create",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"test-role\",\"description\":\"\",\"scopes_permissions\":{\"config-opt\":[\"read\",\"update\",\"delete\"],\"hosts\":[\"read\",\"create\",\"delete\"]}}"
								},
								"url": {
									"raw": "http://localhost:4200/api/role",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"role"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "133",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:08:50 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"name\": \"test-role\", \"description\": \"\", \"scopes_permissions\": {\"config-opt\": [\"delete\", \"read\", \"update\"], \"hosts\": [\"create\", \"delete\", \"read\"]}, \"system\": false}"
						}
					]
				},
				{
					"name": "user role delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/role/test-role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"role",
								"test-role"
							]
						}
					},
					"response": [
						{
							"name": "user role delete",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4200/api/role/test-role",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"role",
										"test-role"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:09:10 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "user role update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "Origin",
								"value": "http://localhost:4200",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"test-role\",\"description\":\"\",\"scopes_permissions\":{\"dashboard-settings\":[\"delete\",\"read\"],\"monitor\":[\"delete\",\"update\"],\"config-opt\":[\"create\"]}}"
						},
						"url": {
							"raw": "http://localhost:4200/api/role/test-role",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"role",
								"test-role"
							]
						}
					},
					"response": [
						{
							"name": "user role update",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"disabled": true
									},
									{
										"key": "Origin",
										"value": "http://localhost:4200",
										"disabled": true
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Referer",
										"value": "http://localhost:4200/",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"test-role\",\"description\":\"\",\"scopes_permissions\":{\"dashboard-settings\":[\"delete\",\"read\"],\"monitor\":[\"delete\",\"update\"],\"config-opt\":[\"create\"]}}"
								},
								"url": {
									"raw": "http://localhost:4200/api/role/test-role",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4200",
									"path": [
										"api",
										"role",
										"test-role"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*",
									"name": "access-control-allow-origin",
									"description": ""
								},
								{
									"key": "connection",
									"value": "close",
									"name": "connection",
									"description": ""
								},
								{
									"key": "content-encoding",
									"value": "gzip",
									"name": "content-encoding",
									"description": ""
								},
								{
									"key": "content-length",
									"value": "142",
									"name": "content-length",
									"description": ""
								},
								{
									"key": "content-type",
									"value": "application/json",
									"name": "content-type",
									"description": ""
								},
								{
									"key": "date",
									"value": "Tue, 08 Jan 2019 09:11:07 GMT",
									"name": "date",
									"description": ""
								},
								{
									"key": "server",
									"value": "CherryPy/10.2.1",
									"name": "server",
									"description": ""
								},
								{
									"key": "vary",
									"value": "Accept-Encoding",
									"name": "vary",
									"description": ""
								},
								{
									"key": "x-powered-by",
									"value": "Express",
									"name": "x-powered-by",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\"name\": \"test-role\", \"description\": \"\", \"scopes_permissions\": {\"dashboard-settings\": [\"delete\", \"read\"], \"monitor\": [\"delete\", \"update\"], \"config-opt\": [\"create\"]}, \"system\": false}"
						}
					]
				}
			]
		},
		{
			"name": "erasure_code_profile",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
						"disabled": true
					},
					{
						"key": "Referer",
						"value": "http://localhost:4200/",
						"disabled": true
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"disabled": true
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:4200/api/erasure_code_profile",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4200",
					"path": [
						"api",
						"erasure_code_profile"
					]
				}
			},
			"response": [
				{
					"name": "erasure_code_profile",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/api/erasure_code_profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"api",
								"erasure_code_profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "access-control-allow-origin",
							"value": "*",
							"name": "access-control-allow-origin",
							"description": ""
						},
						{
							"key": "connection",
							"value": "close",
							"name": "connection",
							"description": ""
						},
						{
							"key": "content-encoding",
							"value": "gzip",
							"name": "content-encoding",
							"description": ""
						},
						{
							"key": "content-length",
							"value": "114",
							"name": "content-length",
							"description": ""
						},
						{
							"key": "content-type",
							"value": "application/json",
							"name": "content-type",
							"description": ""
						},
						{
							"key": "date",
							"value": "Tue, 08 Jan 2019 08:20:12 GMT",
							"name": "date",
							"description": ""
						},
						{
							"key": "server",
							"value": "CherryPy/10.2.1",
							"name": "server",
							"description": ""
						},
						{
							"key": "vary",
							"value": "Accept-Encoding",
							"name": "vary",
							"description": ""
						},
						{
							"key": "x-powered-by",
							"value": "Express",
							"name": "x-powered-by",
							"description": ""
						}
					],
					"cookie": [],
					"body": "[{\"crush-failure-domain\": \"osd\", \"k\": 2, \"m\": 1, \"plugin\": \"jerasure\", \"technique\": \"reed_sol_van\", \"name\": \"default\"}]"
				}
			]
		},
		{
			"name": "ui-api scope",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"disabled": true
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
						"disabled": true
					},
					{
						"key": "Referer",
						"value": "http://localhost:4200/",
						"disabled": true
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"disabled": true
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:4200/ui-api/scope",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4200",
					"path": [
						"ui-api",
						"scope"
					]
				}
			},
			"response": [
				{
					"name": "ui-api scope",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json, text/plain, */*",
								"disabled": true
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:4200/",
								"disabled": true
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"disabled": true
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjQwMWYxY2NlLWU3ZTEtNGQ4MC1iZGM5LTgzZmI4MzQ3OWE2ZSIsImV4cCI6MTU0Njk2MzExNywiaWF0IjoxNTQ2OTM0MzE3LCJ1c2VybmFtZSI6ImFkbWluIn0.SN1EBrwPDkuxRDv5HzyeclIyiTpePmUGLEIXHf3b5Ic"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:4200/ui-api/scope",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4200",
							"path": [
								"ui-api",
								"scope"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "access-control-allow-origin",
							"value": "*",
							"name": "access-control-allow-origin",
							"description": ""
						},
						{
							"key": "connection",
							"value": "close",
							"name": "connection",
							"description": ""
						},
						{
							"key": "content-encoding",
							"value": "gzip",
							"name": "content-encoding",
							"description": ""
						},
						{
							"key": "content-length",
							"value": "124",
							"name": "content-length",
							"description": ""
						},
						{
							"key": "content-type",
							"value": "application/json",
							"name": "content-type",
							"description": ""
						},
						{
							"key": "date",
							"value": "Tue, 08 Jan 2019 09:06:06 GMT",
							"name": "date",
							"description": ""
						},
						{
							"key": "server",
							"value": "CherryPy/10.2.1",
							"name": "server",
							"description": ""
						},
						{
							"key": "vary",
							"value": "Accept-Encoding",
							"name": "vary",
							"description": ""
						},
						{
							"key": "x-powered-by",
							"value": "Express",
							"name": "x-powered-by",
							"description": ""
						}
					],
					"cookie": [],
					"body": "[\"cephfs\", \"config-opt\", \"dashboard-settings\", \"grafana\", \"hosts\", \"iscsi\", \"log\", \"manager\", \"monitor\", \"osd\", \"pool\", \"rbd-image\", \"rbd-mirroring\", \"rgw\", \"user\"]"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6IjA3MDIzZWEzLTBiNmUtNGUzMS05MmFkLWE2ZDkyOGI1MGNlOCIsImV4cCI6MTU0Njk3MDQ2NiwiaWF0IjoxNTQ2OTQxNjY2LCJ1c2VybmFtZSI6ImFkbWluIn0.xvpI7Q8ePbA4XVXBSjt8NwK6aVibS51JTB2MFVheFVc",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "06366804-dbad-4273-a14c-8d5275cd4d80",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2196cd33-220c-4a3e-9e6a-e93207866e7a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c02b5112-b173-4958-bb0a-854d2a5eff81",
			"key": "username",
			"value": "admin",
			"type": "string"
		},
		{
			"id": "acb394e4-a6e6-4156-b3ff-d94eb642756e",
			"key": "password",
			"value": "admin",
			"type": "string"
		},
		{
			"id": "ae767937-bdf1-4fb9-a207-d81aa97f6369",
			"key": "Authorization",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjZXBoLWRhc2hib2FyZCIsImp0aSI6Ijk4YzAxOTg5LTI0MDAtNDFmOC04Mjk5LWM1OWNlNTZjZmZlNSIsImV4cCI6MTU0Njk2MDgyNSwiaWF0IjoxNTQ2OTMyMDI1LCJ1c2VybmFtZSI6ImFkbWluIn0.JTJNJrLEdsVo0IARSsjxDTN0iD7PtgnuKO1pTlXeoLQ",
			"type": "string",
			"disabled": true
		}
	]
}